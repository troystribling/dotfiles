"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
exports.embed = async ({ kind, version }) => {
    switch (kind) {
        case "vega":
            switch (version) {
                case "2": return await Promise.resolve().then(() => __importStar(require("./vg2vl1"))).then(({ embed }) => (anchor, spec, options) => util_1.promisify(embed)(anchor, Object.assign(Object.assign({}, options), { spec: spec })));
                case "3": return await Promise.resolve().then(() => __importStar(require("./vg3vl1"))).then(({ embed }) => embed);
                case "4": return await Promise.resolve().then(() => __importStar(require("./vg4vl2"))).then(({ embed }) => embed);
                case "5": return await Promise.resolve().then(() => __importStar(require("./vg5vl4"))).then(({ embed }) => embed);
            }
            break;
        case "vega-lite":
            switch (version) {
                case "1": return await Promise.resolve().then(() => __importStar(require("./vg2vl1"))).then(({ embed }) => (anchor, spec, options) => util_1.promisify(embed)(anchor, Object.assign(Object.assign({}, options), { spec: spec })));
                case "2": return await Promise.resolve().then(() => __importStar(require("./vg4vl2"))).then(({ embed }) => embed);
                case "3": return await Promise.resolve().then(() => __importStar(require("./vg5vl3"))).then(({ embed }) => embed);
                case "4": return await Promise.resolve().then(() => __importStar(require("./vg5vl4"))).then(({ embed }) => embed);
            }
            break;
    }
};
