import * as Immutable from "immutable";
import { ContentRef } from "../../refs";
export interface DirectoryModelRecordProps {
    type: "directory";
    sortedBy?: "created" | "lastSaved" | "type" | "name";
    groupedBy?: "type" | "mimetype";
    items: Immutable.List<ContentRef>;
}
export declare const makeDirectoryModel: Immutable.Record.Factory<DirectoryModelRecordProps>;
export declare type DirectoryModelRecord = Immutable.RecordOf<DirectoryModelRecordProps>;
export interface DirectoryContentRecordProps {
    mimetype: null;
    type: "directory";
    created: Date | null;
    format: "json";
    lastSaved: Date | null;
    filepath: string;
    model: DirectoryModelRecord;
    saving: boolean;
    loading: boolean;
    error?: object | null;
}
export declare const makeDirectoryContentRecord: Immutable.Record.Factory<DirectoryContentRecordProps>;
export declare type DirectoryContentRecord = Immutable.RecordOf<DirectoryContentRecordProps>;
