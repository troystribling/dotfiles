import * as Immutable from "immutable";
export interface EmptyModelRecordProps {
    type: "unknown";
}
export declare const makeEmptyModel: Immutable.Record.Factory<EmptyModelRecordProps>;
export declare type EmptyModelRecord = Immutable.RecordOf<EmptyModelRecordProps>;
export declare type NotebookTypes = "unknown" | "directory" | "notebook" | "file";
export interface DummyContentRecordProps {
    type: "dummy";
    assumedType: NotebookTypes;
    mimetype?: string | null;
    lastSaved: null;
    filepath: string;
    model: EmptyModelRecord;
    saving: boolean;
    loading: boolean;
    error?: object | null;
}
export declare const makeDummyContentRecord: Immutable.Record.Factory<DummyContentRecordProps>;
export declare type DummyContentRecord = Immutable.RecordOf<DummyContentRecordProps>;
