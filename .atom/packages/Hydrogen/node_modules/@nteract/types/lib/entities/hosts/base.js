"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ofHostType = void 0;
const rxjs_1 = require("rxjs");
/**
 * An RxJS operator for determining if the host that is currently
 * set as the current host in the state is of a particular type.
 *
 * @param hostType  The host type to filter by
 */
exports.ofHostType = (...hostTypes) => (source) => {
    // Switch to the splat mode
    if (hostTypes.length === 1 && Array.isArray(hostTypes[0])) {
        return exports.ofHostType(...hostTypes[0]);
    }
    return new rxjs_1.Observable((observer) => source.subscribe({
        next(state) {
            const host = state.core.app.host;
            if (host && hostTypes.indexOf(host.type) !== -1) {
                return observer.next(state);
            }
        },
        error(err) {
            observer.error(err);
        },
        complete() {
            observer.complete();
        }
    }));
};
//# sourceMappingURL=base.js.map