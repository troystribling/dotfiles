"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeKernelsRecord = exports.makeRemoteKernelRecord = exports.makeLocalKernelRecord = exports.KernelStatus = exports.makeKernelNotStartedRecord = void 0;
const Immutable = __importStar(require("immutable"));
const rxjs_1 = require("rxjs");
exports.makeKernelNotStartedRecord = Immutable.Record({
    kernelSpecName: null,
    status: null,
    type: "unknown",
    cwd: ".",
    channels: new rxjs_1.Subject(),
    info: null
});
var KernelStatus;
(function (KernelStatus) {
    /** Kernel is currently executing code. */
    KernelStatus["Busy"] = "busy";
    /** Kernel is currently not executing code. */
    KernelStatus["Idle"] = "idle";
    /** Kernel process is being launched. */
    KernelStatus["Starting"] = "starting";
    /** Kernel is being shut down. */
    KernelStatus["ShuttingDown"] = "shutting down";
    /** Kernel is restarting. */
    KernelStatus["Restarting"] = "restarting";
    /** Kernel's current execution process has been interrupted. */
    KernelStatus["Interrupted"] = "interrupted";
    /** Kernel is not connected to current notebook. */
    KernelStatus["NotConnected"] = "not connected";
    /** 0mq-based kernel is launched. */
    KernelStatus["Launched"] = "launched";
    /** 0mq-based kernel is killed. */
    KernelStatus["Killed"] = "killed";
    /** Kernel is in an failed or error state. */
    KernelStatus["Error"] = "error";
})(KernelStatus = exports.KernelStatus || (exports.KernelStatus = {}));
exports.makeLocalKernelRecord = Immutable.Record({
    type: "zeromq",
    cwd: ".",
    info: null,
    kernelSpecName: null,
    hostRef: null,
    lastActivity: null,
    channels: new rxjs_1.Subject(),
    status: null,
    spawn: null,
    connectionFile: null
});
exports.makeRemoteKernelRecord = Immutable.Record({
    type: "websocket",
    info: null,
    cwd: ".",
    id: null,
    kernelSpecName: null,
    hostRef: null,
    lastActivity: null,
    channels: new rxjs_1.Subject(),
    sessionId: null,
    status: null
});
exports.makeKernelsRecord = Immutable.Record({
    byRef: Immutable.Map()
});
//# sourceMappingURL=kernels.js.map