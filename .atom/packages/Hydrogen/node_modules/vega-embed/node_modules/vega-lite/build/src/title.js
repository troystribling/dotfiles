"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
function extractTitleConfig(titleConfig) {
    var 
    // These are non-mark title config that need to be hardcoded
    anchor = titleConfig.anchor, offset = titleConfig.offset, orient = titleConfig.orient, 
    // color needs to be redirect to fill
    color = titleConfig.color, 
    // The rest are mark config.
    titleMarkConfig = tslib_1.__rest(titleConfig, ["anchor", "offset", "orient", "color"]);
    var mark = tslib_1.__assign({}, titleMarkConfig, color ? { fill: color } : {});
    var nonMark = tslib_1.__assign({}, anchor ? { anchor: anchor } : {}, offset ? { offset: offset } : {}, orient ? { orient: orient } : {});
    return { mark: mark, nonMark: nonMark };
}
exports.extractTitleConfig = extractTitleConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdGl0bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBd0NBLDRCQUFtQyxXQUEwQjtJQU16RDtJQURBLDREQUE0RDtJQUM1RCwyQkFBTSxFQUFFLDJCQUFNLEVBQUUsMkJBQU07SUFDdEIscUNBQXFDO0lBQ3JDLHlCQUFLO0lBQ0wsNEJBQTRCO0lBQzVCLHNGQUFrQixDQUNKO0lBRWhCLElBQU0sSUFBSSx3QkFDTCxlQUFlLEVBQ2YsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUM5QixDQUFDO0lBRUYsSUFBTSxPQUFPLHdCQUNSLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQzFCLENBQUM7SUFFRixPQUFPLEVBQUMsSUFBSSxNQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUMsQ0FBQztBQUN6QixDQUFDO0FBekJELGdEQXlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QW5jaG9yLCBUaXRsZU9yaWVudCwgVmdNYXJrQ29uZmlnLCBWZ1RpdGxlQ29uZmlnfSBmcm9tICcuL3ZlZ2Euc2NoZW1hJztcblxuZXhwb3J0IGludGVyZmFjZSBUaXRsZUJhc2Uge1xuICAvKipcbiAgICogVGhlIG9yaWVudGF0aW9uIG9mIHRoZSB0aXRsZSByZWxhdGl2ZSB0byB0aGUgY2hhcnQuIE9uZSBvZiBgXCJ0b3BcImAgKHRoZSBkZWZhdWx0KSwgYFwiYm90dG9tXCJgLCBgXCJsZWZ0XCJgLCBvciBgXCJyaWdodFwiYC5cbiAgICovXG4gIG9yaWVudD86IFRpdGxlT3JpZW50O1xuXG4gIC8qKlxuICAgKiBUaGUgYW5jaG9yIHBvc2l0aW9uIGZvciBwbGFjaW5nIHRoZSB0aXRsZS4gT25lIG9mIGBcInN0YXJ0XCJgLCBgXCJtaWRkbGVcImAsIG9yIGBcImVuZFwiYC4gRm9yIGV4YW1wbGUsIHdpdGggYW4gb3JpZW50YXRpb24gb2YgdG9wIHRoZXNlIGFuY2hvciBwb3NpdGlvbnMgbWFwIHRvIGEgbGVmdC0sIGNlbnRlci0sIG9yIHJpZ2h0LWFsaWduZWQgdGl0bGUuXG4gICAqXG4gICAqIF9fRGVmYXVsdCB2YWx1ZTpfXyBgXCJtaWRkbGVcImAgZm9yIFtzaW5nbGVdKGh0dHBzOi8vdmVnYS5naXRodWIuaW8vdmVnYS1saXRlL2RvY3Mvc3BlYy5odG1sKSBhbmQgW2xheWVyZWRdKGh0dHBzOi8vdmVnYS5naXRodWIuaW8vdmVnYS1saXRlL2RvY3MvbGF5ZXIuaHRtbCkgdmlld3MuXG4gICAqIGBcInN0YXJ0XCJgIGZvciBvdGhlciBjb21wb3NpdGUgdmlld3MuXG4gICAqXG4gICAqIF9fTm90ZTpfXyBbRm9yIG5vd10oaHR0cHM6Ly9naXRodWIuY29tL3ZlZ2EvdmVnYS1saXRlL2lzc3Vlcy8yODc1KSwgYGFuY2hvcmAgaXMgb25seSBjdXN0b21pemFibGUgb25seSBmb3IgW3NpbmdsZV0oaHR0cHM6Ly92ZWdhLmdpdGh1Yi5pby92ZWdhLWxpdGUvZG9jcy9zcGVjLmh0bWwpIGFuZCBbbGF5ZXJlZF0oaHR0cHM6Ly92ZWdhLmdpdGh1Yi5pby92ZWdhLWxpdGUvZG9jcy9sYXllci5odG1sKSB2aWV3cy4gIEZvciBvdGhlciBjb21wb3NpdGUgdmlld3MsIGBhbmNob3JgIGlzIGFsd2F5cyBgXCJzdGFydFwiYC5cbiAgICovXG4gIGFuY2hvcj86IEFuY2hvcjtcblxuICAvKipcbiAgICogVGhlIG9ydGhvZ29uYWwgb2Zmc2V0IGluIHBpeGVscyBieSB3aGljaCB0byBkaXNwbGFjZSB0aGUgdGl0bGUgZnJvbSBpdHMgcG9zaXRpb24gYWxvbmcgdGhlIGVkZ2Ugb2YgdGhlIGNoYXJ0LlxuICAgKi9cbiAgb2Zmc2V0PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBBIFttYXJrIHN0eWxlIHByb3BlcnR5XShodHRwczovL3ZlZ2EuZ2l0aHViLmlvL3ZlZ2EtbGl0ZS9kb2NzL2NvbmZpZy5odG1sI3N0eWxlKSB0byBhcHBseSB0byB0aGUgdGl0bGUgdGV4dCBtYXJrLlxuICAgKlxuICAgKiBfX0RlZmF1bHQgdmFsdWU6X18gYFwiZ3JvdXAtdGl0bGVcImAuXG4gICAqL1xuICBzdHlsZT86IHN0cmluZyB8IHN0cmluZ1tdO1xuXG4gIC8vIFRPRE86IG5hbWUsIGVuY29kZSwgaW50ZXJhY3RpdmUsIHppbmRleFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRpdGxlUGFyYW1zIGV4dGVuZHMgVGl0bGVCYXNlIHtcbiAgLyoqXG4gICAqIFRoZSB0aXRsZSB0ZXh0LlxuICAgKi9cbiAgdGV4dDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFRpdGxlQ29uZmlnKHRpdGxlQ29uZmlnOiBWZ1RpdGxlQ29uZmlnKToge1xuICBtYXJrOiBWZ01hcmtDb25maWcsXG4gIG5vbk1hcms6IFRpdGxlQmFzZVxufSB7XG4gIGNvbnN0IHtcbiAgICAvLyBUaGVzZSBhcmUgbm9uLW1hcmsgdGl0bGUgY29uZmlnIHRoYXQgbmVlZCB0byBiZSBoYXJkY29kZWRcbiAgICBhbmNob3IsIG9mZnNldCwgb3JpZW50LFxuICAgIC8vIGNvbG9yIG5lZWRzIHRvIGJlIHJlZGlyZWN0IHRvIGZpbGxcbiAgICBjb2xvcixcbiAgICAvLyBUaGUgcmVzdCBhcmUgbWFyayBjb25maWcuXG4gICAgLi4udGl0bGVNYXJrQ29uZmlnXG4gIH0gPSB0aXRsZUNvbmZpZztcblxuICBjb25zdCBtYXJrOiBWZ01hcmtDb25maWcgPSB7XG4gICAgLi4udGl0bGVNYXJrQ29uZmlnLFxuICAgIC4uLmNvbG9yID8ge2ZpbGw6IGNvbG9yfSA6IHt9XG4gIH07XG5cbiAgY29uc3Qgbm9uTWFyazogVGl0bGVCYXNlID0ge1xuICAgIC4uLmFuY2hvciA/IHthbmNob3J9IDoge30sXG4gICAgLi4ub2Zmc2V0ID8ge29mZnNldH0gOiB7fSxcbiAgICAuLi5vcmllbnQgPyB7b3JpZW50fSA6IHt9XG4gIH07XG5cbiAgcmV0dXJuIHttYXJrLCBub25NYXJrfTtcbn1cbiJdfQ==