#!/usr/bin/env node
// Compile a Vega-Lite spec to Vega

'use strict';

const helpText = `Compile a Vega-Lite spec to Vega.

Usage: vl2vg [vega_lite_json_file] [output_vega_json_file]
  If no arguments are provided, reads from stdin.
  If output_vega_json_file is not provided, writes to stdout.`;

// import required libraries
const {createWriteStream, readFile} = require('fs');
const vl = require('../build/vega-lite');
const compactStringify = require('json-stringify-pretty-compact');

// arguments
const args = require('yargs')
  .usage(helpText)
  .demand(0);

args
  .boolean('p')
  .alias('p', 'pretty')
  .describe('p', 'Output human readable/pretty spec.');

const argv = args.help().version().argv;

// input file
const specFile = argv._[0] || '/dev/stdin';

// load spec, compile vg spec
readFile(specFile, 'utf8', function(err, text) {
  if (err) {
    throw err;
  }
  const spec = JSON.parse(text);
  compile(spec);
});

function compile(vlSpec) {
  const result = vl.compile(vlSpec);

  // TODO: deal with errors
  const vgSpec = result.spec;

  const file = argv._[1] || null;
  const out = file ? createWriteStream(file) : process.stdout;
  if (argv.p) {
    out.write(compactStringify(vgSpec) + '\n');
  } else {
    out.write(JSON.stringify(vgSpec) + '\n');
  }
}
