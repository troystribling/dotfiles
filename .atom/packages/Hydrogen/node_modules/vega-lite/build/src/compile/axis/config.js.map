{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/compile/axis/config.ts"],"names":[],"mappings":"AAIA,MAAM,UAAU,aAAa,CAC3B,QAAgB,EAChB,MAAc,EACd,OAA6B,EAC7B,MAAc,EACd,SAAoB;IAEpB,uDAAuD;IACvD,MAAM,WAAW,GAAG;QAClB,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7C,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;QAEnC,2BAA2B;QAC3B,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClF,MAAM;KACP,CAAC;IACF,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;YACpE,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;SACrC;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["import {PositionScaleChannel} from '../../channel';\nimport {Config} from '../../config';\nimport {ScaleType} from '../../scale';\n\nexport function getAxisConfig(\n  property: string,\n  config: Config,\n  channel: PositionScaleChannel,\n  orient: string,\n  scaleType: ScaleType\n) {\n  // configTypes to loop, starting from higher precedence\n  const configTypes = [\n    ...(scaleType === 'band' ? ['axisBand'] : []),\n    channel === 'x' ? 'axisX' : 'axisY',\n\n    // axisTop, axisBottom, ...\n    ...(orient ? ['axis' + orient.substr(0, 1).toUpperCase() + orient.substr(1)] : []),\n    'axis'\n  ];\n  for (const configType of configTypes) {\n    if (config[configType] && config[configType][property] !== undefined) {\n      return config[configType][property];\n    }\n  }\n\n  return undefined;\n}\n"]}