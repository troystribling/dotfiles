{"version":3,"file":"clear.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/clear.ts"],"names":[],"mappings":"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","sourcesContent":["import {Update} from 'vega';\nimport {selector as parseSelector} from 'vega-event-selector';\nimport {TUPLE} from '..';\nimport {varName} from '../../../util';\nimport inputBindings from './inputs';\nimport toggle, {TOGGLE} from './toggle';\nimport {TransformCompiler} from './transforms';\n\nconst clear: TransformCompiler = {\n  has: selCmpt => {\n    return selCmpt.clear !== false;\n  },\n\n  parse: (model, selDef, selCmpt) => {\n    if (selDef.clear) {\n      selCmpt.clear = parseSelector(selDef.clear, 'scope');\n    }\n  },\n\n  topLevelSignals: (model, selCmpt, signals) => {\n    if (inputBindings.has(selCmpt)) {\n      selCmpt.project.items.forEach(proj => {\n        const idx = signals.findIndex(n => n.name === varName(`${selCmpt.name}_${proj.field}`));\n        if (idx !== -1) {\n          signals[idx].on.push({events: selCmpt.clear, update: 'null'});\n        }\n      });\n    }\n\n    return signals;\n  },\n\n  signals: (model, selCmpt, signals) => {\n    function addClear(idx: number, update: Update) {\n      if (idx !== -1 && signals[idx].on) {\n        signals[idx].on.push({events: selCmpt.clear, update});\n      }\n    }\n\n    // Be as minimalist as possible when adding clear triggers to minimize dataflow execution.\n    if (selCmpt.type === 'interval') {\n      selCmpt.project.items.forEach(proj => {\n        const vIdx = signals.findIndex(n => n.name === proj.signals.visual);\n        addClear(vIdx, '[0, 0]');\n\n        if (vIdx === -1) {\n          const dIdx = signals.findIndex(n => n.name === proj.signals.data);\n          addClear(dIdx, 'null');\n        }\n      });\n    } else {\n      let tIdx = signals.findIndex(n => n.name === selCmpt.name + TUPLE);\n      addClear(tIdx, 'null');\n\n      if (toggle.has(selCmpt)) {\n        tIdx = signals.findIndex(n => n.name === selCmpt.name + TOGGLE);\n        addClear(tIdx, 'false');\n      }\n    }\n\n    return signals;\n  }\n};\n\nexport default clear;\n"]}