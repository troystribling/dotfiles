{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/transforms.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,IAAI,MAAM,QAAQ,CAAC;AAW1B,MAAM,SAAS,GAAwB,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAE1G,MAAM,UAAU,gBAAgB,CAAC,OAA2B,EAAE,EAAmC;IAC/F,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE;QACzB,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YAClB,EAAE,CAAC,CAAC,CAAC,CAAC;SACP;KACF;AACH,CAAC","sourcesContent":["import {NewSignal, Signal} from 'vega';\nimport {SelectionComponent} from '..';\nimport {SelectionDef} from '../../../selection';\nimport {Model} from '../../model';\nimport {UnitModel} from '../../unit';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\n\nexport interface TransformCompiler {\n  has: (selCmpt: SelectionComponent | SelectionDef) => boolean;\n  parse?: (model: UnitModel, def: SelectionDef, selCmpt: SelectionComponent) => void;\n  signals?: (model: UnitModel, selCmpt: SelectionComponent, signals: NewSignal[]) => Signal[]; // the output can be a new or a push signal\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent, signals: NewSignal[]) => NewSignal[];\n  modifyExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  marks?: (model: UnitModel, selCmpt: SelectionComponent, marks: any[]) => any[];\n}\n\nconst compilers: TransformCompiler[] = [project, toggle, scales, translate, zoom, inputs, nearest, clear];\n\nexport function forEachTransform(selCmpt: SelectionComponent, cb: (tx: TransformCompiler) => void) {\n  for (const t of compilers) {\n    if (t.has(selCmpt)) {\n      cb(t);\n    }\n  }\n}\n"]}