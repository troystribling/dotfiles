{"version":3,"file":"signal.js","sourceRoot":"","sources":["../../../src/compile/signal.ts"],"names":[],"mappings":"AAIA;;;GAGG;AACH,MAAM,OAAO,gBAAgB;IAC3B,YAAY,aAA2B;QACrC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;YACpC,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,aAAa;SACnB,CAAC,CAAC;IACL,CAAC;IAIM,MAAM,CAAC,QAAQ,CAAC,MAAc,EAAE,UAAkB;QACvD,OAAO,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["import {SignalRef} from 'vega';\n\nexport type Rename = (oldSignalName: string) => string;\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper implements SignalRef {\n  constructor(exprGenerator: () => string) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  public signal: string; // for ts\n\n  public static fromName(rename: Rename, signalName: string) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n}\n"]}