{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../src/log/message.ts"],"names":[],"mappings":"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","sourcesContent":["import {AggregateOp} from 'vega';\nimport {Aggregate} from '../aggregate';\nimport {Channel, FacetChannel, GeoPositionChannel} from '../channel';\nimport {TypedFieldDef} from '../channeldef';\nimport {SplitParentProperty} from '../compile/split';\nimport {CompositeMark} from '../compositemark';\nimport {ErrorBarCenter, ErrorBarExtent} from '../compositemark/errorbar';\nimport {DateTime, DateTimeExpr} from '../datetime';\nimport {Mark} from '../mark';\nimport {Projection} from '../projection';\nimport {ScaleType} from '../scale';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VgSortField} from '../vega.schema';\n\n/**\n * Collection of all Vega-Lite Error Messages\n */\n\nexport const INVALID_SPEC = 'Invalid spec';\n\n// FIT\nexport const FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\n\nexport const CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of \"rangeStep\" when \"autosize\" is \"fit\".';\n\n// SELECTION\nexport function cannotProjectOnChannelWithoutField(channel: Channel) {\n  return `Cannot project a selection on encoding channel \"${channel}\", which has no field.`;\n}\n\nexport function nearestNotSupportForContinuous(mark: string) {\n  return `The \"nearest\" transform is not supported for ${mark} marks.`;\n}\n\nexport function selectionNotSupported(mark: CompositeMark) {\n  return `Selection not supported for ${mark} yet`;\n}\n\nexport function selectionNotFound(name: string) {\n  return `Cannot find a selection named \"${name}\"`;\n}\n\nexport const SCALE_BINDINGS_CONTINUOUS =\n  'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\n\nexport const NO_INIT_SCALE_BINDINGS = 'Selections bound to scales cannot be separately initialized.';\n\n// REPEAT\nexport function noSuchRepeatedValue(field: string) {\n  return `Unknown repeated value \"${field}\".`;\n}\n\nexport function columnsNotSupportByRowCol(type: 'facet' | 'repeat') {\n  return `The \"columns\" property cannot be used when \"${type}\" has nested row/column.`;\n}\n\n// CONCAT\nexport const CONCAT_CANNOT_SHARE_AXIS =\n  'Axes cannot be shared in concatenated views yet (https://github.com/vega/vega-lite/issues/2415).';\n\n// REPEAT\nexport const REPEAT_CANNOT_SHARE_AXIS =\n  'Axes cannot be shared in repeated views yet (https://github.com/vega/vega-lite/issues/2415).';\n\n// DATA\nexport function unrecognizedParse(p: string) {\n  return `Unrecognized parse \"${p}\".`;\n}\n\nexport function differentParse(field: string, local: string, ancestor: string) {\n  return `An ancestor parsed field \"${field}\" as ${ancestor} but a child wants to parse the field as ${local}.`;\n}\n\n// TRANSFORMS\nexport function invalidTransformIgnored(transform: any) {\n  return `Ignoring an invalid transform: ${stringify(transform)}.`;\n}\n\nexport const NO_FIELDS_NEEDS_AS =\n  'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the data from the secondary source.';\n\n// ENCODING & FACET\n\nexport function encodingOverridden(channels: Channel[]) {\n  return `Layer's shared ${channels.join(',')} channel ${channels.length === 1 ? 'is' : 'are'} overriden`;\n}\nexport function projectionOverridden(opt: {parentProjection: Projection; projection: Projection}) {\n  const {parentProjection, projection} = opt;\n  return `Layer's shared projection ${stringify(parentProjection)} is overridden by a child projection ${stringify(\n    projection\n  )}.`;\n}\n\nexport function primitiveChannelDef(\n  channel: Channel,\n  type: 'string' | 'number' | 'boolean',\n  value: string | number | boolean\n) {\n  return `Channel ${channel} is a ${type}. Converted to {value: ${stringify(value)}}.`;\n}\n\nexport function invalidFieldType(type: Type) {\n  return `Invalid field type \"${type}\"`;\n}\n\nexport function nonZeroScaleUsedWithLengthMark(\n  mark: 'bar' | 'area',\n  channel: Channel,\n  opt: {scaleType?: ScaleType; zeroFalse?: boolean}\n) {\n  const scaleText = opt.scaleType\n    ? `${opt.scaleType} scale`\n    : opt.zeroFalse\n    ? 'scale with zero=false'\n    : 'scale with custom domain that excludes zero';\n\n  return `A ${scaleText} is used to encode ${mark}'s ${channel}. This can be misleading as the ${\n    channel === 'x' ? 'width' : 'height'\n  } of the ${mark} can be arbitrary based on the scale domain. You may want to use point mark instead.`;\n}\n\nexport function invalidFieldTypeForCountAggregate(type: Type, aggregate: Aggregate | string) {\n  return `Invalid field type \"${type}\" for aggregate: \"${aggregate}\", using \"quantitative\" instead.`;\n}\n\nexport function invalidAggregate(aggregate: AggregateOp | string) {\n  return `Invalid aggregation operator \"${aggregate}\"`;\n}\n\nexport function missingFieldType(channel: Channel, newType: Type) {\n  return `Missing type for channel \"${channel}\", using \"${newType}\" instead.`;\n}\nexport function droppingColor(type: 'encoding' | 'property', opt: {fill?: boolean; stroke?: boolean}) {\n  const {fill, stroke} = opt;\n  return (\n    `Dropping color ${type} as the plot also has ` + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke')\n  );\n}\n\nexport function emptyFieldDef(fieldDef: TypedFieldDef<string>, channel: Channel) {\n  return `Dropping ${stringify(fieldDef)} from channel \"${channel}\" since it does not contain data field or value.`;\n}\nexport function latLongDeprecated(channel: Channel, type: Type, newChannel: GeoPositionChannel) {\n  return `${channel}-encoding with type ${type} is deprecated. Replacing with ${newChannel}-encoding.`;\n}\n\nexport const LINE_WITH_VARYING_SIZE =\n  'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';\n\nexport function incompatibleChannel(channel: Channel, markOrFacet: Mark | 'facet' | CompositeMark, when?: string) {\n  return `${channel} dropped as it is incompatible with \"${markOrFacet}\"${when ? ` when ${when}` : ''}.`;\n}\n\nexport function invalidEncodingChannel(channel: string) {\n  return `${channel}-encoding is dropped as ${channel} is not a valid encoding channel.`;\n}\n\nexport function facetChannelShouldBeDiscrete(channel: string) {\n  return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n}\n\nexport function facetChannelDropped(channels: FacetChannel[]) {\n  return `Facet encoding dropped as ${channels.join(' and ')} ${channels.length > 1 ? 'are' : 'is'} also specified.`;\n}\n\nexport function discreteChannelCannotEncode(channel: Channel, type: Type) {\n  return `Using discrete channel \"${channel}\" to encode \"${type}\" field can be misleading as it does not encode ${\n    type === 'ordinal' ? 'order' : 'magnitude'\n  }.`;\n}\n\n// Mark\nexport const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL =\n  'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n\nexport function lineWithRange(hasX2: boolean, hasY2: boolean) {\n  const channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';\n  return `Line mark is for continuous lines and thus cannot be used with ${channels}. We will use the rule mark (line segments) instead.`;\n}\n\nexport function orientOverridden(original: string, actual: string) {\n  return `Specified orient \"${original}\" overridden with \"${actual}\"`;\n}\n\n// SCALE\nexport const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN =\n  'custom domain scale cannot be unioned with default field-based domain';\n\nexport function cannotUseScalePropertyWithNonColor(prop: string) {\n  return `Cannot use the scale property \"${prop}\" with non-color channel.`;\n}\n\nexport function unaggregateDomainHasNoEffectForRawField(fieldDef: TypedFieldDef<string>) {\n  return `Using unaggregated domain with raw field has no effect (${stringify(fieldDef)}).`;\n}\n\nexport function unaggregateDomainWithNonSharedDomainOp(aggregate: Aggregate | string) {\n  return `Unaggregated domain not applicable for \"${aggregate}\" since it produces values outside the origin domain of the source data.`;\n}\n\nexport function unaggregatedDomainWithLogScale(fieldDef: TypedFieldDef<string>) {\n  return `Unaggregated domain is currently unsupported for log scale (${stringify(fieldDef)}).`;\n}\n\nexport function cannotApplySizeToNonOrientedMark(mark: Mark) {\n  return `Cannot apply size to non-oriented mark \"${mark}\".`;\n}\n\nexport function rangeStepDropped(channel: Channel) {\n  return `rangeStep for \"${channel}\" is dropped as top-level ${channel === 'x' ? 'width' : 'height'} is provided.`;\n}\n\nexport function scaleTypeNotWorkWithChannel(channel: Channel, scaleType: ScaleType, defaultScaleType: ScaleType) {\n  return `Channel \"${channel}\" does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n}\n\nexport function scaleTypeNotWorkWithFieldDef(scaleType: ScaleType, defaultScaleType: ScaleType) {\n  return `FieldDef does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n}\n\nexport function scalePropertyNotWorkWithScaleType(scaleType: ScaleType, propName: string, channel: Channel) {\n  return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n}\n\nexport function scaleTypeNotWorkWithMark(mark: Mark, scaleType: ScaleType) {\n  return `Scale type \"${scaleType}\" does not work with mark \"${mark}\".`;\n}\n\nexport function mergeConflictingProperty<T>(\n  property: string | number | symbol,\n  propertyOf: SplitParentProperty,\n  v1: T,\n  v2: T\n) {\n  return `Conflicting ${propertyOf.toString()} property \"${property.toString()}\" (${stringify(v1)} and ${stringify(\n    v2\n  )}).  Using ${stringify(v1)}.`;\n}\n\nexport function mergeConflictingDomainProperty<T>(property: 'domains', propertyOf: SplitParentProperty, v1: T, v2: T) {\n  return `Conflicting ${propertyOf.toString()} property \"${property.toString()}\" (${stringify(v1)} and ${stringify(\n    v2\n  )}).  Using the union of the two domains.`;\n}\n\nexport function independentScaleMeansIndependentGuide(channel: Channel) {\n  return `Setting the scale to be independent for \"${channel}\" means we also have to set the guide (axis or legend) to be independent.`;\n}\n\nexport function domainSortDropped(sort: VgSortField) {\n  return `Dropping sort property ${stringify(sort)} as unioned domains only support boolean or op 'count'.`;\n}\n\nexport const UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n\nexport const MORE_THAN_ONE_SORT =\n  'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n\n// AXIS\nexport const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n\n// STACK\nexport function cannotStackRangedMark(channel: Channel) {\n  return `Cannot stack \"${channel}\" if there is already \"${channel}2\"`;\n}\n\nexport function cannotStackNonLinearScale(scaleType: ScaleType) {\n  return `Cannot stack non-linear scale (${scaleType})`;\n}\n\nexport function stackNonSummativeAggregate(aggregate: Aggregate | string) {\n  return `Stacking is applied even though the aggregate function is non-summative (\"${aggregate}\")`;\n}\n\n// TIMEUNIT\nexport function invalidTimeUnit(unitName: string, value: string | number) {\n  return `Invalid ${unitName}: ${stringify(value)}`;\n}\n\nexport function dayReplacedWithDate(fullTimeUnit: string) {\n  return `Time unit \"${fullTimeUnit}\" is not supported. We are replacing it with ${fullTimeUnit.replace(\n    'day',\n    'date'\n  )}.`;\n}\n\nexport function droppedDay(d: DateTime | DateTimeExpr) {\n  return `Dropping day from datetime ${stringify(d)} as day cannot be combined with other units.`;\n}\n\nexport function errorBarCenterAndExtentAreNotNeeded(center: ErrorBarCenter, extent: ErrorBarExtent) {\n  return `${extent ? 'extent ' : ''}${extent && center ? 'and ' : ''}${center ? 'center ' : ''}${\n    extent && center ? 'are ' : 'is '\n  }not needed when data are aggregated.`;\n}\n\nexport function errorBarCenterIsUsedWithWrongExtent(\n  center: ErrorBarCenter,\n  extent: ErrorBarExtent,\n  mark: 'errorbar' | 'errorband'\n) {\n  return `${center} is not usually used with ${extent} for ${mark}.`;\n}\n\nexport function errorBarContinuousAxisHasCustomizedAggregate(\n  aggregate: Aggregate | string,\n  compositeMark: CompositeMark\n) {\n  return `Continuous axis should not have customized aggregation function ${aggregate}; ${compositeMark} already agregates the axis.`;\n}\n\nexport function errorBarCenterIsNotNeeded(extent: ErrorBarExtent, mark: 'errorbar' | 'errorband') {\n  return `Center is not needed to be specified in ${mark} when extent is ${extent}.`;\n}\n\nexport function errorBand1DNotSupport(property: 'interpolate' | 'tension') {\n  return `1D error band does not support ${property}`;\n}\n\n// CHANNEL\nexport function channelRequiredForBinned(channel: Channel) {\n  return `Channel ${channel} is required for \"binned\" bin`;\n}\n\nexport function domainRequiredForThresholdScale(channel: Channel) {\n  return `Domain for ${channel} is required for threshold scale`;\n}\n"]}