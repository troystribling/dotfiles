{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/normalize/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,UAAU,EAAC,MAAM,WAAW,CAAC;AAK7C,OAAO,EAAC,cAAc,EAAC,MAAM,QAAQ,CAAC;AAEtC,MAAM,UAAU,SAAS,CAAC,IAAkB,EAAE,MAAe;IAC3D,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClC;IAED,OAAO,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,GAAG,IAAI,cAAc,EAAE,CAAC;AAExC;;GAEG;AACH,SAAS,oBAAoB,CAC3B,IAAgE,EAChE,SAAiB,EAAE;IAEnB,OAAO,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;AACxC,CAAC","sourcesContent":["import {Config, initConfig} from '../config';\nimport {ExtendedLayerSpec, FacetedUnitSpec, GenericSpec, NormalizedSpec, UnitSpec} from '../spec';\nimport {TopLevelSpec} from '../spec/index';\nimport {TopLevel} from '../spec/toplevel';\nimport {NormalizerParams} from './base';\nimport {CoreNormalizer} from './core';\n\nexport function normalize(spec: TopLevelSpec, config?: Config): TopLevel<NormalizedSpec> {\n  if (config === undefined) {\n    config = initConfig(spec.config);\n  }\n\n  return normalizeGenericSpec(spec, config);\n}\n\nconst normalizer = new CoreNormalizer();\n\n/**\n * Decompose extended unit specs into composition of pure unit specs.\n */\nfunction normalizeGenericSpec(\n  spec: GenericSpec<UnitSpec, ExtendedLayerSpec> | FacetedUnitSpec,\n  config: Config = {}\n): NormalizedSpec {\n  return normalizer.map(spec, {config});\n}\n\nexport {NormalizerParams};\n"]}