{"version":3,"file":"map.js","sourceRoot":"","sources":["../../../src/spec/map.ts"],"names":[],"mappings":"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","sourcesContent":["import * as log from '../log';\nimport {\n  GenericConcatSpec,\n  GenericHConcatSpec,\n  GenericVConcatSpec,\n  isConcatSpec,\n  isHConcatSpec,\n  isVConcatSpec\n} from './concat';\nimport {GenericFacetSpec, isFacetSpec} from './facet';\nimport {GenericSpec} from './index';\nimport {GenericLayerSpec, isLayerSpec} from './layer';\nimport {GenericRepeatSpec, isRepeatSpec} from './repeat';\nimport {GenericUnitSpec, isUnitSpec, NormalizedUnitSpec} from './unit';\n\nexport abstract class SpecMapper<\n  P,\n  UI extends GenericUnitSpec<any, any>,\n  LI extends GenericLayerSpec<any> = GenericLayerSpec<UI>,\n  UO extends GenericUnitSpec<any, any> = NormalizedUnitSpec\n> {\n  public map(spec: GenericSpec<UI, LI>, params: P): GenericSpec<UO, GenericLayerSpec<UO>> {\n    if (isFacetSpec(spec)) {\n      return this.mapFacet(spec, params);\n    } else if (isRepeatSpec(spec)) {\n      return this.mapRepeat(spec, params);\n    } else if (isHConcatSpec(spec)) {\n      return this.mapHConcat(spec, params);\n    } else if (isVConcatSpec(spec)) {\n      return this.mapVConcat(spec, params);\n    } else if (isConcatSpec(spec)) {\n      return this.mapConcat(spec, params);\n    } else {\n      return this.mapLayerOrUnit(spec, params);\n    }\n  }\n\n  public mapLayerOrUnit(spec: UI | LI, params: P): UO | GenericLayerSpec<UO> {\n    if (isLayerSpec(spec)) {\n      return this.mapLayer(spec, params);\n    } else if (isUnitSpec(spec)) {\n      return this.mapUnit(spec, params);\n    }\n    throw new Error(log.message.INVALID_SPEC);\n  }\n\n  public abstract mapUnit(spec: UI, params: P): UO | GenericLayerSpec<UO>;\n\n  protected mapLayer(spec: LI, params: P): GenericLayerSpec<UO> {\n    return {\n      ...spec,\n      layer: spec.layer.map(subspec => this.mapLayerOrUnit(subspec, params))\n    };\n  }\n\n  protected mapHConcat(spec: GenericHConcatSpec<UI, LI>, params: P): GenericHConcatSpec<UO, GenericLayerSpec<UO>> {\n    return {\n      ...spec,\n      hconcat: spec.hconcat.map(subspec => this.map(subspec, params))\n    };\n  }\n\n  protected mapVConcat(spec: GenericVConcatSpec<UI, LI>, params: P): GenericVConcatSpec<UO, GenericLayerSpec<UO>> {\n    return {\n      ...spec,\n      vconcat: spec.vconcat.map(subspec => this.map(subspec, params))\n    };\n  }\n\n  protected mapConcat(spec: GenericConcatSpec<UI, LI>, params: P): GenericConcatSpec<UO, GenericLayerSpec<UO>> {\n    const {concat, ...rest} = spec;\n\n    return {\n      ...rest,\n      concat: concat.map(subspec => this.map(subspec, params))\n    };\n  }\n\n  protected mapFacet(spec: GenericFacetSpec<UI, LI>, params: P): GenericFacetSpec<UO, GenericLayerSpec<UO>> {\n    return {\n      ...spec,\n      // TODO: remove \"any\" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760\n      spec: this.map(spec.spec, params) as any\n    };\n  }\n\n  protected mapRepeat(spec: GenericRepeatSpec<UI, LI>, params: P): GenericRepeatSpec<UO, GenericLayerSpec<UO>> {\n    return {\n      ...spec,\n      spec: this.map(spec.spec, params)\n    };\n  }\n}\n"]}