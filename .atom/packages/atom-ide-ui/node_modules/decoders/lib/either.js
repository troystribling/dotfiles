'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.either = either;
exports.either3 = either3;
exports.either4 = either4;
exports.either5 = either5;
exports.either6 = either6;
exports.either7 = either7;
exports.either8 = either8;
exports.either9 = either9;

var _debrief = require('debrief');

var _lemons = require('lemons');

/**
 * Indents and adds a dash in front of this (potentially multiline) string.
 */
// istanbul ignore next
function itemize() {
    var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    return '-' + (0, _debrief.indent)(s).substring(1);
}

function either(d1, d2) {
    return function (blob) {
        return d1(blob).dispatch(function (value1) {
            return (0, _lemons.Ok)(value1);
        }, function (err1) {
            return d2(blob).dispatch(function (value2) {
                return (0, _lemons.Ok)(value2);
            }, function (err2) {
                return (0, _lemons.Err)((0, _debrief.annotate)(blob, ['Either:', itemize(err1.annotation), itemize(err2.annotation)].join('\n')));
            });
        });
    };
}

function either3(d1, d2, d3) {
    return either(d1, either(d2, d3));
}

function either4(d1, d2, d3, d4) {
    return either(d1, either3(d2, d3, d4));
}

function either5(d1, d2, d3, d4, d5) {
    return either(d1, either4(d2, d3, d4, d5));
}

function either6(d1, d2, d3, d4, d5, d6) {
    return either(d1, either5(d2, d3, d4, d5, d6));
}

function either7(d1, d2, d3, d4, d5, d6, d7) {
    return either(d1, either6(d2, d3, d4, d5, d6, d7));
}

function either8(d1, d2, d3, d4, d5, d6, d7, d8) {
    return either(d1, either7(d2, d3, d4, d5, d6, d7, d8));
}

function either9(d1, d2, d3, d4, d5, d6, d7, d8, d9) {
    return either(d1, either8(d2, d3, d4, d5, d6, d7, d8, d9));
}