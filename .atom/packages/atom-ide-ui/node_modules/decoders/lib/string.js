'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.url = exports.email = exports.string = undefined;
exports.regex = regex;

var _debrief = require('debrief');

var _lemons = require('lemons');

var _utils = require('./utils');

/** Match groups in this regex:
 * \1 - the scheme
 * \2 - the username/password (optional)
 * \3 - the host
 * \4 - the port (optional)
 * \5 - the path (optional)
 */
var url_re = /^([A-Za-z]{3,9}(?:[+][A-Za-z]{3,9})?):\/\/(?:([-;:&=+$,\w]+)@)?(?:([A-Za-z0-9.-]+)(?::([0-9]{2,5}))?)(\/(?:[-+~%/.\w]*)?(?:\?[-+=&;%@.\w]*)?(?:#[.!/\w]*)?)?$/;

// The URL schemes the url() decoder accepts by default


var DEFAULT_SCHEMES = ['https'];

/**
 * Decoder that only returns Ok for string inputs.  Err otherwise.
 */
var string = exports.string = function string(blob) {
    return typeof blob === 'string' ? (0, _lemons.Ok)(blob) : (0, _lemons.Err)((0, _debrief.annotate)(blob, 'Must be string'));
};

/**
 * Decoder that only returns Ok for string inputs that match the regular
 * expression.  Err otherwise.  Will always validate that the input is a string
 * before testing the regex.
 */
function regex(regex, msg) {
    return (0, _utils.compose)(string, (0, _utils.predicate)(function (s) {
        return regex.test(s);
    }, msg));
}

/**
 * Decoder that only returns Ok for string inputs that match the almost perfect
 * email regex, taken from http://emailregex.com.  Err otherwise.
 */
var email = exports.email = regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/, 'Must be email');

/**
 * Decoder that only returns Ok for string inputs that match URLs of the
 * expected scheme.  Defaults to only accept HTTPS URLs.  Err otherwise.
 *
 * Variants that can be used:
 *
 * - url()                      accepts only https:// URLs
 * - url([])                    accepts any URL scheme
 * - url(['http'])              accepts only HTTP
 * - url(['https', 'git+ssh'])  accepts both https:// and git+ssh:// URLs
 */
var url = exports.url = function url() {
    var schemes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCHEMES;
    return (0, _utils.compose)(string, function (value) {
        var matches = value.match(url_re);
        if (!matches) {
            return (0, _lemons.Err)((0, _debrief.annotate)(value, 'Must be URL'));
        } else {
            var scheme = matches[1];
            if (schemes.length === 0 || schemes.includes(scheme.toLowerCase())) {
                return (0, _lemons.Ok)(value);
            } else {
                return (0, _lemons.Err)((0, _debrief.annotate)(value, 'URL scheme must be any of: ' + schemes.join(', ')));
            }
        }
    });
};