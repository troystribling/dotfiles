{
  "_args": [
    [
      {
        "raw": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
        "spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/apm-install-dir-118529-3926-1rfe3gy.tmjnstt9"
    ]
  ],
  "_from": "../d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
  "_id": "atom-latex@0.8.4",
  "_inCache": true,
  "_location": "/atom-latex",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
    "spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
  "_shasum": "75377ca0bd4fb5d4676fa16f54a064426458a060",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118529-3926-15rf397.cbo5bqpvi/package.tgz",
  "_where": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/apm-install-dir-118529-3926-1rfe3gy.tmjnstt9",
  "bugs": {
    "url": "https://github.com/James-Yu/Atom-LaTeX/issues"
  },
  "consumedServices": {
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    },
    "minimap": {
      "versions": {
        "^1.0.0": "consumeMinimap"
      }
    }
  },
  "dependencies": {
    "chokidar": "^1.7.0",
    "etch": "^0.12.6",
    "fs-plus": "^3.0.0",
    "glob": "^7.1.1",
    "hasbin": "^1.2.3",
    "latex-symbols-list": "^0.1.2",
    "pdfjs-dist": "1.9.426",
    "tmp": "^0.0.31",
    "ws": "^3.2.0"
  },
  "description": "The only LaTeX package you need for typesetting with Atom.",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "homepage": "https://github.com/James-Yu/Atom-LaTeX#readme",
  "keywords": [
    "latex",
    "compile",
    "preview",
    "synctex",
    "highlight"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "atom-latex",
  "optionalDependencies": {},
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provide"
      }
    }
  },
  "readme": "# Atom-LaTeX package\n\nAtom-LaTeX is an extension for [Atom.io](https://atom.io/), aiming to provide all-in-one features and utilities for LaTeX typesetting with Atom.\n\n## Update (Thank you, `@ashthespy`!)\n\nThe original package author `@James-Yu` switched back to [Visual Studio Code](https://code.visualstudio.com/) for most coding and typesetting tasks due to reasons 1, 2, 3, and more since late Mar. 2017.\n\nAtom-LaTeX is currently actively maintained by `@ashthespy`. Please join me in thanking him for the great contribution!\n\n## Features\n\nSome features have screenshots/screencasts available [here](https://github.com/James-Yu/Atom-LaTeX/blob/master/GALLERY.md). Have a check!\n\n- Compile LaTeX with BibTeX\n- Preview PDF with build-in viewer\n- Parse LaTeX compiling log\n- Autocomplete\n- Syntax highlighting\n- Direct and reverse SyncTeX\n\nIf you figured out some neat features, that you'd like included, [create an issue](https://github.com/James-Yu/Atom-LaTeX/issues/new)!\n\n## Why another LaTeX package?\n\nUnification provides a seamless experience. Aiming to make it work and work perfectly.\n\n## Requirements\n\n- LaTeX distribution in system PATH. For example, [TeX Live](https://www.tug.org/texlive/).\n  -  Please note [MikTeX](https://miktex.org/) does not ship with SyncTeX. See [this link](http://tex.stackexchange.com/questions/338078/how-to-get-synctex-for-windows-to-allow-atom-pdf-view-to-synch#comment877274_338117) for a possible solution.\n- [Set LaTeX root file](#root_file).\n\n## Installation\n\nInstalling Atom-LaTeX is simple. You can find it in [the atom.io package registry](https://atom.io/packages/atom-latex), or simply run `apm install atom-latex` from the command line.\n\nFor cutting edge features or changes, you can clone this repository to the Atom package folder:\n- Windows `%USERPROFILE%\\.atom\\packages`\n- Mac/Linux `$HOME/.atom/packages`\n\n## Usage\n\nAll commands can be invoked from `Package`â†’`Atom-LaTeX` menu or from the command palette. Alternatively, keybindings are provided. Each command is invoked if the two key combinations are pressed sequentially.\n\nFor reverse SyncTeX from PDF to LaTeX, use <kbd>ctrl</kbd>+<kbd>Mouse Left Click</kbd> in the PDF viewer to reveal the line in editor.\n\nMac OS users can use <kbd>command</kbd> key as a replacement of <kbd>ctrl</kbd>.\n\n| Command               | Default Keybind                             | Function |\n|-----------------------|---------------------------------------------|----------|\n| `atom-latex:build`      | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>B</kbd> | Build LaTeX file. |\n| `atom-latex:build-here` | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>H</kbd> | Build LaTeX using active text editor file if possible. |\n| `atom-latex:clean`      | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>C</kbd> | Clean LaTeX auxillary files. |\n| `atom-latex:preview`    | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>P</kbd> | Preview generated PDF file with in-browser viewer. |\n| `atom-latex:kill`       | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>K</kbd> | Terminate current LaTeX building process. |\n| `atom-latex:synctex`    | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>S</kbd> | Direct SyncTeX from the current cursor position. |\n| `atom-latex:toggle-panel`   | <kbd>ctrl</kbd>+<kbd>L</kbd> <kbd>ctrl</kbd>+<kbd>L</kbd> | Toggle Atom-LaTeX panel display. |\n\n### <a name=\"root_file\"></a>Setting the LaTeX root file\nA LaTeX root file is essential for Atom-LaTeX. Building, preview, autocompletion, and more features rely on its proper configuration. Atom-LaTeX provides multiple methods of setting this up.\n\n1. Open the root file, then use the `Build Here` command. Alternatively, use `Build LaTeX from active editor` menu item.\n\n2. Manually select the file by clicking the `home` icon on the control panel\n\n3. Add a magic comment `% !TEX root = \\path\\to\\root\\file.tex` to all of your LaTeX source file. The path can be absolute or relative.\n\n4. Create a [project specific `.latexcfg` file](#latexcfg) at the root directory of your project. The file should contain a JSON object with `root` key set to the root file. For example:\n\n   ```\n   { \"root\" : \"\\path\\to\\root\\file.tex\" }\n   ```\n\n5. If all previous checks fail to find a root file, Atom-LaTeX will iterate through all LaTeX files in the root directory and set the first file with the sequence `\\begin{document}` as the root file.\n\nYou can choose one or multiple methods stated above to set the root file.\n\n### <a name=\"toolchain\"></a> Setting up a toolchain\nBy default [`latexmk`](http://personal.psu.edu/jcc8/software/latexmk/) is used to automate the LaTeX building sequence. This tool is bundled in most LaTeX distributions, and requires [`perl`](https://www.perl.org/get.html) to execute.\n\nIf `latexmk` fails, the `custom toolchain` is utilised which by default sequentially runs the typical `pdflatex`>`bibtex`>`pdflatex`>`pdflatex` command chain:\n\n```\n%TEX %ARG %DOC && %BIB %DOC && %TEX %ARG %DOC && %TEX %ARG %DOC\n```\nMultiple commands should be separated by `&&`. Placeholders `%TEX`,`%ARG` and `%BIB` will be replaced by tools defined in the settings menu\n`%DOC` will be replaced by the [root LaTeX](root_file) filename (without extension), while `%EXT` gives the file extension\n\n\nFor non `perl` users, other automatic LaTeX helper utilities such as [`texify`](https://docs.miktex.org/manual/texifying.html) or [`arara`](https://www.ctan.org/pkg/arara?lang=en) can also be configured.\n  * Sample `custom toolchain` configuration for `texify`\n  ```\n  texify --synctex --pdf --tex-option=\\\"-interaction=nonstopmode\\\" --tex-option=\\\"-file-line-error\\\" %DOC.%EXT\n  ```\n  Do note that `texify` requires the complete root file name with extension to compile.\n\n  * Sample `custom toolchain` configuration for `arara`\n  ```\n  arara %DOC -v\n  ```\n  Have a look at [this comment](https://github.com/James-Yu/Atom-LaTeX/issues/4#issuecomment-280690169) for more details on setting up `arara`\n\n### Enable spell check\n  - Open the settings panel of Atom core package `spell-check`.\n  - Add `text.tex.latex` to the `Grammars` section.\n\n\n### <a name=\"latexcfg\"></a> Project-based Configuration\nAtom currently does not provide per-project configuration. Atom-LaTeX uses a `.latexcfg` file with a JSON object under the root directory of the LaTeX project to partially control its behaviour. Following is a complete example of its content.\n   ```\n   {\n     \"root\" : \"\\path\\to\\root\\file.tex\",\n     \"toolchain\" : \"%TEX %ARG %DOC\",\n     \"latex_ext\": [\".tikz\", \".Rnw\"]\n   }\n   ```\nIf a key is set, the configuration will overwrite the global one in atom settings.\n\n### <a name=\"project_toolchain\"></a> Set per-project LaTeX toolchain\nIf LaTeX projects need special toolchains, one can add a `toolchain` key to the `.latexcfg` file. For example:\n\n```\n{ \"toolchain\" : \"%TEX %ARG %DOC\" }\n```\nThis example will only use the defined compiler in atom configuration to build the project.\n Alternatively, you can also directly specify compilers such as:\n```\n{ \"toolchain\" : \"pdflatex -synctex=1 -interaction=nonstopmode -file-line-error -pdf %DOC\" }\n```\n\n### Support for non `.tex` files\nAtom-LaTeX has limited support to LaTeX source files with a non `.tex` extension. To consider such files as valid LaTeX documents, one can add a `latex_ext` key to the `.latexcfg` local configuration file. An example:\n```\n{ \"latex_ext\": [\".tikz\", \".Rnw\"] }\n```\nNote that the value must be a JSON array, even when there is only one alternative file extension.\n\n#### Sample toolchain for [`knitr`](https://github.com/yihui/knitr)\n```\n  {\"toolchain\": \"Rscript -e \\\"library(knitr); knit('%DOC.%EXT')\\\" && latexmk -synctex=1 -interaction=nonstopmode -file-line-error -pdf %DOC\"}\n```\nHave a look at [this thread](https://github.com/James-Yu/Atom-LaTeX/issues/42) for more options for custom toolchains.\n\n## Contributing\n\n- [Create issues](https://github.com/James-Yu/Atom-LaTeX/issues) for bugs\n- [Fork and PR](https://github.com/James-Yu/Atom-LaTeX/pulls) for fixes\n- Thank you so much!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/James-Yu/Atom-LaTeX.git"
  },
  "version": "0.8.4"
}
