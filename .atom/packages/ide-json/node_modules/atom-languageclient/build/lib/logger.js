Object.defineProperty(exports, "__esModule", {
  value: true
});


/* eslint-disable no-console */

class ConsoleLogger {

  constructor(prefix) {
    this.prefix = prefix;
  }

  warn(...args) {
    console.warn(...this.format(args));
  }

  error(...args) {
    console.error(...this.format(args));
  }

  info(...args) {
    console.info(...this.format(args));
  }

  debug(...args) {
    console.debug(...this.format(args));
  }

  log(...args) {
    console.log(...this.format(args));
  }

  format(args_) {
    const args = args_.filter(a => a != null);
    if (typeof args[0] === 'string') {
      if (args.length === 1) {
        return [`${this.prefix} ${args[0]}`];
      } else if (args.length === 2) {
        return [`${this.prefix} ${args[0]}`, args[1]];
      } else {
        return [`${this.prefix} ${args[0]}`, args.slice(1)];
      }
    }

    return [`${this.prefix}`, args];
  }
}

exports.ConsoleLogger = ConsoleLogger;
class NullLogger {
  warn(...args) {}
  error(...args) {}
  info(...args) {}
  log(...args) {}
  debug(...args) {}
}
exports.NullLogger = NullLogger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9sb2dnZXIuanMiXSwibmFtZXMiOlsiQ29uc29sZUxvZ2dlciIsImNvbnN0cnVjdG9yIiwicHJlZml4Iiwid2FybiIsImFyZ3MiLCJjb25zb2xlIiwiZm9ybWF0IiwiZXJyb3IiLCJpbmZvIiwiZGVidWciLCJsb2ciLCJhcmdzXyIsImZpbHRlciIsImEiLCJsZW5ndGgiLCJzbGljZSIsIk51bGxMb2dnZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBVUE7O0FBRU8sTUFBTUEsYUFBTixDQUFvQjs7QUFHekJDLGNBQVlDLE1BQVosRUFBNEI7QUFDMUIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0Q7O0FBRURDLE9BQUssR0FBR0MsSUFBUixFQUFtQjtBQUNqQkMsWUFBUUYsSUFBUixDQUFhLEdBQUcsS0FBS0csTUFBTCxDQUFZRixJQUFaLENBQWhCO0FBQ0Q7O0FBRURHLFFBQU0sR0FBR0gsSUFBVCxFQUFvQjtBQUNsQkMsWUFBUUUsS0FBUixDQUFjLEdBQUcsS0FBS0QsTUFBTCxDQUFZRixJQUFaLENBQWpCO0FBQ0Q7O0FBRURJLE9BQUssR0FBR0osSUFBUixFQUFtQjtBQUNqQkMsWUFBUUcsSUFBUixDQUFhLEdBQUcsS0FBS0YsTUFBTCxDQUFZRixJQUFaLENBQWhCO0FBQ0Q7O0FBRURLLFFBQU0sR0FBR0wsSUFBVCxFQUFvQjtBQUNsQkMsWUFBUUksS0FBUixDQUFjLEdBQUcsS0FBS0gsTUFBTCxDQUFZRixJQUFaLENBQWpCO0FBQ0Q7O0FBRURNLE1BQUksR0FBR04sSUFBUCxFQUFrQjtBQUNoQkMsWUFBUUssR0FBUixDQUFZLEdBQUcsS0FBS0osTUFBTCxDQUFZRixJQUFaLENBQWY7QUFDRDs7QUFFREUsU0FBT0ssS0FBUCxFQUF3QjtBQUN0QixVQUFNUCxPQUFPTyxNQUFNQyxNQUFOLENBQWFDLEtBQUtBLEtBQUssSUFBdkIsQ0FBYjtBQUNBLFFBQUksT0FBT1QsS0FBSyxDQUFMLENBQVAsS0FBbUIsUUFBdkIsRUFBaUM7QUFDL0IsVUFBSUEsS0FBS1UsTUFBTCxLQUFnQixDQUFwQixFQUF1QjtBQUNyQixlQUFPLENBQUUsR0FBRSxLQUFLWixNQUFPLElBQUdFLEtBQUssQ0FBTCxDQUFRLEVBQTNCLENBQVA7QUFDRCxPQUZELE1BRU8sSUFBSUEsS0FBS1UsTUFBTCxLQUFnQixDQUFwQixFQUF1QjtBQUM1QixlQUFPLENBQUUsR0FBRSxLQUFLWixNQUFPLElBQUdFLEtBQUssQ0FBTCxDQUFRLEVBQTNCLEVBQThCQSxLQUFLLENBQUwsQ0FBOUIsQ0FBUDtBQUNELE9BRk0sTUFFQTtBQUNMLGVBQU8sQ0FBRSxHQUFFLEtBQUtGLE1BQU8sSUFBR0UsS0FBSyxDQUFMLENBQVEsRUFBM0IsRUFBOEJBLEtBQUtXLEtBQUwsQ0FBVyxDQUFYLENBQTlCLENBQVA7QUFDRDtBQUNGOztBQUVELFdBQU8sQ0FBRSxHQUFFLEtBQUtiLE1BQU8sRUFBaEIsRUFBbUJFLElBQW5CLENBQVA7QUFDRDtBQXhDd0I7O1FBQWRKLGEsR0FBQUEsYTtBQTJDTixNQUFNZ0IsVUFBTixDQUFpQjtBQUN0QmIsT0FBSyxHQUFHQyxJQUFSLEVBQXlCLENBQUU7QUFDM0JHLFFBQU0sR0FBR0gsSUFBVCxFQUEwQixDQUFFO0FBQzVCSSxPQUFLLEdBQUdKLElBQVIsRUFBeUIsQ0FBRTtBQUMzQk0sTUFBSSxHQUFHTixJQUFQLEVBQXdCLENBQUU7QUFDMUJLLFFBQU0sR0FBR0wsSUFBVCxFQUEwQixDQUFFO0FBTE47UUFBWFksVSxHQUFBQSxVIiwiZmlsZSI6ImxvZ2dlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XHJcblxyXG5leHBvcnQgdHlwZSBMb2dnZXIgPSB7XHJcbiAgd2FybiguLi5hcmdzOiBhbnkpOiB2b2lkLFxyXG4gIGVycm9yKC4uLmFyZ3M6IGFueSk6IHZvaWQsXHJcbiAgaW5mbyguLi5hcmdzOiBhbnkpOiB2b2lkLFxyXG4gIGxvZyguLi5hcmdzOiBhbnkpOiB2b2lkLFxyXG4gIGRlYnVnKC4uLmFyZ3M6IGFueSk6IHZvaWQsXHJcbn07XHJcblxyXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXHJcblxyXG5leHBvcnQgY2xhc3MgQ29uc29sZUxvZ2dlciB7XHJcbiAgcHJlZml4OiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByZWZpeDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcclxuICB9XHJcblxyXG4gIHdhcm4oLi4uYXJnczogYW55KSB7XHJcbiAgICBjb25zb2xlLndhcm4oLi4udGhpcy5mb3JtYXQoYXJncykpO1xyXG4gIH1cclxuXHJcbiAgZXJyb3IoLi4uYXJnczogYW55KSB7XHJcbiAgICBjb25zb2xlLmVycm9yKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIGluZm8oLi4uYXJnczogYW55KSB7XHJcbiAgICBjb25zb2xlLmluZm8oLi4udGhpcy5mb3JtYXQoYXJncykpO1xyXG4gIH1cclxuXHJcbiAgZGVidWcoLi4uYXJnczogYW55KSB7XHJcbiAgICBjb25zb2xlLmRlYnVnKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIGxvZyguLi5hcmdzOiBhbnkpIHtcclxuICAgIGNvbnNvbGUubG9nKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIGZvcm1hdChhcmdzXzogYW55KTogYW55IHtcclxuICAgIGNvbnN0IGFyZ3MgPSBhcmdzXy5maWx0ZXIoYSA9PiBhICE9IG51bGwpO1xyXG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykge1xyXG4gICAgICBpZiAoYXJncy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICByZXR1cm4gW2Ake3RoaXMucHJlZml4fSAke2FyZ3NbMF19YF07XHJcbiAgICAgIH0gZWxzZSBpZiAoYXJncy5sZW5ndGggPT09IDIpIHtcclxuICAgICAgICByZXR1cm4gW2Ake3RoaXMucHJlZml4fSAke2FyZ3NbMF19YCwgYXJnc1sxXV07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFtgJHt0aGlzLnByZWZpeH0gJHthcmdzWzBdfWAsIGFyZ3Muc2xpY2UoMSldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFtgJHt0aGlzLnByZWZpeH1gLCBhcmdzXTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBOdWxsTG9nZ2VyIHtcclxuICB3YXJuKC4uLmFyZ3M6IGFueSk6IHZvaWQge31cclxuICBlcnJvciguLi5hcmdzOiBhbnkpOiB2b2lkIHt9XHJcbiAgaW5mbyguLi5hcmdzOiBhbnkpOiB2b2lkIHt9XHJcbiAgbG9nKC4uLmFyZ3M6IGFueSk6IHZvaWQge31cclxuICBkZWJ1ZyguLi5hcmdzOiBhbnkpOiB2b2lkIHt9XHJcbn1cclxuIl19