"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parsePsTableOutput = parsePsTableOutput;

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
function parsePsTableOutput(output, desiredFields) {
  const lines = output.split(/\n/);
  const header = lines[0];
  const cols = header.split(/\s+/);
  const colMapping = {};

  for (let i = 0; i < cols.length; i++) {
    const columnName = cols[i].toLowerCase();

    if (desiredFields.includes(columnName)) {
      colMapping[i] = columnName;
    }
  }

  const formattedData = [];
  const data = lines.slice(1);
  const ignoreSColumn = cols.find(col => col.trim() === 'S') == null;
  data.filter(row => row.trim() !== '').forEach(row => {
    const rowData = row.split(/\s+/);
    const rowObj = {};

    for (let i = 0; i < rowData.length; i++) {
      const effectiveColumn = i;

      if (ignoreSColumn) {
        // Android's ps output has an extra column "S" (versions prior to API 26)
        // in the data that doesn't appear in the header. Skip that column's value.
        if (rowData[i] === 'S' && i < rowData.length - 1) {
          i++;
        }
      }

      if (colMapping[effectiveColumn] !== undefined) {
        rowObj[colMapping[effectiveColumn]] = rowData[i];
      }
    }

    formattedData.push(rowObj);
  });
  return formattedData;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL251Y2xpZGUvbnVjbGlkZS1hZGIvbGliL2NvbW1vbi9wcy5qcyJdLCJuYW1lcyI6WyJwYXJzZVBzVGFibGVPdXRwdXQiLCJvdXRwdXQiLCJkZXNpcmVkRmllbGRzIiwibGluZXMiLCJzcGxpdCIsImhlYWRlciIsImNvbHMiLCJjb2xNYXBwaW5nIiwiaSIsImxlbmd0aCIsImNvbHVtbk5hbWUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiZm9ybWF0dGVkRGF0YSIsImRhdGEiLCJzbGljZSIsImlnbm9yZVNDb2x1bW4iLCJmaW5kIiwiY29sIiwidHJpbSIsImZpbHRlciIsInJvdyIsImZvckVhY2giLCJyb3dEYXRhIiwicm93T2JqIiwiZWZmZWN0aXZlQ29sdW1uIiwidW5kZWZpbmVkIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFTyxTQUFTQSxrQkFBVCxDQUNMQyxNQURLLEVBRUxDLGFBRkssRUFHVTtBQUNmLFFBQU1DLEtBQUssR0FBR0YsTUFBTSxDQUFDRyxLQUFQLENBQWEsSUFBYixDQUFkO0FBQ0EsUUFBTUMsTUFBTSxHQUFHRixLQUFLLENBQUMsQ0FBRCxDQUFwQjtBQUNBLFFBQU1HLElBQUksR0FBR0QsTUFBTSxDQUFDRCxLQUFQLENBQWEsS0FBYixDQUFiO0FBQ0EsUUFBTUcsVUFBVSxHQUFHLEVBQW5COztBQUVBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxNQUF6QixFQUFpQ0QsQ0FBQyxFQUFsQyxFQUFzQztBQUNwQyxVQUFNRSxVQUFVLEdBQUdKLElBQUksQ0FBQ0UsQ0FBRCxDQUFKLENBQVFHLFdBQVIsRUFBbkI7O0FBQ0EsUUFBSVQsYUFBYSxDQUFDVSxRQUFkLENBQXVCRixVQUF2QixDQUFKLEVBQXdDO0FBQ3RDSCxNQUFBQSxVQUFVLENBQUNDLENBQUQsQ0FBVixHQUFnQkUsVUFBaEI7QUFDRDtBQUNGOztBQUVELFFBQU1HLGFBQWEsR0FBRyxFQUF0QjtBQUNBLFFBQU1DLElBQUksR0FBR1gsS0FBSyxDQUFDWSxLQUFOLENBQVksQ0FBWixDQUFiO0FBQ0EsUUFBTUMsYUFBYSxHQUFHVixJQUFJLENBQUNXLElBQUwsQ0FBVUMsR0FBRyxJQUFJQSxHQUFHLENBQUNDLElBQUosT0FBZSxHQUFoQyxLQUF3QyxJQUE5RDtBQUNBTCxFQUFBQSxJQUFJLENBQUNNLE1BQUwsQ0FBWUMsR0FBRyxJQUFJQSxHQUFHLENBQUNGLElBQUosT0FBZSxFQUFsQyxFQUFzQ0csT0FBdEMsQ0FBOENELEdBQUcsSUFBSTtBQUNuRCxVQUFNRSxPQUFPLEdBQUdGLEdBQUcsQ0FBQ2pCLEtBQUosQ0FBVSxLQUFWLENBQWhCO0FBQ0EsVUFBTW9CLE1BQU0sR0FBRyxFQUFmOztBQUNBLFNBQUssSUFBSWhCLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdlLE9BQU8sQ0FBQ2QsTUFBNUIsRUFBb0NELENBQUMsRUFBckMsRUFBeUM7QUFDdkMsWUFBTWlCLGVBQWUsR0FBR2pCLENBQXhCOztBQUNBLFVBQUlRLGFBQUosRUFBbUI7QUFDakI7QUFDQTtBQUNBLFlBQUlPLE9BQU8sQ0FBQ2YsQ0FBRCxDQUFQLEtBQWUsR0FBZixJQUFzQkEsQ0FBQyxHQUFHZSxPQUFPLENBQUNkLE1BQVIsR0FBaUIsQ0FBL0MsRUFBa0Q7QUFDaERELFVBQUFBLENBQUM7QUFDRjtBQUNGOztBQUVELFVBQUlELFVBQVUsQ0FBQ2tCLGVBQUQsQ0FBVixLQUFnQ0MsU0FBcEMsRUFBK0M7QUFDN0NGLFFBQUFBLE1BQU0sQ0FBQ2pCLFVBQVUsQ0FBQ2tCLGVBQUQsQ0FBWCxDQUFOLEdBQXNDRixPQUFPLENBQUNmLENBQUQsQ0FBN0M7QUFDRDtBQUNGOztBQUVESyxJQUFBQSxhQUFhLENBQUNjLElBQWQsQ0FBbUJILE1BQW5CO0FBQ0QsR0FuQkQ7QUFxQkEsU0FBT1gsYUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUHNUYWJsZU91dHB1dChcclxuICBvdXRwdXQ6IHN0cmluZyxcclxuICBkZXNpcmVkRmllbGRzOiBBcnJheTxzdHJpbmc+LFxyXG4pOiBBcnJheTxPYmplY3Q+IHtcclxuICBjb25zdCBsaW5lcyA9IG91dHB1dC5zcGxpdCgvXFxuLyk7XHJcbiAgY29uc3QgaGVhZGVyID0gbGluZXNbMF07XHJcbiAgY29uc3QgY29scyA9IGhlYWRlci5zcGxpdCgvXFxzKy8pO1xyXG4gIGNvbnN0IGNvbE1hcHBpbmcgPSB7fTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjb25zdCBjb2x1bW5OYW1lID0gY29sc1tpXS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgaWYgKGRlc2lyZWRGaWVsZHMuaW5jbHVkZXMoY29sdW1uTmFtZSkpIHtcclxuICAgICAgY29sTWFwcGluZ1tpXSA9IGNvbHVtbk5hbWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zdCBmb3JtYXR0ZWREYXRhID0gW107XHJcbiAgY29uc3QgZGF0YSA9IGxpbmVzLnNsaWNlKDEpO1xyXG4gIGNvbnN0IGlnbm9yZVNDb2x1bW4gPSBjb2xzLmZpbmQoY29sID0+IGNvbC50cmltKCkgPT09ICdTJykgPT0gbnVsbDtcclxuICBkYXRhLmZpbHRlcihyb3cgPT4gcm93LnRyaW0oKSAhPT0gJycpLmZvckVhY2gocm93ID0+IHtcclxuICAgIGNvbnN0IHJvd0RhdGEgPSByb3cuc3BsaXQoL1xccysvKTtcclxuICAgIGNvbnN0IHJvd09iaiA9IHt9O1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3dEYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZUNvbHVtbiA9IGk7XHJcbiAgICAgIGlmIChpZ25vcmVTQ29sdW1uKSB7XHJcbiAgICAgICAgLy8gQW5kcm9pZCdzIHBzIG91dHB1dCBoYXMgYW4gZXh0cmEgY29sdW1uIFwiU1wiICh2ZXJzaW9ucyBwcmlvciB0byBBUEkgMjYpXHJcbiAgICAgICAgLy8gaW4gdGhlIGRhdGEgdGhhdCBkb2Vzbid0IGFwcGVhciBpbiB0aGUgaGVhZGVyLiBTa2lwIHRoYXQgY29sdW1uJ3MgdmFsdWUuXHJcbiAgICAgICAgaWYgKHJvd0RhdGFbaV0gPT09ICdTJyAmJiBpIDwgcm93RGF0YS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICBpKys7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY29sTWFwcGluZ1tlZmZlY3RpdmVDb2x1bW5dICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICByb3dPYmpbY29sTWFwcGluZ1tlZmZlY3RpdmVDb2x1bW5dXSA9IHJvd0RhdGFbaV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmb3JtYXR0ZWREYXRhLnB1c2gocm93T2JqKTtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIGZvcm1hdHRlZERhdGE7XHJcbn1cclxuIl19