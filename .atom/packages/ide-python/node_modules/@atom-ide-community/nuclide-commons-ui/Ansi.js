"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _anser = _interopRequireDefault(require("anser"));

var _escapeCarriage = _interopRequireDefault(require("escape-carriage"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
function ansiToJSON(input, useClasses) {
  const classes = useClasses == null || !useClasses ? false : useClasses;
  return _anser.default.ansiToJson((0, _escapeCarriage.default)(input), {
    use_classes: classes,
    json: true,
    remove_empty: true
  });
} // make sure


function ansiJSONtoStyleBundle(ansiBundle, colorStyle) {
  const style = {};

  if (ansiBundle.bg) {
    style.backgroundColor = colorStyle != null ? `rgb(${colorStyle[ansiBundle.bg]})` : `rgb(${ansiBundle.bg})`;
  }

  if (ansiBundle.fg) {
    style.color = colorStyle != null ? `rgb(${colorStyle[ansiBundle.fg]})` : `rgb(${ansiBundle.fg})`;
  } else {
    if (colorStyle != null) {
      style.color = `rgb(${colorStyle.default})`;
    }
  }

  return {
    content: ansiBundle.content,
    style
  };
}

function ansiToInlineStyle(text, useClasses, colorStyle) {
  return ansiToJSON(text, useClasses).map(input => ansiJSONtoStyleBundle(input, colorStyle));
}

function defaultRenderSegment({
  key,
  style,
  content
}) {
  return /*#__PURE__*/React.createElement("span", {
    key: key,
    style: style
  }, content);
}

class Ansi extends React.PureComponent {
  render() {
    const {
      useClasses,
      colorStyle,
      children,
      renderSegment = defaultRenderSegment,
      ...passThroughProps
    } = this.props;
    return /*#__PURE__*/React.createElement("code", passThroughProps, ansiToInlineStyle(children, useClasses, colorStyle).map(({
      style,
      content
    }, key) => renderSegment({
      key: String(key),
      style,
      content
    })));
  }

}

exports.default = Ansi;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0Fuc2kuanMiXSwibmFtZXMiOlsiYW5zaVRvSlNPTiIsImlucHV0IiwidXNlQ2xhc3NlcyIsImNsYXNzZXMiLCJBbnNlciIsImFuc2lUb0pzb24iLCJ1c2VfY2xhc3NlcyIsImpzb24iLCJyZW1vdmVfZW1wdHkiLCJhbnNpSlNPTnRvU3R5bGVCdW5kbGUiLCJhbnNpQnVuZGxlIiwiY29sb3JTdHlsZSIsInN0eWxlIiwiYmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJmZyIsImNvbG9yIiwiZGVmYXVsdCIsImNvbnRlbnQiLCJhbnNpVG9JbmxpbmVTdHlsZSIsInRleHQiLCJtYXAiLCJkZWZhdWx0UmVuZGVyU2VnbWVudCIsImtleSIsIkFuc2kiLCJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJyZW5kZXIiLCJjaGlsZHJlbiIsInJlbmRlclNlZ21lbnQiLCJwYXNzVGhyb3VnaFByb3BzIiwicHJvcHMiLCJTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbUJBLFNBQVNBLFVBQVQsQ0FBb0JDLEtBQXBCLEVBQTJCQyxVQUEzQixFQUF1QztBQUNyQyxRQUFNQyxPQUFPLEdBQUdELFVBQVUsSUFBSSxJQUFkLElBQXNCLENBQUNBLFVBQXZCLEdBQW9DLEtBQXBDLEdBQTRDQSxVQUE1RDtBQUNBLFNBQU9FLGVBQU1DLFVBQU4sQ0FBaUIsNkJBQXFCSixLQUFyQixDQUFqQixFQUE4QztBQUNuREssSUFBQUEsV0FBVyxFQUFFSCxPQURzQztBQUVuREksSUFBQUEsSUFBSSxFQUFFLElBRjZDO0FBR25EQyxJQUFBQSxZQUFZLEVBQUU7QUFIcUMsR0FBOUMsQ0FBUDtBQUtELEMsQ0FFRDs7O0FBQ0EsU0FBU0MscUJBQVQsQ0FBK0JDLFVBQS9CLEVBQTJDQyxVQUEzQyxFQUF1RDtBQUNyRCxRQUFNQyxLQUFLLEdBQUcsRUFBZDs7QUFDQSxNQUFJRixVQUFVLENBQUNHLEVBQWYsRUFBbUI7QUFDakJELElBQUFBLEtBQUssQ0FBQ0UsZUFBTixHQUNFSCxVQUFVLElBQUksSUFBZCxHQUNLLE9BQU1BLFVBQVUsQ0FBQ0QsVUFBVSxDQUFDRyxFQUFaLENBQWdCLEdBRHJDLEdBRUssT0FBTUgsVUFBVSxDQUFDRyxFQUFHLEdBSDNCO0FBSUQ7O0FBQ0QsTUFBSUgsVUFBVSxDQUFDSyxFQUFmLEVBQW1CO0FBQ2pCSCxJQUFBQSxLQUFLLENBQUNJLEtBQU4sR0FDRUwsVUFBVSxJQUFJLElBQWQsR0FDSyxPQUFNQSxVQUFVLENBQUNELFVBQVUsQ0FBQ0ssRUFBWixDQUFnQixHQURyQyxHQUVLLE9BQU1MLFVBQVUsQ0FBQ0ssRUFBRyxHQUgzQjtBQUlELEdBTEQsTUFLTztBQUNMLFFBQUlKLFVBQVUsSUFBSSxJQUFsQixFQUF3QjtBQUN0QkMsTUFBQUEsS0FBSyxDQUFDSSxLQUFOLEdBQWUsT0FBTUwsVUFBVSxDQUFDTSxPQUFRLEdBQXhDO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPO0FBQ0xDLElBQUFBLE9BQU8sRUFBRVIsVUFBVSxDQUFDUSxPQURmO0FBRUxOLElBQUFBO0FBRkssR0FBUDtBQUlEOztBQUVELFNBQVNPLGlCQUFULENBQTJCQyxJQUEzQixFQUFpQ2xCLFVBQWpDLEVBQTZDUyxVQUE3QyxFQUF5RDtBQUN2RCxTQUFPWCxVQUFVLENBQUNvQixJQUFELEVBQU9sQixVQUFQLENBQVYsQ0FBNkJtQixHQUE3QixDQUFpQ3BCLEtBQUssSUFDM0NRLHFCQUFxQixDQUFDUixLQUFELEVBQVFVLFVBQVIsQ0FEaEIsQ0FBUDtBQUdEOztBQUVELFNBQVNXLG9CQUFULENBQThCO0FBQUNDLEVBQUFBLEdBQUQ7QUFBTVgsRUFBQUEsS0FBTjtBQUFhTSxFQUFBQTtBQUFiLENBQTlCLEVBQXlFO0FBQ3ZFLHNCQUNFO0FBQU0sSUFBQSxHQUFHLEVBQUVLLEdBQVg7QUFBZ0IsSUFBQSxLQUFLLEVBQUVYO0FBQXZCLEtBQ0dNLE9BREgsQ0FERjtBQUtEOztBQUVjLE1BQU1NLElBQU4sU0FBbUJDLEtBQUssQ0FBQ0MsYUFBekIsQ0FBOEM7QUFDM0RDLEVBQUFBLE1BQU0sR0FBRztBQUNQLFVBQU07QUFDSnpCLE1BQUFBLFVBREk7QUFFSlMsTUFBQUEsVUFGSTtBQUdKaUIsTUFBQUEsUUFISTtBQUlKQyxNQUFBQSxhQUFhLEdBQUdQLG9CQUpaO0FBS0osU0FBR1E7QUFMQyxRQU1GLEtBQUtDLEtBTlQ7QUFPQSx3QkFDRSw0QkFBVUQsZ0JBQVYsRUFDR1gsaUJBQWlCLENBQUNTLFFBQUQsRUFBVzFCLFVBQVgsRUFBdUJTLFVBQXZCLENBQWpCLENBQW9EVSxHQUFwRCxDQUNDLENBQUM7QUFBQ1QsTUFBQUEsS0FBRDtBQUFRTSxNQUFBQTtBQUFSLEtBQUQsRUFBbUJLLEdBQW5CLEtBQ0VNLGFBQWEsQ0FBQztBQUFDTixNQUFBQSxHQUFHLEVBQUVTLE1BQU0sQ0FBQ1QsR0FBRCxDQUFaO0FBQW1CWCxNQUFBQSxLQUFuQjtBQUEwQk0sTUFBQUE7QUFBMUIsS0FBRCxDQUZoQixDQURILENBREY7QUFRRDs7QUFqQjBEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgQW5zZXIgZnJvbSAnYW5zZXInO1xyXG5pbXBvcnQgZXNjYXBlQ2FycmlhZ2VSZXR1cm4gZnJvbSAnZXNjYXBlLWNhcnJpYWdlJztcclxuXHJcbnR5cGUgUHJvcHMgPSB7XHJcbiAgdXNlQ2xhc3Nlcz86IGJvb2xlYW4sXHJcbiAgY29sb3JTdHlsZT86IHtbY29sb3I6IHN0cmluZ106IHN0cmluZ30sXHJcbiAgY2hpbGRyZW4/OiBzdHJpbmcsXHJcbiAgcmVuZGVyU2VnbWVudD86IFJlbmRlclNlZ21lbnRQcm9wcyA9PiBSZWFjdC5Ob2RlLFxyXG59O1xyXG5cclxuZXhwb3J0IHR5cGUgUmVuZGVyU2VnbWVudFByb3BzID0ge1xyXG4gIGtleTogc3RyaW5nLFxyXG4gIHN0eWxlOiBPYmplY3QsXHJcbiAgY29udGVudDogc3RyaW5nLFxyXG59O1xyXG5cclxuZnVuY3Rpb24gYW5zaVRvSlNPTihpbnB1dCwgdXNlQ2xhc3Nlcykge1xyXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VDbGFzc2VzID09IG51bGwgfHwgIXVzZUNsYXNzZXMgPyBmYWxzZSA6IHVzZUNsYXNzZXM7XHJcbiAgcmV0dXJuIEFuc2VyLmFuc2lUb0pzb24oZXNjYXBlQ2FycmlhZ2VSZXR1cm4oaW5wdXQpLCB7XHJcbiAgICB1c2VfY2xhc3NlczogY2xhc3NlcyxcclxuICAgIGpzb246IHRydWUsXHJcbiAgICByZW1vdmVfZW1wdHk6IHRydWUsXHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIG1ha2Ugc3VyZVxyXG5mdW5jdGlvbiBhbnNpSlNPTnRvU3R5bGVCdW5kbGUoYW5zaUJ1bmRsZSwgY29sb3JTdHlsZSkge1xyXG4gIGNvbnN0IHN0eWxlID0ge307XHJcbiAgaWYgKGFuc2lCdW5kbGUuYmcpIHtcclxuICAgIHN0eWxlLmJhY2tncm91bmRDb2xvciA9XHJcbiAgICAgIGNvbG9yU3R5bGUgIT0gbnVsbFxyXG4gICAgICAgID8gYHJnYigke2NvbG9yU3R5bGVbYW5zaUJ1bmRsZS5iZ119KWBcclxuICAgICAgICA6IGByZ2IoJHthbnNpQnVuZGxlLmJnfSlgO1xyXG4gIH1cclxuICBpZiAoYW5zaUJ1bmRsZS5mZykge1xyXG4gICAgc3R5bGUuY29sb3IgPVxyXG4gICAgICBjb2xvclN0eWxlICE9IG51bGxcclxuICAgICAgICA/IGByZ2IoJHtjb2xvclN0eWxlW2Fuc2lCdW5kbGUuZmddfSlgXHJcbiAgICAgICAgOiBgcmdiKCR7YW5zaUJ1bmRsZS5mZ30pYDtcclxuICB9IGVsc2Uge1xyXG4gICAgaWYgKGNvbG9yU3R5bGUgIT0gbnVsbCkge1xyXG4gICAgICBzdHlsZS5jb2xvciA9IGByZ2IoJHtjb2xvclN0eWxlLmRlZmF1bHR9KWA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiB7XHJcbiAgICBjb250ZW50OiBhbnNpQnVuZGxlLmNvbnRlbnQsXHJcbiAgICBzdHlsZSxcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBhbnNpVG9JbmxpbmVTdHlsZSh0ZXh0LCB1c2VDbGFzc2VzLCBjb2xvclN0eWxlKSB7XHJcbiAgcmV0dXJuIGFuc2lUb0pTT04odGV4dCwgdXNlQ2xhc3NlcykubWFwKGlucHV0ID0+XHJcbiAgICBhbnNpSlNPTnRvU3R5bGVCdW5kbGUoaW5wdXQsIGNvbG9yU3R5bGUpLFxyXG4gICk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlZmF1bHRSZW5kZXJTZWdtZW50KHtrZXksIHN0eWxlLCBjb250ZW50fTogUmVuZGVyU2VnbWVudFByb3BzKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxzcGFuIGtleT17a2V5fSBzdHlsZT17c3R5bGV9PlxyXG4gICAgICB7Y29udGVudH1cclxuICAgIDwvc3Bhbj5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbnNpIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxQcm9wcz4ge1xyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgdXNlQ2xhc3NlcyxcclxuICAgICAgY29sb3JTdHlsZSxcclxuICAgICAgY2hpbGRyZW4sXHJcbiAgICAgIHJlbmRlclNlZ21lbnQgPSBkZWZhdWx0UmVuZGVyU2VnbWVudCxcclxuICAgICAgLi4ucGFzc1Rocm91Z2hQcm9wc1xyXG4gICAgfSA9IHRoaXMucHJvcHM7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Y29kZSB7Li4ucGFzc1Rocm91Z2hQcm9wc30+XHJcbiAgICAgICAge2Fuc2lUb0lubGluZVN0eWxlKGNoaWxkcmVuLCB1c2VDbGFzc2VzLCBjb2xvclN0eWxlKS5tYXAoXHJcbiAgICAgICAgICAoe3N0eWxlLCBjb250ZW50fSwga2V5KSA9PlxyXG4gICAgICAgICAgICByZW5kZXJTZWdtZW50KHtrZXk6IFN0cmluZyhrZXkpLCBzdHlsZSwgY29udGVudH0pLFxyXG4gICAgICAgICl9XHJcbiAgICAgIDwvY29kZT5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdfQ==