"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactDom = _interopRequireDefault(require("react-dom"));

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class BlockDecoration extends React.Component {
  constructor(props) {
    super(props);
    this._marker = void 0;
    this._item = void 0;
    this._item = document.createElement('div');
  }

  componentDidMount() {
    this._createMarker();
  }

  componentWillUnmount() {
    this._marker.destroy();
  }

  componentDidUpdate(prevProps) {
    if (prevProps.editor !== this.props.editor) {
      this._createMarker();
    } else if (!prevProps.range.isEqual(this.props.range)) {
      this._marker.setBufferRange(this.props.range);
    }
  }

  _createMarker() {
    if (this._marker) {
      this._marker.destroy();
    }

    const {
      range,
      editor
    } = this.props;
    this._marker = editor.markBufferRange(range);
    editor.decorateMarker(this._marker, {
      type: 'block',
      position: 'after',
      item: this._item
    });
  }

  render() {
    return /*#__PURE__*/_reactDom.default.createPortal(this.props.children, this._item);
  }

}

exports.default = BlockDecoration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0Jsb2NrRGVjb3JhdGlvbi5qcyJdLCJuYW1lcyI6WyJCbG9ja0RlY29yYXRpb24iLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJfbWFya2VyIiwiX2l0ZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjb21wb25lbnREaWRNb3VudCIsIl9jcmVhdGVNYXJrZXIiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImRlc3Ryb3kiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJlZGl0b3IiLCJyYW5nZSIsImlzRXF1YWwiLCJzZXRCdWZmZXJSYW5nZSIsIm1hcmtCdWZmZXJSYW5nZSIsImRlY29yYXRlTWFya2VyIiwidHlwZSIsInBvc2l0aW9uIiwiaXRlbSIsInJlbmRlciIsIlJlYWN0RE9NIiwiY3JlYXRlUG9ydGFsIiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7Ozs7Ozs7QUFiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBV2UsTUFBTUEsZUFBTixTQUE4QkMsS0FBSyxDQUFDQyxTQUFwQyxDQUViO0FBR0FDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUE4QjtBQUN2QyxVQUFNQSxLQUFOO0FBRHVDLFNBRnpDQyxPQUV5QztBQUFBLFNBRHpDQyxLQUN5QztBQUV2QyxTQUFLQSxLQUFMLEdBQWFDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixLQUF2QixDQUFiO0FBQ0Q7O0FBRURDLEVBQUFBLGlCQUFpQixHQUFHO0FBQ2xCLFNBQUtDLGFBQUw7QUFDRDs7QUFFREMsRUFBQUEsb0JBQW9CLEdBQUc7QUFDckIsU0FBS04sT0FBTCxDQUFhTyxPQUFiO0FBQ0Q7O0FBRURDLEVBQUFBLGtCQUFrQixDQUFDQyxTQUFELEVBQWtDO0FBQ2xELFFBQUlBLFNBQVMsQ0FBQ0MsTUFBVixLQUFxQixLQUFLWCxLQUFMLENBQVdXLE1BQXBDLEVBQTRDO0FBQzFDLFdBQUtMLGFBQUw7QUFDRCxLQUZELE1BRU8sSUFBSSxDQUFDSSxTQUFTLENBQUNFLEtBQVYsQ0FBZ0JDLE9BQWhCLENBQXdCLEtBQUtiLEtBQUwsQ0FBV1ksS0FBbkMsQ0FBTCxFQUFnRDtBQUNyRCxXQUFLWCxPQUFMLENBQWFhLGNBQWIsQ0FBNEIsS0FBS2QsS0FBTCxDQUFXWSxLQUF2QztBQUNEO0FBQ0Y7O0FBRUROLEVBQUFBLGFBQWEsR0FBRztBQUNkLFFBQUksS0FBS0wsT0FBVCxFQUFrQjtBQUNoQixXQUFLQSxPQUFMLENBQWFPLE9BQWI7QUFDRDs7QUFDRCxVQUFNO0FBQUNJLE1BQUFBLEtBQUQ7QUFBUUQsTUFBQUE7QUFBUixRQUFrQixLQUFLWCxLQUE3QjtBQUNBLFNBQUtDLE9BQUwsR0FBZVUsTUFBTSxDQUFDSSxlQUFQLENBQXVCSCxLQUF2QixDQUFmO0FBRUFELElBQUFBLE1BQU0sQ0FBQ0ssY0FBUCxDQUFzQixLQUFLZixPQUEzQixFQUFvQztBQUNsQ2dCLE1BQUFBLElBQUksRUFBRSxPQUQ0QjtBQUVsQ0MsTUFBQUEsUUFBUSxFQUFFLE9BRndCO0FBR2xDQyxNQUFBQSxJQUFJLEVBQUUsS0FBS2pCO0FBSHVCLEtBQXBDO0FBS0Q7O0FBRURrQixFQUFBQSxNQUFNLEdBQUc7QUFDUCx3QkFBT0Msa0JBQVNDLFlBQVQsQ0FBc0IsS0FBS3RCLEtBQUwsQ0FBV3VCLFFBQWpDLEVBQTJDLEtBQUtyQixLQUFoRCxDQUFQO0FBQ0Q7O0FBeENEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvdyBzdHJpY3RcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG50eXBlIEJsb2NrRGVjb3JhdGlvblByb3BzID0ge1xyXG4gIHJhbmdlOiBhdG9tJFJhbmdlLFxyXG4gIGVkaXRvcjogYXRvbSRUZXh0RWRpdG9yLFxyXG4gIGNoaWxkcmVuOiBSZWFjdC5Ob2RlLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmxvY2tEZWNvcmF0aW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFxyXG4gIEJsb2NrRGVjb3JhdGlvblByb3BzLFxyXG4+IHtcclxuICBfbWFya2VyOiBhdG9tJE1hcmtlcjtcclxuICBfaXRlbTogSFRNTEVsZW1lbnQ7XHJcbiAgY29uc3RydWN0b3IocHJvcHM6IEJsb2NrRGVjb3JhdGlvblByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLl9pdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgfVxyXG5cclxuICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIHRoaXMuX2NyZWF0ZU1hcmtlcigpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICB0aGlzLl9tYXJrZXIuZGVzdHJveSgpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wczogQmxvY2tEZWNvcmF0aW9uUHJvcHMpIHtcclxuICAgIGlmIChwcmV2UHJvcHMuZWRpdG9yICE9PSB0aGlzLnByb3BzLmVkaXRvcikge1xyXG4gICAgICB0aGlzLl9jcmVhdGVNYXJrZXIoKTtcclxuICAgIH0gZWxzZSBpZiAoIXByZXZQcm9wcy5yYW5nZS5pc0VxdWFsKHRoaXMucHJvcHMucmFuZ2UpKSB7XHJcbiAgICAgIHRoaXMuX21hcmtlci5zZXRCdWZmZXJSYW5nZSh0aGlzLnByb3BzLnJhbmdlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9jcmVhdGVNYXJrZXIoKSB7XHJcbiAgICBpZiAodGhpcy5fbWFya2VyKSB7XHJcbiAgICAgIHRoaXMuX21hcmtlci5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB7cmFuZ2UsIGVkaXRvcn0gPSB0aGlzLnByb3BzO1xyXG4gICAgdGhpcy5fbWFya2VyID0gZWRpdG9yLm1hcmtCdWZmZXJSYW5nZShyYW5nZSk7XHJcblxyXG4gICAgZWRpdG9yLmRlY29yYXRlTWFya2VyKHRoaXMuX21hcmtlciwge1xyXG4gICAgICB0eXBlOiAnYmxvY2snLFxyXG4gICAgICBwb3NpdGlvbjogJ2FmdGVyJyxcclxuICAgICAgaXRlbTogdGhpcy5faXRlbSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIFJlYWN0RE9NLmNyZWF0ZVBvcnRhbCh0aGlzLnByb3BzLmNoaWxkcmVuLCB0aGlzLl9pdGVtKTtcclxuICB9XHJcbn1cclxuIl19