"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SettingsControl = _interopRequireDefault(require("./SettingsControl"));

var React = _interopRequireWildcard(require("react"));

var _analytics = require("@atom-ide-community/nuclide-commons/analytics");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class BoundSettingsControl extends React.Component {
  constructor(props) {
    super(props);
    this._observeConfigDisposable = void 0;

    this._onChange = value => {
      (0, _analytics.track)('bound-settings-control-change', {
        keyPath: this.props.keyPath,
        value
      });

      if (this.props.onChangeCallback != null) {
        this.props.onChangeCallback();
      }

      atom.config.set(this.props.keyPath, value);
    };

    this.state = {
      value: atom.config.get(props.keyPath)
    };
  }

  _updateSubscription() {
    if (this._observeConfigDisposable != null) {
      this._observeConfigDisposable.dispose();
    }

    this._observeConfigDisposable = atom.config.onDidChange(this.props.keyPath, ({
      newValue
    }) => {
      this.setState({
        value: newValue
      });
    });
  }

  componentDidMount() {
    this._updateSubscription();
  }

  componentDidUpdate(prevProps) {
    if (prevProps.keyPath !== this.props.keyPath) {
      this.setState({
        value: atom.config.get(this.props.keyPath)
      });

      this._updateSubscription();
    }
  }

  componentWillUnmount() {
    if (this._observeConfigDisposable != null) {
      this._observeConfigDisposable.dispose();
    }
  }

  render() {
    const schema = atom.config.getSchema(this.props.keyPath);
    return /*#__PURE__*/React.createElement(_SettingsControl.default, {
      keyPath: this.props.keyPath,
      title: schema.title,
      value: this.state.value,
      onChange: this._onChange,
      schema: schema,
      hideDetails: this.props.hideDetails
    });
  }

}

exports.default = BoundSettingsControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0JvdW5kU2V0dGluZ3NDb250cm9sLmpzIl0sIm5hbWVzIjpbIkJvdW5kU2V0dGluZ3NDb250cm9sIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiX29ic2VydmVDb25maWdEaXNwb3NhYmxlIiwiX29uQ2hhbmdlIiwidmFsdWUiLCJrZXlQYXRoIiwib25DaGFuZ2VDYWxsYmFjayIsImF0b20iLCJjb25maWciLCJzZXQiLCJzdGF0ZSIsImdldCIsIl91cGRhdGVTdWJzY3JpcHRpb24iLCJkaXNwb3NlIiwib25EaWRDaGFuZ2UiLCJuZXdWYWx1ZSIsInNldFN0YXRlIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsInNjaGVtYSIsImdldFNjaGVtYSIsInRpdGxlIiwiaGlkZURldGFpbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZ0JlLE1BQU1BLG9CQUFOLFNBQW1DQyxLQUFLLENBQUNDLFNBQXpDLENBR2I7QUFHQUMsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQWU7QUFDeEIsVUFBTUEsS0FBTjtBQUR3QixTQUYxQkMsd0JBRTBCOztBQUFBLFNBa0QxQkMsU0FsRDBCLEdBa0RiQyxLQUFELElBQXNCO0FBQ2hDLDRCQUFNLCtCQUFOLEVBQXVDO0FBQ3JDQyxRQUFBQSxPQUFPLEVBQUUsS0FBS0osS0FBTCxDQUFXSSxPQURpQjtBQUVyQ0QsUUFBQUE7QUFGcUMsT0FBdkM7O0FBSUEsVUFBSSxLQUFLSCxLQUFMLENBQVdLLGdCQUFYLElBQStCLElBQW5DLEVBQXlDO0FBQ3ZDLGFBQUtMLEtBQUwsQ0FBV0ssZ0JBQVg7QUFDRDs7QUFDREMsTUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLEdBQVosQ0FBZ0IsS0FBS1IsS0FBTCxDQUFXSSxPQUEzQixFQUFvQ0QsS0FBcEM7QUFDRCxLQTNEeUI7O0FBRXhCLFNBQUtNLEtBQUwsR0FBYTtBQUNYTixNQUFBQSxLQUFLLEVBQUVHLElBQUksQ0FBQ0MsTUFBTCxDQUFZRyxHQUFaLENBQWdCVixLQUFLLENBQUNJLE9BQXRCO0FBREksS0FBYjtBQUdEOztBQUVETyxFQUFBQSxtQkFBbUIsR0FBUztBQUMxQixRQUFJLEtBQUtWLHdCQUFMLElBQWlDLElBQXJDLEVBQTJDO0FBQ3pDLFdBQUtBLHdCQUFMLENBQThCVyxPQUE5QjtBQUNEOztBQUNELFNBQUtYLHdCQUFMLEdBQWdDSyxJQUFJLENBQUNDLE1BQUwsQ0FBWU0sV0FBWixDQUM5QixLQUFLYixLQUFMLENBQVdJLE9BRG1CLEVBRTlCLENBQUM7QUFBQ1UsTUFBQUE7QUFBRCxLQUFELEtBQWdCO0FBQ2QsV0FBS0MsUUFBTCxDQUFjO0FBQUNaLFFBQUFBLEtBQUssRUFBRVc7QUFBUixPQUFkO0FBQ0QsS0FKNkIsQ0FBaEM7QUFNRDs7QUFFREUsRUFBQUEsaUJBQWlCLEdBQVM7QUFDeEIsU0FBS0wsbUJBQUw7QUFDRDs7QUFFRE0sRUFBQUEsa0JBQWtCLENBQUNDLFNBQUQsRUFBeUI7QUFDekMsUUFBSUEsU0FBUyxDQUFDZCxPQUFWLEtBQXNCLEtBQUtKLEtBQUwsQ0FBV0ksT0FBckMsRUFBOEM7QUFDNUMsV0FBS1csUUFBTCxDQUFjO0FBQUNaLFFBQUFBLEtBQUssRUFBRUcsSUFBSSxDQUFDQyxNQUFMLENBQVlHLEdBQVosQ0FBZ0IsS0FBS1YsS0FBTCxDQUFXSSxPQUEzQjtBQUFSLE9BQWQ7O0FBQ0EsV0FBS08sbUJBQUw7QUFDRDtBQUNGOztBQUVEUSxFQUFBQSxvQkFBb0IsR0FBUztBQUMzQixRQUFJLEtBQUtsQix3QkFBTCxJQUFpQyxJQUFyQyxFQUEyQztBQUN6QyxXQUFLQSx3QkFBTCxDQUE4QlcsT0FBOUI7QUFDRDtBQUNGOztBQUVEUSxFQUFBQSxNQUFNLEdBQXVCO0FBQzNCLFVBQU1DLE1BQU0sR0FBR2YsSUFBSSxDQUFDQyxNQUFMLENBQVllLFNBQVosQ0FBc0IsS0FBS3RCLEtBQUwsQ0FBV0ksT0FBakMsQ0FBZjtBQUNBLHdCQUNFLG9CQUFDLHdCQUFEO0FBQ0UsTUFBQSxPQUFPLEVBQUUsS0FBS0osS0FBTCxDQUFXSSxPQUR0QjtBQUVFLE1BQUEsS0FBSyxFQUFFaUIsTUFBTSxDQUFDRSxLQUZoQjtBQUdFLE1BQUEsS0FBSyxFQUFFLEtBQUtkLEtBQUwsQ0FBV04sS0FIcEI7QUFJRSxNQUFBLFFBQVEsRUFBRSxLQUFLRCxTQUpqQjtBQUtFLE1BQUEsTUFBTSxFQUFFbUIsTUFMVjtBQU1FLE1BQUEsV0FBVyxFQUFFLEtBQUtyQixLQUFMLENBQVd3QjtBQU4xQixNQURGO0FBVUQ7O0FBbkREIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IFNldHRpbmdzQ29udHJvbCBmcm9tICcuL1NldHRpbmdzQ29udHJvbCc7XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHt0cmFja30gZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMvYW5hbHl0aWNzJztcclxuXHJcbnR5cGUgUHJvcHMgPSB7fFxyXG4gIGtleVBhdGg6IHN0cmluZyxcclxuICBoaWRlRGV0YWlscz86IGJvb2xlYW4sXHJcbiAgb25DaGFuZ2VDYWxsYmFjaz86ICgpID0+IHZvaWQsXHJcbnx9O1xyXG5cclxudHlwZSBTdGF0ZSA9IHt8XHJcbiAgdmFsdWU6IGFueSxcclxufH07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb3VuZFNldHRpbmdzQ29udHJvbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxcclxuICBQcm9wcyxcclxuICBTdGF0ZSxcclxuPiB7XHJcbiAgX29ic2VydmVDb25maWdEaXNwb3NhYmxlOiA/SURpc3Bvc2FibGU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBQcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgdmFsdWU6IGF0b20uY29uZmlnLmdldChwcm9wcy5rZXlQYXRoKSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBfdXBkYXRlU3Vic2NyaXB0aW9uKCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX29ic2VydmVDb25maWdEaXNwb3NhYmxlICE9IG51bGwpIHtcclxuICAgICAgdGhpcy5fb2JzZXJ2ZUNvbmZpZ0Rpc3Bvc2FibGUuZGlzcG9zZSgpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fb2JzZXJ2ZUNvbmZpZ0Rpc3Bvc2FibGUgPSBhdG9tLmNvbmZpZy5vbkRpZENoYW5nZShcclxuICAgICAgdGhpcy5wcm9wcy5rZXlQYXRoLFxyXG4gICAgICAoe25ld1ZhbHVlfSkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3ZhbHVlOiBuZXdWYWx1ZX0pO1xyXG4gICAgICB9LFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGNvbXBvbmVudERpZE1vdW50KCk6IHZvaWQge1xyXG4gICAgdGhpcy5fdXBkYXRlU3Vic2NyaXB0aW9uKCk7XHJcbiAgfVxyXG5cclxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzOiBQcm9wcyk6IHZvaWQge1xyXG4gICAgaWYgKHByZXZQcm9wcy5rZXlQYXRoICE9PSB0aGlzLnByb3BzLmtleVBhdGgpIHtcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7dmFsdWU6IGF0b20uY29uZmlnLmdldCh0aGlzLnByb3BzLmtleVBhdGgpfSk7XHJcbiAgICAgIHRoaXMuX3VwZGF0ZVN1YnNjcmlwdGlvbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50V2lsbFVubW91bnQoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5fb2JzZXJ2ZUNvbmZpZ0Rpc3Bvc2FibGUgIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLl9vYnNlcnZlQ29uZmlnRGlzcG9zYWJsZS5kaXNwb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKTogUmVhY3QuRWxlbWVudDxhbnk+IHtcclxuICAgIGNvbnN0IHNjaGVtYSA9IGF0b20uY29uZmlnLmdldFNjaGVtYSh0aGlzLnByb3BzLmtleVBhdGgpO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFNldHRpbmdzQ29udHJvbFxyXG4gICAgICAgIGtleVBhdGg9e3RoaXMucHJvcHMua2V5UGF0aH1cclxuICAgICAgICB0aXRsZT17c2NoZW1hLnRpdGxlfVxyXG4gICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfVxyXG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9vbkNoYW5nZX1cclxuICAgICAgICBzY2hlbWE9e3NjaGVtYX1cclxuICAgICAgICBoaWRlRGV0YWlscz17dGhpcy5wcm9wcy5oaWRlRGV0YWlsc31cclxuICAgICAgLz5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBfb25DaGFuZ2UgPSAodmFsdWU6IGFueSk6IHZvaWQgPT4ge1xyXG4gICAgdHJhY2soJ2JvdW5kLXNldHRpbmdzLWNvbnRyb2wtY2hhbmdlJywge1xyXG4gICAgICBrZXlQYXRoOiB0aGlzLnByb3BzLmtleVBhdGgsXHJcbiAgICAgIHZhbHVlLFxyXG4gICAgfSk7XHJcbiAgICBpZiAodGhpcy5wcm9wcy5vbkNoYW5nZUNhbGxiYWNrICE9IG51bGwpIHtcclxuICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZUNhbGxiYWNrKCk7XHJcbiAgICB9XHJcbiAgICBhdG9tLmNvbmZpZy5zZXQodGhpcy5wcm9wcy5rZXlQYXRoLCB2YWx1ZSk7XHJcbiAgfTtcclxufVxyXG4iXX0=