"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileChangesExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _diffparser = _interopRequireDefault(require("diffparser"));

var _FileChanges = _interopRequireDefault(require("./FileChanges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const sampleUnifiedDiff = `
diff --git a/some/folder/filename.js b/some/folder/filename.js
index abc123..cde456 100644
--- a/some/folder/filename.js
+++ b/some/folder/filename.js
@@ -36,6 +36,7 @@ export type SomeContext = {
   foo: bar,
 };

+import newdep from 'newdep';
 import {bla} from 'bla';
 import {qwe} from 'qwe';
 import {ertyu} from 'ertyu';
@@ -97,11 +98,11 @@ export default class MoreContext extends Something {
   props: Props;
   state: State;

-  thing: Thing;
+  thing: ?Thing;

   constructor(a, b) {
     super(a, b);
-    this.thing = new Thing();
+    this.thing = null;

     const foobar =
       barfoo;
@@ -144,8 +145,20 @@ export default class MoreContext extends Something {
   /**
    * Public API
    */
-  focus(): void {
-    this._getFoo().bar();
+  // comment comment
+  // comment comment
+  // comment comment
+  // comment comment
+  // comment comment
+  setup(): void {
+    invariant(1 === 1);
+    this.foobar();
+  }
+
+  teardown(): void {
+    invariant(this.thing != null);
+    this.thing.foo();
+    this.thing = null;
   }

   // end of hunk
`;

class FileChangesExample extends React.Component {
  render() {
    const diff = (0, _diffparser.default)(sampleUnifiedDiff);
    const changes = diff.map(file => /*#__PURE__*/React.createElement(_FileChanges.default, {
      diff: file,
      key: `${file.from}:${file.to}`
    }));
    return /*#__PURE__*/React.createElement("div", null, changes);
  }

}

const FileChangesExamples = {
  sectionName: 'FileChanges',
  description: 'Displays unified diffs in separate, per-hunk TextEditor instances',
  examples: [{
    title: 'Basic example',
    component: FileChangesExample
  }]
};
exports.FileChangesExamples = FileChangesExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0ZpbGVDaGFuZ2VzLmV4YW1wbGUuanMiXSwibmFtZXMiOlsic2FtcGxlVW5pZmllZERpZmYiLCJGaWxlQ2hhbmdlc0V4YW1wbGUiLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsImRpZmYiLCJjaGFuZ2VzIiwibWFwIiwiZmlsZSIsImZyb20iLCJ0byIsIkZpbGVDaGFuZ2VzRXhhbXBsZXMiLCJzZWN0aW9uTmFtZSIsImRlc2NyaXB0aW9uIiwiZXhhbXBsZXMiLCJ0aXRsZSIsImNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOztBQUNBOztBQUNBOzs7Ozs7OztBQWRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQSxNQUFNQSxpQkFBaUIsR0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBbERBOztBQW9EQSxNQUFNQyxrQkFBTixTQUFpQ0MsS0FBSyxDQUFDQyxTQUF2QyxDQUFxRDtBQUNuREMsRUFBQUEsTUFBTSxHQUFlO0FBQ25CLFVBQU1DLElBQUksR0FBRyx5QkFBTUwsaUJBQU4sQ0FBYjtBQUNBLFVBQU1NLE9BQU8sR0FBR0QsSUFBSSxDQUFDRSxHQUFMLENBQVNDLElBQUksaUJBQzNCLG9CQUFDLG9CQUFEO0FBQWEsTUFBQSxJQUFJLEVBQUVBLElBQW5CO0FBQXlCLE1BQUEsR0FBRyxFQUFHLEdBQUVBLElBQUksQ0FBQ0MsSUFBSyxJQUFHRCxJQUFJLENBQUNFLEVBQUc7QUFBdEQsTUFEYyxDQUFoQjtBQUdBLHdCQUFPLGlDQUFNSixPQUFOLENBQVA7QUFDRDs7QUFQa0Q7O0FBVTlDLE1BQU1LLG1CQUFtQixHQUFHO0FBQ2pDQyxFQUFBQSxXQUFXLEVBQUUsYUFEb0I7QUFFakNDLEVBQUFBLFdBQVcsRUFDVCxtRUFIK0I7QUFJakNDLEVBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VDLElBQUFBLEtBQUssRUFBRSxlQURUO0FBRUVDLElBQUFBLFNBQVMsRUFBRWY7QUFGYixHQURRO0FBSnVCLENBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHBhcnNlIGZyb20gJ2RpZmZwYXJzZXInO1xyXG5pbXBvcnQgRmlsZUNoYW5nZXMgZnJvbSAnLi9GaWxlQ2hhbmdlcyc7XHJcblxyXG5jb25zdCBzYW1wbGVVbmlmaWVkRGlmZiA9IGBcclxuZGlmZiAtLWdpdCBhL3NvbWUvZm9sZGVyL2ZpbGVuYW1lLmpzIGIvc29tZS9mb2xkZXIvZmlsZW5hbWUuanNcclxuaW5kZXggYWJjMTIzLi5jZGU0NTYgMTAwNjQ0XHJcbi0tLSBhL3NvbWUvZm9sZGVyL2ZpbGVuYW1lLmpzXHJcbisrKyBiL3NvbWUvZm9sZGVyL2ZpbGVuYW1lLmpzXHJcbkBAIC0zNiw2ICszNiw3IEBAIGV4cG9ydCB0eXBlIFNvbWVDb250ZXh0ID0ge1xyXG4gICBmb286IGJhcixcclxuIH07XHJcblxyXG4raW1wb3J0IG5ld2RlcCBmcm9tICduZXdkZXAnO1xyXG4gaW1wb3J0IHtibGF9IGZyb20gJ2JsYSc7XHJcbiBpbXBvcnQge3F3ZX0gZnJvbSAncXdlJztcclxuIGltcG9ydCB7ZXJ0eXV9IGZyb20gJ2VydHl1JztcclxuQEAgLTk3LDExICs5OCwxMSBAQCBleHBvcnQgZGVmYXVsdCBjbGFzcyBNb3JlQ29udGV4dCBleHRlbmRzIFNvbWV0aGluZyB7XHJcbiAgIHByb3BzOiBQcm9wcztcclxuICAgc3RhdGU6IFN0YXRlO1xyXG5cclxuLSAgdGhpbmc6IFRoaW5nO1xyXG4rICB0aGluZzogP1RoaW5nO1xyXG5cclxuICAgY29uc3RydWN0b3IoYSwgYikge1xyXG4gICAgIHN1cGVyKGEsIGIpO1xyXG4tICAgIHRoaXMudGhpbmcgPSBuZXcgVGhpbmcoKTtcclxuKyAgICB0aGlzLnRoaW5nID0gbnVsbDtcclxuXHJcbiAgICAgY29uc3QgZm9vYmFyID1cclxuICAgICAgIGJhcmZvbztcclxuQEAgLTE0NCw4ICsxNDUsMjAgQEAgZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9yZUNvbnRleHQgZXh0ZW5kcyBTb21ldGhpbmcge1xyXG4gICAvKipcclxuICAgICogUHVibGljIEFQSVxyXG4gICAgKi9cclxuLSAgZm9jdXMoKTogdm9pZCB7XHJcbi0gICAgdGhpcy5fZ2V0Rm9vKCkuYmFyKCk7XHJcbisgIC8vIGNvbW1lbnQgY29tbWVudFxyXG4rICAvLyBjb21tZW50IGNvbW1lbnRcclxuKyAgLy8gY29tbWVudCBjb21tZW50XHJcbisgIC8vIGNvbW1lbnQgY29tbWVudFxyXG4rICAvLyBjb21tZW50IGNvbW1lbnRcclxuKyAgc2V0dXAoKTogdm9pZCB7XHJcbisgICAgaW52YXJpYW50KDEgPT09IDEpO1xyXG4rICAgIHRoaXMuZm9vYmFyKCk7XHJcbisgIH1cclxuK1xyXG4rICB0ZWFyZG93bigpOiB2b2lkIHtcclxuKyAgICBpbnZhcmlhbnQodGhpcy50aGluZyAhPSBudWxsKTtcclxuKyAgICB0aGlzLnRoaW5nLmZvbygpO1xyXG4rICAgIHRoaXMudGhpbmcgPSBudWxsO1xyXG4gICB9XHJcblxyXG4gICAvLyBlbmQgb2YgaHVua1xyXG5gO1xyXG5cclxuY2xhc3MgRmlsZUNoYW5nZXNFeGFtcGxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PHt9PiB7XHJcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgY29uc3QgZGlmZiA9IHBhcnNlKHNhbXBsZVVuaWZpZWREaWZmKTtcclxuICAgIGNvbnN0IGNoYW5nZXMgPSBkaWZmLm1hcChmaWxlID0+IChcclxuICAgICAgPEZpbGVDaGFuZ2VzIGRpZmY9e2ZpbGV9IGtleT17YCR7ZmlsZS5mcm9tfToke2ZpbGUudG99YH0gLz5cclxuICAgICkpO1xyXG4gICAgcmV0dXJuIDxkaXY+e2NoYW5nZXN9PC9kaXY+O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEZpbGVDaGFuZ2VzRXhhbXBsZXMgPSB7XHJcbiAgc2VjdGlvbk5hbWU6ICdGaWxlQ2hhbmdlcycsXHJcbiAgZGVzY3JpcHRpb246XHJcbiAgICAnRGlzcGxheXMgdW5pZmllZCBkaWZmcyBpbiBzZXBhcmF0ZSwgcGVyLWh1bmsgVGV4dEVkaXRvciBpbnN0YW5jZXMnLFxyXG4gIGV4YW1wbGVzOiBbXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAnQmFzaWMgZXhhbXBsZScsXHJcbiAgICAgIGNvbXBvbmVudDogRmlsZUNoYW5nZXNFeGFtcGxlLFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG4iXX0=