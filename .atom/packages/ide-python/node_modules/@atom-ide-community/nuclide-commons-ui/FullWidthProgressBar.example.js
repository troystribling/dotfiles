"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FullWidthProgressBarExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _Block = require("./Block");

var _FullWidthProgressBar = _interopRequireDefault(require("./FullWidthProgressBar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const Wrapper = ({
  children
}) => /*#__PURE__*/React.createElement("div", {
  style: {
    position: 'relative',
    paddingBottom: 5
  }
}, children);

const FullWidthProgressBarExample = () => /*#__PURE__*/React.createElement("div", null, "0%:", /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(_FullWidthProgressBar.default, {
  progress: 0,
  visible: true
}))), "50%:", /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(_FullWidthProgressBar.default, {
  progress: 0.5,
  visible: true
}))), "100%:", /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(_FullWidthProgressBar.default, {
  progress: 1,
  visible: true
}))), "Indeterminate (progress=null):", /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(_FullWidthProgressBar.default, {
  progress: null,
  visible: true
}))));

const FullWidthProgressBarExamples = {
  sectionName: 'FullWidthProgressBar',
  description: 'A subtle progress indicator that stretches across an entire pane or panel, indicating general progress.',
  examples: [{
    title: 'FullWidthProgressBar',
    component: FullWidthProgressBarExample
  }]
};
exports.FullWidthProgressBarExamples = FullWidthProgressBarExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0Z1bGxXaWR0aFByb2dyZXNzQmFyLmV4YW1wbGUuanMiXSwibmFtZXMiOlsiV3JhcHBlciIsImNoaWxkcmVuIiwicG9zaXRpb24iLCJwYWRkaW5nQm90dG9tIiwiRnVsbFdpZHRoUHJvZ3Jlc3NCYXJFeGFtcGxlIiwiRnVsbFdpZHRoUHJvZ3Jlc3NCYXJFeGFtcGxlcyIsInNlY3Rpb25OYW1lIiwiZGVzY3JpcHRpb24iLCJleGFtcGxlcyIsInRpdGxlIiwiY29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BLE1BQU1BLE9BQU8sR0FBRyxDQUFDO0FBQUNDLEVBQUFBO0FBQUQsQ0FBRCxrQkFDZDtBQUFLLEVBQUEsS0FBSyxFQUFFO0FBQUNDLElBQUFBLFFBQVEsRUFBRSxVQUFYO0FBQXVCQyxJQUFBQSxhQUFhLEVBQUU7QUFBdEM7QUFBWixHQUF1REYsUUFBdkQsQ0FERjs7QUFJQSxNQUFNRywyQkFBMkIsR0FBRyxtQkFDbEMscURBRUUsb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxPQUFELHFCQUNFLG9CQUFDLDZCQUFEO0FBQXNCLEVBQUEsUUFBUSxFQUFFLENBQWhDO0FBQW1DLEVBQUEsT0FBTyxFQUFFO0FBQTVDLEVBREYsQ0FERixDQUZGLHVCQVFFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsT0FBRCxxQkFDRSxvQkFBQyw2QkFBRDtBQUFzQixFQUFBLFFBQVEsRUFBRSxHQUFoQztBQUFxQyxFQUFBLE9BQU8sRUFBRTtBQUE5QyxFQURGLENBREYsQ0FSRix3QkFjRSxvQkFBQyxZQUFELHFCQUNFLG9CQUFDLE9BQUQscUJBQ0Usb0JBQUMsNkJBQUQ7QUFBc0IsRUFBQSxRQUFRLEVBQUUsQ0FBaEM7QUFBbUMsRUFBQSxPQUFPLEVBQUU7QUFBNUMsRUFERixDQURGLENBZEYsaURBb0JFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsT0FBRCxxQkFDRSxvQkFBQyw2QkFBRDtBQUFzQixFQUFBLFFBQVEsRUFBRSxJQUFoQztBQUFzQyxFQUFBLE9BQU8sRUFBRTtBQUEvQyxFQURGLENBREYsQ0FwQkYsQ0FERjs7QUE2Qk8sTUFBTUMsNEJBQTRCLEdBQUc7QUFDMUNDLEVBQUFBLFdBQVcsRUFBRSxzQkFENkI7QUFFMUNDLEVBQUFBLFdBQVcsRUFDVCx5R0FId0M7QUFJMUNDLEVBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VDLElBQUFBLEtBQUssRUFBRSxzQkFEVDtBQUVFQyxJQUFBQSxTQUFTLEVBQUVOO0FBRmIsR0FEUTtBQUpnQyxDQUFyQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtCbG9ja30gZnJvbSAnLi9CbG9jayc7XHJcbmltcG9ydCBGdWxsV2lkdGhQcm9ncmVzc0JhciBmcm9tICcuL0Z1bGxXaWR0aFByb2dyZXNzQmFyJztcclxuXHJcbmNvbnN0IFdyYXBwZXIgPSAoe2NoaWxkcmVufToge2NoaWxkcmVuOiBSZWFjdC5FbGVtZW50PGFueT59KSA9PiAoXHJcbiAgPGRpdiBzdHlsZT17e3Bvc2l0aW9uOiAncmVsYXRpdmUnLCBwYWRkaW5nQm90dG9tOiA1fX0+e2NoaWxkcmVufTwvZGl2PlxyXG4pO1xyXG5cclxuY29uc3QgRnVsbFdpZHRoUHJvZ3Jlc3NCYXJFeGFtcGxlID0gKCk6IFJlYWN0LkVsZW1lbnQ8YW55PiA9PiAoXHJcbiAgPGRpdj5cclxuICAgIDAlOlxyXG4gICAgPEJsb2NrPlxyXG4gICAgICA8V3JhcHBlcj5cclxuICAgICAgICA8RnVsbFdpZHRoUHJvZ3Jlc3NCYXIgcHJvZ3Jlc3M9ezB9IHZpc2libGU9e3RydWV9IC8+XHJcbiAgICAgIDwvV3JhcHBlcj5cclxuICAgIDwvQmxvY2s+XHJcbiAgICA1MCU6XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxXcmFwcGVyPlxyXG4gICAgICAgIDxGdWxsV2lkdGhQcm9ncmVzc0JhciBwcm9ncmVzcz17MC41fSB2aXNpYmxlPXt0cnVlfSAvPlxyXG4gICAgICA8L1dyYXBwZXI+XHJcbiAgICA8L0Jsb2NrPlxyXG4gICAgMTAwJTpcclxuICAgIDxCbG9jaz5cclxuICAgICAgPFdyYXBwZXI+XHJcbiAgICAgICAgPEZ1bGxXaWR0aFByb2dyZXNzQmFyIHByb2dyZXNzPXsxfSB2aXNpYmxlPXt0cnVlfSAvPlxyXG4gICAgICA8L1dyYXBwZXI+XHJcbiAgICA8L0Jsb2NrPlxyXG4gICAgSW5kZXRlcm1pbmF0ZSAocHJvZ3Jlc3M9bnVsbCk6XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxXcmFwcGVyPlxyXG4gICAgICAgIDxGdWxsV2lkdGhQcm9ncmVzc0JhciBwcm9ncmVzcz17bnVsbH0gdmlzaWJsZT17dHJ1ZX0gLz5cclxuICAgICAgPC9XcmFwcGVyPlxyXG4gICAgPC9CbG9jaz5cclxuICA8L2Rpdj5cclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBGdWxsV2lkdGhQcm9ncmVzc0JhckV4YW1wbGVzID0ge1xyXG4gIHNlY3Rpb25OYW1lOiAnRnVsbFdpZHRoUHJvZ3Jlc3NCYXInLFxyXG4gIGRlc2NyaXB0aW9uOlxyXG4gICAgJ0Egc3VidGxlIHByb2dyZXNzIGluZGljYXRvciB0aGF0IHN0cmV0Y2hlcyBhY3Jvc3MgYW4gZW50aXJlIHBhbmUgb3IgcGFuZWwsIGluZGljYXRpbmcgZ2VuZXJhbCBwcm9ncmVzcy4nLFxyXG4gIGV4YW1wbGVzOiBbXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAnRnVsbFdpZHRoUHJvZ3Jlc3NCYXInLFxyXG4gICAgICBjb21wb25lbnQ6IEZ1bGxXaWR0aFByb2dyZXNzQmFyRXhhbXBsZSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuIl19