"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assert = _interopRequireDefault(require("assert"));

var _classnames = _interopRequireDefault(require("classnames"));

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class FullWidthProgressBar extends React.Component {
  render() {
    const className = (0, _classnames.default)('nuclide-ui-full-width-progress-bar');
    return /*#__PURE__*/React.createElement("div", {
      className: className,
      hidden: this.props.visible === false
    }, this._renderBar());
  }

  _isIndeterminate() {
    return this.props.progress == null;
  }

  _renderBar() {
    if (this._isIndeterminate()) {
      return /*#__PURE__*/React.createElement("div", {
        className: "indeterminate"
      });
    }

    (0, _assert.default)(this.props.progress != null);
    return /*#__PURE__*/React.createElement(Bar, {
      progress: this.props.progress
    });
  }

}

exports.default = FullWidthProgressBar;

class Bar extends React.Component {
  render() {
    const pct = Math.max(0, Math.min(100, this.props.progress * 100));
    return /*#__PURE__*/React.createElement("div", {
      className: "nuclide-ui-full-width-progress-bar-bar",
      style: {
        width: `${pct}%`
      }
    });
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0Z1bGxXaWR0aFByb2dyZXNzQmFyLmpzIl0sIm5hbWVzIjpbIkZ1bGxXaWR0aFByb2dyZXNzQmFyIiwiUmVhY3QiLCJDb21wb25lbnQiLCJyZW5kZXIiLCJjbGFzc05hbWUiLCJwcm9wcyIsInZpc2libGUiLCJfcmVuZGVyQmFyIiwiX2lzSW5kZXRlcm1pbmF0ZSIsInByb2dyZXNzIiwiQmFyIiwicGN0IiwiTWF0aCIsIm1heCIsIm1pbiIsIndpZHRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVdlLE1BQU1BLG9CQUFOLFNBQW1DQyxLQUFLLENBQUNDLFNBQXpDLENBQTBEO0FBQ3ZFQyxFQUFBQSxNQUFNLEdBQWU7QUFDbkIsVUFBTUMsU0FBUyxHQUFHLHlCQUFXLG9DQUFYLENBQWxCO0FBQ0Esd0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBRUEsU0FBaEI7QUFBMkIsTUFBQSxNQUFNLEVBQUUsS0FBS0MsS0FBTCxDQUFXQyxPQUFYLEtBQXVCO0FBQTFELE9BQ0csS0FBS0MsVUFBTCxFQURILENBREY7QUFLRDs7QUFFREMsRUFBQUEsZ0JBQWdCLEdBQVk7QUFDMUIsV0FBTyxLQUFLSCxLQUFMLENBQVdJLFFBQVgsSUFBdUIsSUFBOUI7QUFDRDs7QUFFREYsRUFBQUEsVUFBVSxHQUF3QjtBQUNoQyxRQUFJLEtBQUtDLGdCQUFMLEVBQUosRUFBNkI7QUFDM0IsMEJBQU87QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLFFBQVA7QUFDRDs7QUFFRCx5QkFBVSxLQUFLSCxLQUFMLENBQVdJLFFBQVgsSUFBdUIsSUFBakM7QUFDQSx3QkFBTyxvQkFBQyxHQUFEO0FBQUssTUFBQSxRQUFRLEVBQUUsS0FBS0osS0FBTCxDQUFXSTtBQUExQixNQUFQO0FBQ0Q7O0FBckJzRTs7OztBQTRCekUsTUFBTUMsR0FBTixTQUFrQlQsS0FBSyxDQUFDQyxTQUF4QixDQUE0QztBQUMxQ0MsRUFBQUEsTUFBTSxHQUFlO0FBQ25CLFVBQU1RLEdBQUcsR0FBR0MsSUFBSSxDQUFDQyxHQUFMLENBQVMsQ0FBVCxFQUFZRCxJQUFJLENBQUNFLEdBQUwsQ0FBUyxHQUFULEVBQWMsS0FBS1QsS0FBTCxDQUFXSSxRQUFYLEdBQXNCLEdBQXBDLENBQVosQ0FBWjtBQUNBLHdCQUNFO0FBQ0UsTUFBQSxTQUFTLEVBQUMsd0NBRFo7QUFFRSxNQUFBLEtBQUssRUFBRTtBQUFDTSxRQUFBQSxLQUFLLEVBQUcsR0FBRUosR0FBSTtBQUFmO0FBRlQsTUFERjtBQU1EOztBQVR5QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnYXNzZXJ0JztcclxuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbnR5cGUgUHJvcHMgPSB7XHJcbiAgcHJvZ3Jlc3M6ID9udW1iZXIgLyogMC4uMSAqLyxcclxuICB2aXNpYmxlPzogYm9vbGVhbixcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZ1bGxXaWR0aFByb2dyZXNzQmFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPiB7XHJcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgY29uc3QgY2xhc3NOYW1lID0gY2xhc3NuYW1lcygnbnVjbGlkZS11aS1mdWxsLXdpZHRoLXByb2dyZXNzLWJhcicpO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gaGlkZGVuPXt0aGlzLnByb3BzLnZpc2libGUgPT09IGZhbHNlfT5cclxuICAgICAgICB7dGhpcy5fcmVuZGVyQmFyKCl9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIF9pc0luZGV0ZXJtaW5hdGUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5wcm9ncmVzcyA9PSBudWxsO1xyXG4gIH1cclxuXHJcbiAgX3JlbmRlckJhcigpOiA/UmVhY3QuRWxlbWVudDxhbnk+IHtcclxuICAgIGlmICh0aGlzLl9pc0luZGV0ZXJtaW5hdGUoKSkge1xyXG4gICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJpbmRldGVybWluYXRlXCIgLz47XHJcbiAgICB9XHJcblxyXG4gICAgaW52YXJpYW50KHRoaXMucHJvcHMucHJvZ3Jlc3MgIT0gbnVsbCk7XHJcbiAgICByZXR1cm4gPEJhciBwcm9ncmVzcz17dGhpcy5wcm9wcy5wcm9ncmVzc30gLz47XHJcbiAgfVxyXG59XHJcblxyXG50eXBlIEJhclByb3BzID0ge1xyXG4gIHByb2dyZXNzOiBudW1iZXIsXHJcbn07XHJcblxyXG5jbGFzcyBCYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8QmFyUHJvcHM+IHtcclxuICByZW5kZXIoKTogUmVhY3QuTm9kZSB7XHJcbiAgICBjb25zdCBwY3QgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxMDAsIHRoaXMucHJvcHMucHJvZ3Jlc3MgKiAxMDApKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXZcclxuICAgICAgICBjbGFzc05hbWU9XCJudWNsaWRlLXVpLWZ1bGwtd2lkdGgtcHJvZ3Jlc3MtYmFyLWJhclwiXHJcbiAgICAgICAgc3R5bGU9e3t3aWR0aDogYCR7cGN0fSVgfX1cclxuICAgICAgLz5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdfQ==