"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MeasuredComponent = void 0;

var React = _interopRequireWildcard(require("react"));

var _observableDom = require("./observable-dom");

var _assert = _interopRequireDefault(require("assert"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/** A container which invokes a callback function supplied in props whenever the
 * container's height and width measurements change. The callback is invoked once
 * when the MeasuredComponent has mounted.
 */
class MeasuredComponent extends React.Component {
  constructor(...args) {
    super(...args);
    this._resizeSubscription = void 0;
    this._domNode = void 0;

    this._updateDomNode = node => {
      if (node == null) {
        this._domNode = null; // _updateDomNode is called before component unmount, so don't need to unsubscribe()
        // in componentWillUnmount()

        this._resizeSubscription.unsubscribe();

        return;
      }

      this._resizeSubscription = new _observableDom.ResizeObservable(node).subscribe(entries => {
        (0, _assert.default)(entries.length === 1);
        this.props.onMeasurementsChanged(entries[0].contentRect, entries[0].target);
      });
      this._domNode = node;
    };
  }

  render() {
    const {
      onMeasurementsChanged,
      ...passThroughProps
    } = this.props;
    return /*#__PURE__*/React.createElement("div", _extends({
      ref: this._updateDomNode
    }, passThroughProps));
  }

}

exports.MeasuredComponent = MeasuredComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL01lYXN1cmVkQ29tcG9uZW50LmpzIl0sIm5hbWVzIjpbIk1lYXN1cmVkQ29tcG9uZW50IiwiUmVhY3QiLCJDb21wb25lbnQiLCJfcmVzaXplU3Vic2NyaXB0aW9uIiwiX2RvbU5vZGUiLCJfdXBkYXRlRG9tTm9kZSIsIm5vZGUiLCJ1bnN1YnNjcmliZSIsIlJlc2l6ZU9ic2VydmFibGUiLCJzdWJzY3JpYmUiLCJlbnRyaWVzIiwibGVuZ3RoIiwicHJvcHMiLCJvbk1lYXN1cmVtZW50c0NoYW5nZWQiLCJjb250ZW50UmVjdCIsInRhcmdldCIsInJlbmRlciIsInBhc3NUaHJvdWdoUHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sTUFBTUEsaUJBQU4sU0FBZ0NDLEtBQUssQ0FBQ0MsU0FBdEMsQ0FBdUQ7QUFBQTtBQUFBO0FBQUEsU0FFNURDLG1CQUY0RDtBQUFBLFNBRzVEQyxRQUg0RDs7QUFBQSxTQUs1REMsY0FMNEQsR0FLMUNDLElBQUQsSUFBOEI7QUFDN0MsVUFBSUEsSUFBSSxJQUFJLElBQVosRUFBa0I7QUFDaEIsYUFBS0YsUUFBTCxHQUFnQixJQUFoQixDQURnQixDQUVoQjtBQUNBOztBQUNBLGFBQUtELG1CQUFMLENBQXlCSSxXQUF6Qjs7QUFDQTtBQUNEOztBQUNELFdBQUtKLG1CQUFMLEdBQTJCLElBQUlLLCtCQUFKLENBQXFCRixJQUFyQixFQUEyQkcsU0FBM0IsQ0FBcUNDLE9BQU8sSUFBSTtBQUN6RSw2QkFBVUEsT0FBTyxDQUFDQyxNQUFSLEtBQW1CLENBQTdCO0FBQ0EsYUFBS0MsS0FBTCxDQUFXQyxxQkFBWCxDQUNFSCxPQUFPLENBQUMsQ0FBRCxDQUFQLENBQVdJLFdBRGIsRUFFRUosT0FBTyxDQUFDLENBQUQsQ0FBUCxDQUFXSyxNQUZiO0FBSUQsT0FOMEIsQ0FBM0I7QUFPQSxXQUFLWCxRQUFMLEdBQWdCRSxJQUFoQjtBQUNELEtBckIyRDtBQUFBOztBQXVCNURVLEVBQUFBLE1BQU0sR0FBZTtBQUNuQixVQUFNO0FBQUNILE1BQUFBLHFCQUFEO0FBQXdCLFNBQUdJO0FBQTNCLFFBQStDLEtBQUtMLEtBQTFEO0FBQ0Esd0JBQU87QUFBSyxNQUFBLEdBQUcsRUFBRSxLQUFLUDtBQUFmLE9BQW1DWSxnQkFBbkMsRUFBUDtBQUNEOztBQTFCMkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93XHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQge1Jlc2l6ZU9ic2VydmFibGV9IGZyb20gJy4vb2JzZXJ2YWJsZS1kb20nO1xyXG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2Fzc2VydCc7XHJcblxyXG50eXBlIFByb3BzID0ge1xyXG4gIG9uTWVhc3VyZW1lbnRzQ2hhbmdlZDogKFxyXG4gICAgbWVhc3VyZW1lbnRzOiBET01SZWN0UmVhZE9ubHksXHJcbiAgICB0YXJnZXQ6IEhUTUxFbGVtZW50LFxyXG4gICkgPT4gbWl4ZWQsXHJcbiAgY2hpbGRyZW4/OiBSZWFjdC5FbGVtZW50PGFueT4sXHJcbn07XHJcblxyXG4vKiogQSBjb250YWluZXIgd2hpY2ggaW52b2tlcyBhIGNhbGxiYWNrIGZ1bmN0aW9uIHN1cHBsaWVkIGluIHByb3BzIHdoZW5ldmVyIHRoZVxyXG4gKiBjb250YWluZXIncyBoZWlnaHQgYW5kIHdpZHRoIG1lYXN1cmVtZW50cyBjaGFuZ2UuIFRoZSBjYWxsYmFjayBpcyBpbnZva2VkIG9uY2VcclxuICogd2hlbiB0aGUgTWVhc3VyZWRDb21wb25lbnQgaGFzIG1vdW50ZWQuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTWVhc3VyZWRDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHM+IHtcclxuICAvLyBMaXN0ZW5zIHRvIHRoZSBjb250YWluZXIgRE9NIG5vZGUgZm9yIG11dGF0aW9uc1xyXG4gIF9yZXNpemVTdWJzY3JpcHRpb246IHJ4anMkSVN1YnNjcmlwdGlvbjtcclxuICBfZG9tTm9kZTogP0hUTUxFbGVtZW50O1xyXG5cclxuICBfdXBkYXRlRG9tTm9kZSA9IChub2RlOiA/SFRNTEVsZW1lbnQpOiB2b2lkID0+IHtcclxuICAgIGlmIChub2RlID09IG51bGwpIHtcclxuICAgICAgdGhpcy5fZG9tTm9kZSA9IG51bGw7XHJcbiAgICAgIC8vIF91cGRhdGVEb21Ob2RlIGlzIGNhbGxlZCBiZWZvcmUgY29tcG9uZW50IHVubW91bnQsIHNvIGRvbid0IG5lZWQgdG8gdW5zdWJzY3JpYmUoKVxyXG4gICAgICAvLyBpbiBjb21wb25lbnRXaWxsVW5tb3VudCgpXHJcbiAgICAgIHRoaXMuX3Jlc2l6ZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLl9yZXNpemVTdWJzY3JpcHRpb24gPSBuZXcgUmVzaXplT2JzZXJ2YWJsZShub2RlKS5zdWJzY3JpYmUoZW50cmllcyA9PiB7XHJcbiAgICAgIGludmFyaWFudChlbnRyaWVzLmxlbmd0aCA9PT0gMSk7XHJcbiAgICAgIHRoaXMucHJvcHMub25NZWFzdXJlbWVudHNDaGFuZ2VkKFxyXG4gICAgICAgIGVudHJpZXNbMF0uY29udGVudFJlY3QsXHJcbiAgICAgICAgZW50cmllc1swXS50YXJnZXQsXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2RvbU5vZGUgPSBub2RlO1xyXG4gIH07XHJcblxyXG4gIHJlbmRlcigpOiBSZWFjdC5Ob2RlIHtcclxuICAgIGNvbnN0IHtvbk1lYXN1cmVtZW50c0NoYW5nZWQsIC4uLnBhc3NUaHJvdWdoUHJvcHN9ID0gdGhpcy5wcm9wcztcclxuICAgIHJldHVybiA8ZGl2IHJlZj17dGhpcy5fdXBkYXRlRG9tTm9kZX0gey4uLnBhc3NUaHJvdWdoUHJvcHN9IC8+O1xyXG4gIH1cclxufVxyXG4iXX0=