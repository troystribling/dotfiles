"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressBar = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/** A Progressbar for showing deterministic progress. */
const ProgressBar = props => /*#__PURE__*/React.createElement("progress", _extends({
  value: props.value,
  max: props.max
}, props));

exports.ProgressBar = ProgressBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1Byb2dyZXNzQmFyLmpzIl0sIm5hbWVzIjpbIlByb2dyZXNzQmFyIiwicHJvcHMiLCJ2YWx1ZSIsIm1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOzs7Ozs7OztBQWFBO0FBQ08sTUFBTUEsV0FBVyxHQUFJQyxLQUFELGlCQUN6QjtBQUFVLEVBQUEsS0FBSyxFQUFFQSxLQUFLLENBQUNDLEtBQXZCO0FBQThCLEVBQUEsR0FBRyxFQUFFRCxLQUFLLENBQUNFO0FBQXpDLEdBQWtERixLQUFsRCxFQURLIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvdyBzdHJpY3RcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbnR5cGUgUHJvcHMgPSB7XHJcbiAgLyoqXHJcbiAgICogVGhlIHByb2dyZXNzIHZhbHVlLiBJZiBub25lIGlzIHByb3ZpZGVkLCB0aGUgUHJvZ3Jlc3NiYXIgd2lsbCByZW5kZXIgaW4gYGluZGVmaW5pdGVgIG1vZGUuXHJcbiAgICogVXNlIGBpbmRlZmluaXRlIG1vZGVgIHRvIGluZGljYXRlIGFuIGluaXRpYWxpemluZyBwZXJpb2QsXHJcbiAgICogUHJlZmVyIHVzaW5nIHRoZSBgTG9hZGluZ1NwaW5uZXJgIGNvbXBvbmVudCBmb3Igc3VyZmFjaW5nIG5vbi1kZXRlcm1pbmlzdGljIHByb2dyZXNzLlxyXG4gICAqL1xyXG4gIHZhbHVlPzogbnVtYmVyLFxyXG4gIC8qKiBEZXRlcm1pbmVzIHRoZSBzY2FsaW5nIG9mIGB2YWx1ZWAuIGBtaW5gIGlzIGltcGxpY2l0bHkgc2V0IHRvIGAwYC4gKi9cclxuICBtYXg/OiBudW1iZXIsXHJcbn07XHJcblxyXG4vKiogQSBQcm9ncmVzc2JhciBmb3Igc2hvd2luZyBkZXRlcm1pbmlzdGljIHByb2dyZXNzLiAqL1xyXG5leHBvcnQgY29uc3QgUHJvZ3Jlc3NCYXIgPSAocHJvcHM6IFByb3BzKSA9PiAoXHJcbiAgPHByb2dyZXNzIHZhbHVlPXtwcm9wcy52YWx1ZX0gbWF4PXtwcm9wcy5tYXh9IHsuLi5wcm9wc30gLz5cclxuKTtcclxuIl19