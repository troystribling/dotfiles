"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressIndicatorExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _Block = require("./Block");

var _ProgressBar = require("./ProgressBar");

var _LoadingSpinner = require("./LoadingSpinner");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const ProgressBarExample = () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_ProgressBar.ProgressBar, null)), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_ProgressBar.ProgressBar, {
  max: 100,
  value: 0
})), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_ProgressBar.ProgressBar, {
  max: 100,
  value: 50
})), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_ProgressBar.ProgressBar, {
  max: 100,
  value: 100
})));

const LoadingSpinnerExample = () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_LoadingSpinner.LoadingSpinner, {
  size: "EXTRA_SMALL"
})), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_LoadingSpinner.LoadingSpinner, {
  size: "SMALL"
})), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_LoadingSpinner.LoadingSpinner, {
  size: "MEDIUM"
})), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_LoadingSpinner.LoadingSpinner, {
  size: "LARGE"
})));

const ProgressIndicatorExamples = {
  sectionName: 'Progress Indicators',
  description: 'Show that work is being performed. Consider using one of these for any work > 1s.',
  examples: [{
    title: 'ProgressBar',
    component: ProgressBarExample
  }, {
    title: 'LoadingSpinner',
    component: LoadingSpinnerExample
  }]
};
exports.ProgressIndicatorExamples = ProgressIndicatorExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1Byb2dyZXNzSW5kaWNhdG9ycy5leGFtcGxlLmpzIl0sIm5hbWVzIjpbIlByb2dyZXNzQmFyRXhhbXBsZSIsIkxvYWRpbmdTcGlubmVyRXhhbXBsZSIsIlByb2dyZXNzSW5kaWNhdG9yRXhhbXBsZXMiLCJzZWN0aW9uTmFtZSIsImRlc2NyaXB0aW9uIiwiZXhhbXBsZXMiLCJ0aXRsZSIsImNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0EsTUFBTUEsa0JBQWtCLEdBQUcsbUJBQ3pCLDhDQUNFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsd0JBQUQsT0FERixDQURGLGVBSUUsb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyx3QkFBRDtBQUFhLEVBQUEsR0FBRyxFQUFFLEdBQWxCO0FBQXVCLEVBQUEsS0FBSyxFQUFFO0FBQTlCLEVBREYsQ0FKRixlQU9FLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsd0JBQUQ7QUFBYSxFQUFBLEdBQUcsRUFBRSxHQUFsQjtBQUF1QixFQUFBLEtBQUssRUFBRTtBQUE5QixFQURGLENBUEYsZUFVRSxvQkFBQyxZQUFELHFCQUNFLG9CQUFDLHdCQUFEO0FBQWEsRUFBQSxHQUFHLEVBQUUsR0FBbEI7QUFBdUIsRUFBQSxLQUFLLEVBQUU7QUFBOUIsRUFERixDQVZGLENBREY7O0FBaUJBLE1BQU1DLHFCQUFxQixHQUFHLG1CQUM1Qiw4Q0FDRSxvQkFBQyxZQUFELHFCQUNFLG9CQUFDLDhCQUFEO0FBQWdCLEVBQUEsSUFBSSxFQUFDO0FBQXJCLEVBREYsQ0FERixlQUlFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsOEJBQUQ7QUFBZ0IsRUFBQSxJQUFJLEVBQUM7QUFBckIsRUFERixDQUpGLGVBT0Usb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyw4QkFBRDtBQUFnQixFQUFBLElBQUksRUFBQztBQUFyQixFQURGLENBUEYsZUFVRSxvQkFBQyxZQUFELHFCQUNFLG9CQUFDLDhCQUFEO0FBQWdCLEVBQUEsSUFBSSxFQUFDO0FBQXJCLEVBREYsQ0FWRixDQURGOztBQWlCTyxNQUFNQyx5QkFBeUIsR0FBRztBQUN2Q0MsRUFBQUEsV0FBVyxFQUFFLHFCQUQwQjtBQUV2Q0MsRUFBQUEsV0FBVyxFQUNULG1GQUhxQztBQUl2Q0MsRUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRUMsSUFBQUEsS0FBSyxFQUFFLGFBRFQ7QUFFRUMsSUFBQUEsU0FBUyxFQUFFUDtBQUZiLEdBRFEsRUFLUjtBQUNFTSxJQUFBQSxLQUFLLEVBQUUsZ0JBRFQ7QUFFRUMsSUFBQUEsU0FBUyxFQUFFTjtBQUZiLEdBTFE7QUFKNkIsQ0FBbEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93XHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7QmxvY2t9IGZyb20gJy4vQmxvY2snO1xyXG5pbXBvcnQge1Byb2dyZXNzQmFyfSBmcm9tICcuL1Byb2dyZXNzQmFyJztcclxuaW1wb3J0IHtMb2FkaW5nU3Bpbm5lcn0gZnJvbSAnLi9Mb2FkaW5nU3Bpbm5lcic7XHJcblxyXG5jb25zdCBQcm9ncmVzc0JhckV4YW1wbGUgPSAoKTogUmVhY3QuRWxlbWVudDxhbnk+ID0+IChcclxuICA8ZGl2PlxyXG4gICAgPEJsb2NrPlxyXG4gICAgICA8UHJvZ3Jlc3NCYXIgLz5cclxuICAgIDwvQmxvY2s+XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxQcm9ncmVzc0JhciBtYXg9ezEwMH0gdmFsdWU9ezB9IC8+XHJcbiAgICA8L0Jsb2NrPlxyXG4gICAgPEJsb2NrPlxyXG4gICAgICA8UHJvZ3Jlc3NCYXIgbWF4PXsxMDB9IHZhbHVlPXs1MH0gLz5cclxuICAgIDwvQmxvY2s+XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxQcm9ncmVzc0JhciBtYXg9ezEwMH0gdmFsdWU9ezEwMH0gLz5cclxuICAgIDwvQmxvY2s+XHJcbiAgPC9kaXY+XHJcbik7XHJcblxyXG5jb25zdCBMb2FkaW5nU3Bpbm5lckV4YW1wbGUgPSAoKTogUmVhY3QuRWxlbWVudDxhbnk+ID0+IChcclxuICA8ZGl2PlxyXG4gICAgPEJsb2NrPlxyXG4gICAgICA8TG9hZGluZ1NwaW5uZXIgc2l6ZT1cIkVYVFJBX1NNQUxMXCIgLz5cclxuICAgIDwvQmxvY2s+XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxMb2FkaW5nU3Bpbm5lciBzaXplPVwiU01BTExcIiAvPlxyXG4gICAgPC9CbG9jaz5cclxuICAgIDxCbG9jaz5cclxuICAgICAgPExvYWRpbmdTcGlubmVyIHNpemU9XCJNRURJVU1cIiAvPlxyXG4gICAgPC9CbG9jaz5cclxuICAgIDxCbG9jaz5cclxuICAgICAgPExvYWRpbmdTcGlubmVyIHNpemU9XCJMQVJHRVwiIC8+XHJcbiAgICA8L0Jsb2NrPlxyXG4gIDwvZGl2PlxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IFByb2dyZXNzSW5kaWNhdG9yRXhhbXBsZXMgPSB7XHJcbiAgc2VjdGlvbk5hbWU6ICdQcm9ncmVzcyBJbmRpY2F0b3JzJyxcclxuICBkZXNjcmlwdGlvbjpcclxuICAgICdTaG93IHRoYXQgd29yayBpcyBiZWluZyBwZXJmb3JtZWQuIENvbnNpZGVyIHVzaW5nIG9uZSBvZiB0aGVzZSBmb3IgYW55IHdvcmsgPiAxcy4nLFxyXG4gIGV4YW1wbGVzOiBbXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAnUHJvZ3Jlc3NCYXInLFxyXG4gICAgICBjb21wb25lbnQ6IFByb2dyZXNzQmFyRXhhbXBsZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAnTG9hZGluZ1NwaW5uZXInLFxyXG4gICAgICBjb21wb25lbnQ6IExvYWRpbmdTcGlubmVyRXhhbXBsZSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuIl19