"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _featureConfig = _interopRequireDefault(require("@atom-ide-community/nuclide-commons-atom/feature-config"));

var _SettingsUtils = require("./SettingsUtils");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class SettingsSelect extends React.Component {
  constructor(...args) {
    super(...args);

    this._handleChange = event => {
      const value = event.target.value;
      this.props.onChange(value);
    };
  }

  render() {
    const keyPath = this.props.keyPath;
    const id = (0, _SettingsUtils.normalizeIdentifier)(keyPath);
    const title = this.props.title;
    const description = this.props.description;
    const value = this.props.value;

    const options = _featureConfig.default.getSchema(keyPath);

    const optionElements = [];

    if (options.enum) {
      options.enum.forEach((option, i) => {
        const optionValue = typeof option === 'object' ? option.value : option;
        const optionDescription = typeof option === 'object' ? option.description : option;
        optionElements.push( /*#__PURE__*/React.createElement("option", {
          value: optionValue,
          key: i
        }, optionDescription));
      });
    }

    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("label", {
      className: "control-label"
    }, /*#__PURE__*/React.createElement("div", {
      className: "setting-title"
    }, title), /*#__PURE__*/React.createElement("div", {
      className: "setting-description"
    }, description)), /*#__PURE__*/React.createElement("select", {
      className: "form-control",
      id: id,
      onChange: this._handleChange,
      value: value
    }, optionElements));
  }

}

exports.default = SettingsSelect;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1NldHRpbmdzU2VsZWN0LmpzIl0sIm5hbWVzIjpbIlNldHRpbmdzU2VsZWN0IiwiUmVhY3QiLCJDb21wb25lbnQiLCJfaGFuZGxlQ2hhbmdlIiwiZXZlbnQiLCJ2YWx1ZSIsInRhcmdldCIsInByb3BzIiwib25DaGFuZ2UiLCJyZW5kZXIiLCJrZXlQYXRoIiwiaWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwib3B0aW9ucyIsImZlYXR1cmVDb25maWciLCJnZXRTY2hlbWEiLCJvcHRpb25FbGVtZW50cyIsImVudW0iLCJmb3JFYWNoIiwib3B0aW9uIiwiaSIsIm9wdGlvblZhbHVlIiwib3B0aW9uRGVzY3JpcHRpb24iLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBY0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFZZSxNQUFNQSxjQUFOLFNBQTZCQyxLQUFLLENBQUNDLFNBQW5DLENBQW9EO0FBQUE7QUFBQTs7QUFBQSxTQUNqRUMsYUFEaUUsR0FDaERDLEtBQUQsSUFBNkI7QUFDM0MsWUFBTUMsS0FBSyxHQUFLRCxLQUFLLENBQUNFLE1BQVIsQ0FBd0NELEtBQXREO0FBQ0EsV0FBS0UsS0FBTCxDQUFXQyxRQUFYLENBQW9CSCxLQUFwQjtBQUNELEtBSmdFO0FBQUE7O0FBTWpFSSxFQUFBQSxNQUFNLEdBQWU7QUFDbkIsVUFBTUMsT0FBTyxHQUFHLEtBQUtILEtBQUwsQ0FBV0csT0FBM0I7QUFDQSxVQUFNQyxFQUFFLEdBQUcsd0NBQW9CRCxPQUFwQixDQUFYO0FBQ0EsVUFBTUUsS0FBSyxHQUFHLEtBQUtMLEtBQUwsQ0FBV0ssS0FBekI7QUFDQSxVQUFNQyxXQUFXLEdBQUcsS0FBS04sS0FBTCxDQUFXTSxXQUEvQjtBQUNBLFVBQU1SLEtBQUssR0FBRyxLQUFLRSxLQUFMLENBQVdGLEtBQXpCOztBQUVBLFVBQU1TLE9BQU8sR0FBR0MsdUJBQWNDLFNBQWQsQ0FBd0JOLE9BQXhCLENBQWhCOztBQUVBLFVBQU1PLGNBQWMsR0FBRyxFQUF2Qjs7QUFDQSxRQUFJSCxPQUFPLENBQUNJLElBQVosRUFBa0I7QUFDaEJKLE1BQUFBLE9BQU8sQ0FBQ0ksSUFBUixDQUFhQyxPQUFiLENBQXFCLENBQUNDLE1BQUQsRUFBU0MsQ0FBVCxLQUFlO0FBQ2xDLGNBQU1DLFdBQVcsR0FBRyxPQUFPRixNQUFQLEtBQWtCLFFBQWxCLEdBQTZCQSxNQUFNLENBQUNmLEtBQXBDLEdBQTRDZSxNQUFoRTtBQUNBLGNBQU1HLGlCQUFpQixHQUNyQixPQUFPSCxNQUFQLEtBQWtCLFFBQWxCLEdBQTZCQSxNQUFNLENBQUNQLFdBQXBDLEdBQWtETyxNQURwRDtBQUVBSCxRQUFBQSxjQUFjLENBQUNPLElBQWYsZUFDRTtBQUFRLFVBQUEsS0FBSyxFQUFFRixXQUFmO0FBQTRCLFVBQUEsR0FBRyxFQUFFRDtBQUFqQyxXQUNHRSxpQkFESCxDQURGO0FBS0QsT0FURDtBQVVEOztBQUVELHdCQUNFLDhDQUNFO0FBQU8sTUFBQSxTQUFTLEVBQUM7QUFBakIsb0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQWdDWCxLQUFoQyxDQURGLGVBRUU7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQXNDQyxXQUF0QyxDQUZGLENBREYsZUFLRTtBQUNFLE1BQUEsU0FBUyxFQUFDLGNBRFo7QUFFRSxNQUFBLEVBQUUsRUFBRUYsRUFGTjtBQUdFLE1BQUEsUUFBUSxFQUFFLEtBQUtSLGFBSGpCO0FBSUUsTUFBQSxLQUFLLEVBQUVFO0FBSlQsT0FLR1ksY0FMSCxDQUxGLENBREY7QUFlRDs7QUE1Q2dFIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IHR5cGUge1NldHRpbmdzUHJvcHNEZWZhdWx0fSBmcm9tICcuL1NldHRpbmdzVXRpbHMnO1xyXG5cclxuaW1wb3J0IGZlYXR1cmVDb25maWcgZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMtYXRvbS9mZWF0dXJlLWNvbmZpZyc7XHJcbmltcG9ydCB7bm9ybWFsaXplSWRlbnRpZmllcn0gZnJvbSAnLi9TZXR0aW5nc1V0aWxzJztcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxudHlwZSBQcm9wcyA9IFNldHRpbmdzUHJvcHNEZWZhdWx0ICYge1xyXG4gIHZhbHVlOiBudW1iZXIsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXR0aW5nc1NlbGVjdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcz4ge1xyXG4gIF9oYW5kbGVDaGFuZ2UgPSAoZXZlbnQ6IFN5bnRoZXRpY0V2ZW50PD4pID0+IHtcclxuICAgIGNvbnN0IHZhbHVlID0gKChldmVudC50YXJnZXQ6IGFueSk6IEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlO1xyXG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh2YWx1ZSk7XHJcbiAgfTtcclxuXHJcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgY29uc3Qga2V5UGF0aCA9IHRoaXMucHJvcHMua2V5UGF0aDtcclxuICAgIGNvbnN0IGlkID0gbm9ybWFsaXplSWRlbnRpZmllcihrZXlQYXRoKTtcclxuICAgIGNvbnN0IHRpdGxlID0gdGhpcy5wcm9wcy50aXRsZTtcclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gdGhpcy5wcm9wcy5kZXNjcmlwdGlvbjtcclxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gZmVhdHVyZUNvbmZpZy5nZXRTY2hlbWEoa2V5UGF0aCk7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9uRWxlbWVudHMgPSBbXTtcclxuICAgIGlmIChvcHRpb25zLmVudW0pIHtcclxuICAgICAgb3B0aW9ucy5lbnVtLmZvckVhY2goKG9wdGlvbiwgaSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG9wdGlvblZhbHVlID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgPyBvcHRpb24udmFsdWUgOiBvcHRpb247XHJcbiAgICAgICAgY29uc3Qgb3B0aW9uRGVzY3JpcHRpb24gPVxyXG4gICAgICAgICAgdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgPyBvcHRpb24uZGVzY3JpcHRpb24gOiBvcHRpb247XHJcbiAgICAgICAgb3B0aW9uRWxlbWVudHMucHVzaChcclxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9e29wdGlvblZhbHVlfSBrZXk9e2l9PlxyXG4gICAgICAgICAgICB7b3B0aW9uRGVzY3JpcHRpb259XHJcbiAgICAgICAgICA8L29wdGlvbj4sXHJcbiAgICAgICAgKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdj5cclxuICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXR0aW5nLXRpdGxlXCI+e3RpdGxlfTwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXR0aW5nLWRlc2NyaXB0aW9uXCI+e2Rlc2NyaXB0aW9ufTwvZGl2PlxyXG4gICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPHNlbGVjdFxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcclxuICAgICAgICAgIGlkPXtpZH1cclxuICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9oYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICB2YWx1ZT17dmFsdWV9PlxyXG4gICAgICAgICAge29wdGlvbkVsZW1lbnRzfVxyXG4gICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdfQ==