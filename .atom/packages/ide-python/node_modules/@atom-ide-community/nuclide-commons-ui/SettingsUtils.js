"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeIdentifier = normalizeIdentifier;
exports.isDefaultConfigValue = isDefaultConfigValue;
exports.getDefaultConfigValue = getDefaultConfigValue;
exports.getDefaultConfigValueString = getDefaultConfigValueString;
exports.parseValue = parseValue;
exports.valueToString = valueToString;

var _featureConfig = _interopRequireDefault(require("@atom-ide-community/nuclide-commons-atom/feature-config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
function getConfigValueString(keyPath) {
  const value = _featureConfig.default.get(keyPath);

  return valueToString(value);
}

function normalizeIdentifier(id) {
  return id.replace(/[^A-Za-z0-9_-]/g, '_');
}

function isDefaultConfigValue(keyPath, value_) {
  let value = value_;
  const defaultValue = getDefaultConfigValueString(keyPath);

  if (value) {
    value = valueToString(value);
  } else {
    value = getConfigValueString(keyPath);
  }

  return !value || defaultValue === value;
}

function getDefaultConfigValue(keyPath) {
  const params = {
    excludeSources: [atom.config.getUserConfigPath()]
  };
  return _featureConfig.default.get(keyPath, params);
}

function getDefaultConfigValueString(keyPath) {
  return valueToString(getDefaultConfigValue(keyPath));
}

function parseValue(type, value) {
  let result = value;

  if (value === '') {
    result = undefined;
  } else if (type === 'number') {
    const floatValue = parseFloat(value);

    if (!isNaN(floatValue)) {
      result = floatValue;
    }
  } else if (type === 'array') {
    const arrayValue = (value ? value : '').split(',');
    result = arrayValue.filter(item => Boolean(item)).map(item => item.trim());
  }

  return result;
}

function valueToString(value) {
  if (Array.isArray(value)) {
    return value.join(', ');
  } else {
    return value != null ? value.toString() : '';
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1NldHRpbmdzVXRpbHMuanMiXSwibmFtZXMiOlsiZ2V0Q29uZmlnVmFsdWVTdHJpbmciLCJrZXlQYXRoIiwidmFsdWUiLCJmZWF0dXJlQ29uZmlnIiwiZ2V0IiwidmFsdWVUb1N0cmluZyIsIm5vcm1hbGl6ZUlkZW50aWZpZXIiLCJpZCIsInJlcGxhY2UiLCJpc0RlZmF1bHRDb25maWdWYWx1ZSIsInZhbHVlXyIsImRlZmF1bHRWYWx1ZSIsImdldERlZmF1bHRDb25maWdWYWx1ZVN0cmluZyIsImdldERlZmF1bHRDb25maWdWYWx1ZSIsInBhcmFtcyIsImV4Y2x1ZGVTb3VyY2VzIiwiYXRvbSIsImNvbmZpZyIsImdldFVzZXJDb25maWdQYXRoIiwicGFyc2VWYWx1ZSIsInR5cGUiLCJyZXN1bHQiLCJ1bmRlZmluZWQiLCJmbG9hdFZhbHVlIiwicGFyc2VGbG9hdCIsImlzTmFOIiwiYXJyYXlWYWx1ZSIsInNwbGl0IiwiZmlsdGVyIiwiaXRlbSIsIkJvb2xlYW4iLCJtYXAiLCJ0cmltIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsInRvU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFZQTs7OztBQVpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXQSxTQUFTQSxvQkFBVCxDQUE4QkMsT0FBOUIsRUFBdUQ7QUFDckQsUUFBTUMsS0FBSyxHQUFHQyx1QkFBY0MsR0FBZCxDQUFrQkgsT0FBbEIsQ0FBZDs7QUFDQSxTQUFPSSxhQUFhLENBQUNILEtBQUQsQ0FBcEI7QUFDRDs7QUFFTSxTQUFTSSxtQkFBVCxDQUE2QkMsRUFBN0IsRUFBaUQ7QUFDdEQsU0FBT0EsRUFBRSxDQUFDQyxPQUFILENBQVcsaUJBQVgsRUFBOEIsR0FBOUIsQ0FBUDtBQUNEOztBQUVNLFNBQVNDLG9CQUFULENBQThCUixPQUE5QixFQUErQ1MsTUFBL0MsRUFBc0U7QUFDM0UsTUFBSVIsS0FBSyxHQUFHUSxNQUFaO0FBQ0EsUUFBTUMsWUFBWSxHQUFHQywyQkFBMkIsQ0FBQ1gsT0FBRCxDQUFoRDs7QUFDQSxNQUFJQyxLQUFKLEVBQVc7QUFDVEEsSUFBQUEsS0FBSyxHQUFHRyxhQUFhLENBQUNILEtBQUQsQ0FBckI7QUFDRCxHQUZELE1BRU87QUFDTEEsSUFBQUEsS0FBSyxHQUFHRixvQkFBb0IsQ0FBQ0MsT0FBRCxDQUE1QjtBQUNEOztBQUNELFNBQU8sQ0FBQ0MsS0FBRCxJQUFVUyxZQUFZLEtBQUtULEtBQWxDO0FBQ0Q7O0FBRU0sU0FBU1cscUJBQVQsQ0FBK0JaLE9BQS9CLEVBQXVEO0FBQzVELFFBQU1hLE1BQU0sR0FBRztBQUFDQyxJQUFBQSxjQUFjLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDQyxNQUFMLENBQVlDLGlCQUFaLEVBQUQ7QUFBakIsR0FBZjtBQUNBLFNBQU9mLHVCQUFjQyxHQUFkLENBQWtCSCxPQUFsQixFQUEyQmEsTUFBM0IsQ0FBUDtBQUNEOztBQUVNLFNBQVNGLDJCQUFULENBQXFDWCxPQUFyQyxFQUE4RDtBQUNuRSxTQUFPSSxhQUFhLENBQUNRLHFCQUFxQixDQUFDWixPQUFELENBQXRCLENBQXBCO0FBQ0Q7O0FBRU0sU0FBU2tCLFVBQVQsQ0FBb0JDLElBQXBCLEVBQWtDbEIsS0FBbEMsRUFBbUQ7QUFDeEQsTUFBSW1CLE1BQU0sR0FBR25CLEtBQWI7O0FBQ0EsTUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDaEJtQixJQUFBQSxNQUFNLEdBQUdDLFNBQVQ7QUFDRCxHQUZELE1BRU8sSUFBSUYsSUFBSSxLQUFLLFFBQWIsRUFBdUI7QUFDNUIsVUFBTUcsVUFBVSxHQUFHQyxVQUFVLENBQUN0QixLQUFELENBQTdCOztBQUNBLFFBQUksQ0FBQ3VCLEtBQUssQ0FBQ0YsVUFBRCxDQUFWLEVBQXdCO0FBQ3RCRixNQUFBQSxNQUFNLEdBQUdFLFVBQVQ7QUFDRDtBQUNGLEdBTE0sTUFLQSxJQUFJSCxJQUFJLEtBQUssT0FBYixFQUFzQjtBQUMzQixVQUFNTSxVQUFVLEdBQUcsQ0FBQ3hCLEtBQUssR0FBR0EsS0FBSCxHQUFXLEVBQWpCLEVBQXFCeUIsS0FBckIsQ0FBMkIsR0FBM0IsQ0FBbkI7QUFDQU4sSUFBQUEsTUFBTSxHQUFHSyxVQUFVLENBQUNFLE1BQVgsQ0FBa0JDLElBQUksSUFBSUMsT0FBTyxDQUFDRCxJQUFELENBQWpDLEVBQXlDRSxHQUF6QyxDQUE2Q0YsSUFBSSxJQUFJQSxJQUFJLENBQUNHLElBQUwsRUFBckQsQ0FBVDtBQUNEOztBQUNELFNBQU9YLE1BQVA7QUFDRDs7QUFFTSxTQUFTaEIsYUFBVCxDQUF1QkgsS0FBdkIsRUFBMkM7QUFDaEQsTUFBSStCLEtBQUssQ0FBQ0MsT0FBTixDQUFjaEMsS0FBZCxDQUFKLEVBQTBCO0FBQ3hCLFdBQU9BLEtBQUssQ0FBQ2lDLElBQU4sQ0FBVyxJQUFYLENBQVA7QUFDRCxHQUZELE1BRU87QUFDTCxXQUFPakMsS0FBSyxJQUFJLElBQVQsR0FBZ0JBLEtBQUssQ0FBQ2tDLFFBQU4sRUFBaEIsR0FBbUMsRUFBMUM7QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IGZlYXR1cmVDb25maWcgZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMtYXRvbS9mZWF0dXJlLWNvbmZpZyc7XHJcblxyXG5leHBvcnQgdHlwZSBTZXR0aW5nc1Byb3BzRGVmYXVsdCA9IHtcclxuICB0aXRsZTogc3RyaW5nLFxyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmcsXHJcbiAga2V5UGF0aDogc3RyaW5nLFxyXG4gIG9uQ2hhbmdlOiAodmFsdWU6IGFueSkgPT4gbWl4ZWQsXHJcbn07XHJcblxyXG5mdW5jdGlvbiBnZXRDb25maWdWYWx1ZVN0cmluZyhrZXlQYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIGNvbnN0IHZhbHVlID0gZmVhdHVyZUNvbmZpZy5nZXQoa2V5UGF0aCk7XHJcbiAgcmV0dXJuIHZhbHVlVG9TdHJpbmcodmFsdWUpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplSWRlbnRpZmllcihpZDogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gaWQucmVwbGFjZSgvW15BLVphLXowLTlfLV0vZywgJ18nKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmYXVsdENvbmZpZ1ZhbHVlKGtleVBhdGg6IHN0cmluZywgdmFsdWVfOiA/YW55KTogYm9vbGVhbiB7XHJcbiAgbGV0IHZhbHVlID0gdmFsdWVfO1xyXG4gIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGdldERlZmF1bHRDb25maWdWYWx1ZVN0cmluZyhrZXlQYXRoKTtcclxuICBpZiAodmFsdWUpIHtcclxuICAgIHZhbHVlID0gdmFsdWVUb1N0cmluZyh2YWx1ZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHZhbHVlID0gZ2V0Q29uZmlnVmFsdWVTdHJpbmcoa2V5UGF0aCk7XHJcbiAgfVxyXG4gIHJldHVybiAhdmFsdWUgfHwgZGVmYXVsdFZhbHVlID09PSB2YWx1ZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRDb25maWdWYWx1ZShrZXlQYXRoOiBzdHJpbmcpOiBtaXhlZCB7XHJcbiAgY29uc3QgcGFyYW1zID0ge2V4Y2x1ZGVTb3VyY2VzOiBbYXRvbS5jb25maWcuZ2V0VXNlckNvbmZpZ1BhdGgoKV19O1xyXG4gIHJldHVybiBmZWF0dXJlQ29uZmlnLmdldChrZXlQYXRoLCBwYXJhbXMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdENvbmZpZ1ZhbHVlU3RyaW5nKGtleVBhdGg6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIHZhbHVlVG9TdHJpbmcoZ2V0RGVmYXVsdENvbmZpZ1ZhbHVlKGtleVBhdGgpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVmFsdWUodHlwZTogc3RyaW5nLCB2YWx1ZTogYW55KTogYW55IHtcclxuICBsZXQgcmVzdWx0ID0gdmFsdWU7XHJcbiAgaWYgKHZhbHVlID09PSAnJykge1xyXG4gICAgcmVzdWx0ID0gdW5kZWZpbmVkO1xyXG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ251bWJlcicpIHtcclxuICAgIGNvbnN0IGZsb2F0VmFsdWUgPSBwYXJzZUZsb2F0KHZhbHVlKTtcclxuICAgIGlmICghaXNOYU4oZmxvYXRWYWx1ZSkpIHtcclxuICAgICAgcmVzdWx0ID0gZmxvYXRWYWx1ZTtcclxuICAgIH1cclxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdhcnJheScpIHtcclxuICAgIGNvbnN0IGFycmF5VmFsdWUgPSAodmFsdWUgPyB2YWx1ZSA6ICcnKS5zcGxpdCgnLCcpO1xyXG4gICAgcmVzdWx0ID0gYXJyYXlWYWx1ZS5maWx0ZXIoaXRlbSA9PiBCb29sZWFuKGl0ZW0pKS5tYXAoaXRlbSA9PiBpdGVtLnRyaW0oKSk7XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZVRvU3RyaW5nKHZhbHVlOiBhbnkpOiBzdHJpbmcge1xyXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xyXG4gICAgcmV0dXJuIHZhbHVlLmpvaW4oJywgJyk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsID8gdmFsdWUudG9TdHJpbmcoKSA6ICcnO1xyXG4gIH1cclxufVxyXG4iXX0=