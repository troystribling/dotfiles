"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabbableContainerExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _AtomInput = require("./AtomInput");

var _Block = require("./Block");

var _Button = require("./Button");

var _RadioGroup = _interopRequireDefault(require("./RadioGroup"));

var _TabbableContainer = _interopRequireDefault(require("./TabbableContainer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const labels = ['radio 1', 'radio 2', 'radio 3'];

class FormExample extends React.Component {
  constructor(props) {
    super(props);

    this.onSelectedChange = selectedIndex => {
      this.setState({
        selectedIndex
      });
    };

    this.state = {
      selectedIndex: 0
    };
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_AtomInput.AtomInput, {
      disabled: false,
      initialValue: "input field 1",
      placeholderText: "placeholder text"
    })), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_AtomInput.AtomInput, {
      disabled: false,
      initialValue: "input field 2",
      placeholderText: "placeholder text"
    })), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_AtomInput.AtomInput, {
      disabled: false,
      initialValue: "input field 3",
      placeholderText: "placeholder text"
    })), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_RadioGroup.default, {
      selectedIndex: this.state.selectedIndex,
      optionLabels: labels,
      onSelectedChange: this.onSelectedChange
    })), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_AtomInput.AtomInput, {
      disabled: false,
      initialValue: "input field 4",
      placeholderText: "placeholder text"
    })), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Button.Button, {
      className: "inline-block",
      size: "SMALL"
    }, "button 1"), /*#__PURE__*/React.createElement(_Button.Button, {
      className: "inline-block",
      size: "SMALL"
    }, "button 2"), /*#__PURE__*/React.createElement(_Button.Button, {
      className: "inline-block",
      size: "SMALL"
    }, "button 3")));
  }

}

const ContainedTabbableContainerExample = () => /*#__PURE__*/React.createElement(_TabbableContainer.default, {
  contained: true
}, /*#__PURE__*/React.createElement(FormExample, null));

const UncontainedTabbableContainerExample = () => /*#__PURE__*/React.createElement(_TabbableContainer.default, {
  contained: false
}, /*#__PURE__*/React.createElement(FormExample, null));

const TabbableContainerExamples = {
  sectionName: 'TabbableContainer',
  description: 'Allows tabbing and shift-tabbing to change the focus of the inputs.',
  examples: [{
    title: 'Contained (focus will be contained in this section)',
    component: ContainedTabbableContainerExample
  }, {
    title: 'Uncontained',
    component: UncontainedTabbableContainerExample
  }]
};
exports.TabbableContainerExamples = TabbableContainerExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1RhYmJhYmxlQ29udGFpbmVyLmV4YW1wbGUuanMiXSwibmFtZXMiOlsibGFiZWxzIiwiRm9ybUV4YW1wbGUiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJvblNlbGVjdGVkQ2hhbmdlIiwic2VsZWN0ZWRJbmRleCIsInNldFN0YXRlIiwic3RhdGUiLCJyZW5kZXIiLCJDb250YWluZWRUYWJiYWJsZUNvbnRhaW5lckV4YW1wbGUiLCJVbmNvbnRhaW5lZFRhYmJhYmxlQ29udGFpbmVyRXhhbXBsZSIsIlRhYmJhYmxlQ29udGFpbmVyRXhhbXBsZXMiLCJzZWN0aW9uTmFtZSIsImRlc2NyaXB0aW9uIiwiZXhhbXBsZXMiLCJ0aXRsZSIsImNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQWpCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0EsTUFBTUEsTUFBTSxHQUFHLENBQUMsU0FBRCxFQUFZLFNBQVosRUFBdUIsU0FBdkIsQ0FBZjs7QUFFQSxNQUFNQyxXQUFOLFNBQTBCQyxLQUFLLENBQUNDLFNBQWhDLENBQXdFO0FBQ3RFQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBYTtBQUN0QixVQUFNQSxLQUFOOztBQURzQixTQU94QkMsZ0JBUHdCLEdBT0pDLGFBQUQsSUFBaUM7QUFDbEQsV0FBS0MsUUFBTCxDQUFjO0FBQ1pELFFBQUFBO0FBRFksT0FBZDtBQUdELEtBWHVCOztBQUV0QixTQUFLRSxLQUFMLEdBQWE7QUFDWEYsTUFBQUEsYUFBYSxFQUFFO0FBREosS0FBYjtBQUdEOztBQVFERyxFQUFBQSxNQUFNLEdBQWU7QUFDbkIsd0JBQ0UsOENBQ0Usb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxvQkFBRDtBQUNFLE1BQUEsUUFBUSxFQUFFLEtBRFo7QUFFRSxNQUFBLFlBQVksRUFBQyxlQUZmO0FBR0UsTUFBQSxlQUFlLEVBQUM7QUFIbEIsTUFERixDQURGLGVBUUUsb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxvQkFBRDtBQUNFLE1BQUEsUUFBUSxFQUFFLEtBRFo7QUFFRSxNQUFBLFlBQVksRUFBQyxlQUZmO0FBR0UsTUFBQSxlQUFlLEVBQUM7QUFIbEIsTUFERixDQVJGLGVBZUUsb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxvQkFBRDtBQUNFLE1BQUEsUUFBUSxFQUFFLEtBRFo7QUFFRSxNQUFBLFlBQVksRUFBQyxlQUZmO0FBR0UsTUFBQSxlQUFlLEVBQUM7QUFIbEIsTUFERixDQWZGLGVBc0JFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsbUJBQUQ7QUFDRSxNQUFBLGFBQWEsRUFBRSxLQUFLRCxLQUFMLENBQVdGLGFBRDVCO0FBRUUsTUFBQSxZQUFZLEVBQUVQLE1BRmhCO0FBR0UsTUFBQSxnQkFBZ0IsRUFBRSxLQUFLTTtBQUh6QixNQURGLENBdEJGLGVBNkJFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsb0JBQUQ7QUFDRSxNQUFBLFFBQVEsRUFBRSxLQURaO0FBRUUsTUFBQSxZQUFZLEVBQUMsZUFGZjtBQUdFLE1BQUEsZUFBZSxFQUFDO0FBSGxCLE1BREYsQ0E3QkYsZUFvQ0Usb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxjQUFEO0FBQVEsTUFBQSxTQUFTLEVBQUMsY0FBbEI7QUFBaUMsTUFBQSxJQUFJLEVBQUM7QUFBdEMsa0JBREYsZUFJRSxvQkFBQyxjQUFEO0FBQVEsTUFBQSxTQUFTLEVBQUMsY0FBbEI7QUFBaUMsTUFBQSxJQUFJLEVBQUM7QUFBdEMsa0JBSkYsZUFPRSxvQkFBQyxjQUFEO0FBQVEsTUFBQSxTQUFTLEVBQUMsY0FBbEI7QUFBaUMsTUFBQSxJQUFJLEVBQUM7QUFBdEMsa0JBUEYsQ0FwQ0YsQ0FERjtBQWtERDs7QUFqRXFFOztBQW9FeEUsTUFBTUssaUNBQWlDLEdBQUcsbUJBQ3hDLG9CQUFDLDBCQUFEO0FBQW1CLEVBQUEsU0FBUyxFQUFFO0FBQTlCLGdCQUNFLG9CQUFDLFdBQUQsT0FERixDQURGOztBQU1BLE1BQU1DLG1DQUFtQyxHQUFHLG1CQUMxQyxvQkFBQywwQkFBRDtBQUFtQixFQUFBLFNBQVMsRUFBRTtBQUE5QixnQkFDRSxvQkFBQyxXQUFELE9BREYsQ0FERjs7QUFNTyxNQUFNQyx5QkFBeUIsR0FBRztBQUN2Q0MsRUFBQUEsV0FBVyxFQUFFLG1CQUQwQjtBQUV2Q0MsRUFBQUEsV0FBVyxFQUNULHFFQUhxQztBQUl2Q0MsRUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRUMsSUFBQUEsS0FBSyxFQUFFLHFEQURUO0FBRUVDLElBQUFBLFNBQVMsRUFBRVA7QUFGYixHQURRLEVBS1I7QUFDRU0sSUFBQUEsS0FBSyxFQUFFLGFBRFQ7QUFFRUMsSUFBQUEsU0FBUyxFQUFFTjtBQUZiLEdBTFE7QUFKNkIsQ0FBbEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93XHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7QXRvbUlucHV0fSBmcm9tICcuL0F0b21JbnB1dCc7XHJcbmltcG9ydCB7QmxvY2t9IGZyb20gJy4vQmxvY2snO1xyXG5pbXBvcnQge0J1dHRvbn0gZnJvbSAnLi9CdXR0b24nO1xyXG5pbXBvcnQgUmFkaW9Hcm91cCBmcm9tICcuL1JhZGlvR3JvdXAnO1xyXG5pbXBvcnQgVGFiYmFibGVDb250YWluZXIgZnJvbSAnLi9UYWJiYWJsZUNvbnRhaW5lcic7XHJcblxyXG5jb25zdCBsYWJlbHMgPSBbJ3JhZGlvIDEnLCAncmFkaW8gMicsICdyYWRpbyAzJ107XHJcblxyXG5jbGFzcyBGb3JtRXhhbXBsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIHtzZWxlY3RlZEluZGV4OiBudW1iZXJ9PiB7XHJcbiAgY29uc3RydWN0b3IocHJvcHM6IGFueSkge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgc2VsZWN0ZWRJbmRleDogMCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBvblNlbGVjdGVkQ2hhbmdlID0gKHNlbGVjdGVkSW5kZXg6IG51bWJlcik6IHZvaWQgPT4ge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIHNlbGVjdGVkSW5kZXgsXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZW5kZXIoKTogUmVhY3QuTm9kZSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxCbG9jaz5cclxuICAgICAgICAgIDxBdG9tSW5wdXRcclxuICAgICAgICAgICAgZGlzYWJsZWQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBpbml0aWFsVmFsdWU9XCJpbnB1dCBmaWVsZCAxXCJcclxuICAgICAgICAgICAgcGxhY2Vob2xkZXJUZXh0PVwicGxhY2Vob2xkZXIgdGV4dFwiXHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvQmxvY2s+XHJcbiAgICAgICAgPEJsb2NrPlxyXG4gICAgICAgICAgPEF0b21JbnB1dFxyXG4gICAgICAgICAgICBkaXNhYmxlZD17ZmFsc2V9XHJcbiAgICAgICAgICAgIGluaXRpYWxWYWx1ZT1cImlucHV0IGZpZWxkIDJcIlxyXG4gICAgICAgICAgICBwbGFjZWhvbGRlclRleHQ9XCJwbGFjZWhvbGRlciB0ZXh0XCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9CbG9jaz5cclxuICAgICAgICA8QmxvY2s+XHJcbiAgICAgICAgICA8QXRvbUlucHV0XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXtmYWxzZX1cclxuICAgICAgICAgICAgaW5pdGlhbFZhbHVlPVwiaW5wdXQgZmllbGQgM1wiXHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD1cInBsYWNlaG9sZGVyIHRleHRcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L0Jsb2NrPlxyXG4gICAgICAgIDxCbG9jaz5cclxuICAgICAgICAgIDxSYWRpb0dyb3VwXHJcbiAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg9e3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleH1cclxuICAgICAgICAgICAgb3B0aW9uTGFiZWxzPXtsYWJlbHN9XHJcbiAgICAgICAgICAgIG9uU2VsZWN0ZWRDaGFuZ2U9e3RoaXMub25TZWxlY3RlZENoYW5nZX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9CbG9jaz5cclxuICAgICAgICA8QmxvY2s+XHJcbiAgICAgICAgICA8QXRvbUlucHV0XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXtmYWxzZX1cclxuICAgICAgICAgICAgaW5pdGlhbFZhbHVlPVwiaW5wdXQgZmllbGQgNFwiXHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD1cInBsYWNlaG9sZGVyIHRleHRcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L0Jsb2NrPlxyXG4gICAgICAgIDxCbG9jaz5cclxuICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwiaW5saW5lLWJsb2NrXCIgc2l6ZT1cIlNNQUxMXCI+XHJcbiAgICAgICAgICAgIGJ1dHRvbiAxXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwiaW5saW5lLWJsb2NrXCIgc2l6ZT1cIlNNQUxMXCI+XHJcbiAgICAgICAgICAgIGJ1dHRvbiAyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwiaW5saW5lLWJsb2NrXCIgc2l6ZT1cIlNNQUxMXCI+XHJcbiAgICAgICAgICAgIGJ1dHRvbiAzXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L0Jsb2NrPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBDb250YWluZWRUYWJiYWJsZUNvbnRhaW5lckV4YW1wbGUgPSAoKTogUmVhY3QuRWxlbWVudDxhbnk+ID0+IChcclxuICA8VGFiYmFibGVDb250YWluZXIgY29udGFpbmVkPXt0cnVlfT5cclxuICAgIDxGb3JtRXhhbXBsZSAvPlxyXG4gIDwvVGFiYmFibGVDb250YWluZXI+XHJcbik7XHJcblxyXG5jb25zdCBVbmNvbnRhaW5lZFRhYmJhYmxlQ29udGFpbmVyRXhhbXBsZSA9ICgpOiBSZWFjdC5FbGVtZW50PGFueT4gPT4gKFxyXG4gIDxUYWJiYWJsZUNvbnRhaW5lciBjb250YWluZWQ9e2ZhbHNlfT5cclxuICAgIDxGb3JtRXhhbXBsZSAvPlxyXG4gIDwvVGFiYmFibGVDb250YWluZXI+XHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgVGFiYmFibGVDb250YWluZXJFeGFtcGxlcyA9IHtcclxuICBzZWN0aW9uTmFtZTogJ1RhYmJhYmxlQ29udGFpbmVyJyxcclxuICBkZXNjcmlwdGlvbjpcclxuICAgICdBbGxvd3MgdGFiYmluZyBhbmQgc2hpZnQtdGFiYmluZyB0byBjaGFuZ2UgdGhlIGZvY3VzIG9mIHRoZSBpbnB1dHMuJyxcclxuICBleGFtcGxlczogW1xyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ0NvbnRhaW5lZCAoZm9jdXMgd2lsbCBiZSBjb250YWluZWQgaW4gdGhpcyBzZWN0aW9uKScsXHJcbiAgICAgIGNvbXBvbmVudDogQ29udGFpbmVkVGFiYmFibGVDb250YWluZXJFeGFtcGxlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdGl0bGU6ICdVbmNvbnRhaW5lZCcsXHJcbiAgICAgIGNvbXBvbmVudDogVW5jb250YWluZWRUYWJiYWJsZUNvbnRhaW5lckV4YW1wbGUsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcbiJdfQ==