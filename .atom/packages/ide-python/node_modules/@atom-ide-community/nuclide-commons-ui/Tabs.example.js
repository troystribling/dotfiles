"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _Block = require("./Block");

var _Tabs = _interopRequireDefault(require("./Tabs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const tabs = [{
  name: 'one',
  tabContent: /*#__PURE__*/React.createElement("div", null, "One")
}, {
  name: 'two',
  tabContent: /*#__PURE__*/React.createElement("div", null, "Two")
}, {
  name: 'three',
  tabContent: /*#__PURE__*/React.createElement("div", null, "Three")
}, {
  name: 'four',
  tabContent: /*#__PURE__*/React.createElement("div", null, "Four")
}, {
  name: 'five',
  tabContent: /*#__PURE__*/React.createElement("div", null, "Five")
}];

class TabExample extends React.Component {
  constructor(props) {
    super(props);

    this.handleTabChange = newTabName => {
      this.setState({
        activeTabName: newTabName.name
      });
    };

    this.state = {
      activeTabName: 'one'
    };
  }

  render() {
    const {
      activeTabName
    } = this.state;
    return /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Tabs.default, {
      tabs: tabs,
      activeTabName: activeTabName,
      triggeringEvent: "onClick",
      onActiveTabChange: this.handleTabChange
    }), /*#__PURE__*/React.createElement("div", {
      style: {
        padding: '2em 0 2em 0'
      }
    }, "Showing content for tab \"", activeTabName, "\"."));
  }

}

const TabExamples = {
  sectionName: 'Tabs',
  description: '',
  examples: [{
    title: '',
    component: TabExample
  }]
};
exports.TabExamples = TabExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1RhYnMuZXhhbXBsZS5qcyJdLCJuYW1lcyI6WyJ0YWJzIiwibmFtZSIsInRhYkNvbnRlbnQiLCJUYWJFeGFtcGxlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiaGFuZGxlVGFiQ2hhbmdlIiwibmV3VGFiTmFtZSIsInNldFN0YXRlIiwiYWN0aXZlVGFiTmFtZSIsInN0YXRlIiwicmVuZGVyIiwicGFkZGluZyIsIlRhYkV4YW1wbGVzIiwic2VjdGlvbk5hbWUiLCJkZXNjcmlwdGlvbiIsImV4YW1wbGVzIiwidGl0bGUiLCJjb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUEsTUFBTUEsSUFBSSxHQUFHLENBQ1g7QUFDRUMsRUFBQUEsSUFBSSxFQUFFLEtBRFI7QUFFRUMsRUFBQUEsVUFBVSxlQUFFO0FBRmQsQ0FEVyxFQUtYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxLQURSO0FBRUVDLEVBQUFBLFVBQVUsZUFBRTtBQUZkLENBTFcsRUFTWDtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsT0FEUjtBQUVFQyxFQUFBQSxVQUFVLGVBQUU7QUFGZCxDQVRXLEVBYVg7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRUMsRUFBQUEsVUFBVSxlQUFFO0FBRmQsQ0FiVyxFQWlCWDtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFQyxFQUFBQSxVQUFVLGVBQUU7QUFGZCxDQWpCVyxDQUFiOztBQXVCQSxNQUFNQyxVQUFOLFNBQXlCQyxLQUFLLENBQUNDLFNBQS9CLENBQXVFO0FBQ3JFQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBYTtBQUN0QixVQUFNQSxLQUFOOztBQURzQixTQU94QkMsZUFQd0IsR0FPTEMsVUFBRCxJQUdOO0FBQ1YsV0FBS0MsUUFBTCxDQUFjO0FBQ1pDLFFBQUFBLGFBQWEsRUFBRUYsVUFBVSxDQUFDUjtBQURkLE9BQWQ7QUFHRCxLQWR1Qjs7QUFFdEIsU0FBS1csS0FBTCxHQUFhO0FBQ1hELE1BQUFBLGFBQWEsRUFBRTtBQURKLEtBQWI7QUFHRDs7QUFXREUsRUFBQUEsTUFBTSxHQUFlO0FBQ25CLFVBQU07QUFBQ0YsTUFBQUE7QUFBRCxRQUFrQixLQUFLQyxLQUE3QjtBQUNBLHdCQUNFLG9CQUFDLFlBQUQscUJBQ0Usb0JBQUMsYUFBRDtBQUNFLE1BQUEsSUFBSSxFQUFFWixJQURSO0FBRUUsTUFBQSxhQUFhLEVBQUVXLGFBRmpCO0FBR0UsTUFBQSxlQUFlLEVBQUMsU0FIbEI7QUFJRSxNQUFBLGlCQUFpQixFQUFFLEtBQUtIO0FBSjFCLE1BREYsZUFPRTtBQUFLLE1BQUEsS0FBSyxFQUFFO0FBQUNNLFFBQUFBLE9BQU8sRUFBRTtBQUFWO0FBQVoscUNBQzRCSCxhQUQ1QixRQVBGLENBREY7QUFhRDs7QUFoQ29FOztBQW1DaEUsTUFBTUksV0FBVyxHQUFHO0FBQ3pCQyxFQUFBQSxXQUFXLEVBQUUsTUFEWTtBQUV6QkMsRUFBQUEsV0FBVyxFQUFFLEVBRlk7QUFHekJDLEVBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VDLElBQUFBLEtBQUssRUFBRSxFQURUO0FBRUVDLElBQUFBLFNBQVMsRUFBRWpCO0FBRmIsR0FEUTtBQUhlLENBQXBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge0Jsb2NrfSBmcm9tICcuL0Jsb2NrJztcclxuaW1wb3J0IFRhYnMgZnJvbSAnLi9UYWJzJztcclxuXHJcbmNvbnN0IHRhYnMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogJ29uZScsXHJcbiAgICB0YWJDb250ZW50OiA8ZGl2Pk9uZTwvZGl2PixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICd0d28nLFxyXG4gICAgdGFiQ29udGVudDogPGRpdj5Ud288L2Rpdj4sXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAndGhyZWUnLFxyXG4gICAgdGFiQ29udGVudDogPGRpdj5UaHJlZTwvZGl2PixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICdmb3VyJyxcclxuICAgIHRhYkNvbnRlbnQ6IDxkaXY+Rm91cjwvZGl2PixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICdmaXZlJyxcclxuICAgIHRhYkNvbnRlbnQ6IDxkaXY+Rml2ZTwvZGl2PixcclxuICB9LFxyXG5dO1xyXG5cclxuY2xhc3MgVGFiRXhhbXBsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIHthY3RpdmVUYWJOYW1lOiBzdHJpbmd9PiB7XHJcbiAgY29uc3RydWN0b3IocHJvcHM6IGFueSkge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgYWN0aXZlVGFiTmFtZTogJ29uZScsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlVGFiQ2hhbmdlID0gKG5ld1RhYk5hbWU6IHtcclxuICAgIG5hbWU6IHN0cmluZyxcclxuICAgIHRhYkNvbnRlbnQ6IFJlYWN0LkVsZW1lbnQ8YW55PixcclxuICB9KTogdm9pZCA9PiB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgYWN0aXZlVGFiTmFtZTogbmV3VGFiTmFtZS5uYW1lLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgY29uc3Qge2FjdGl2ZVRhYk5hbWV9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxCbG9jaz5cclxuICAgICAgICA8VGFic1xyXG4gICAgICAgICAgdGFicz17dGFic31cclxuICAgICAgICAgIGFjdGl2ZVRhYk5hbWU9e2FjdGl2ZVRhYk5hbWV9XHJcbiAgICAgICAgICB0cmlnZ2VyaW5nRXZlbnQ9XCJvbkNsaWNrXCJcclxuICAgICAgICAgIG9uQWN0aXZlVGFiQ2hhbmdlPXt0aGlzLmhhbmRsZVRhYkNoYW5nZX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3twYWRkaW5nOiAnMmVtIDAgMmVtIDAnfX0+XHJcbiAgICAgICAgICBTaG93aW5nIGNvbnRlbnQgZm9yIHRhYiBcInthY3RpdmVUYWJOYW1lfVwiLlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0Jsb2NrPlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBUYWJFeGFtcGxlcyA9IHtcclxuICBzZWN0aW9uTmFtZTogJ1RhYnMnLFxyXG4gIGRlc2NyaXB0aW9uOiAnJyxcclxuICBleGFtcGxlczogW1xyXG4gICAge1xyXG4gICAgICB0aXRsZTogJycsXHJcbiAgICAgIGNvbXBvbmVudDogVGFiRXhhbXBsZSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuIl19