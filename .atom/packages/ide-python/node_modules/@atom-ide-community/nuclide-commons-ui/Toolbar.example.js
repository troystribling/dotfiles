"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _Block = require("./Block");

var _Toolbar = require("./Toolbar");

var _ToolbarCenter = require("./ToolbarCenter");

var _ToolbarLeft = require("./ToolbarLeft");

var _ToolbarRight = require("./ToolbarRight");

var _Button = require("./Button");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
const ToolbarExampleLeft = () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Toolbar.Toolbar, {
  location: "top"
}, /*#__PURE__*/React.createElement(_ToolbarLeft.ToolbarLeft, null, /*#__PURE__*/React.createElement("div", null, "a toolbar can have multiple children,"), /*#__PURE__*/React.createElement(_Button.Button, null, "such as this button.")))), /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement("div", null, "Be sure to use ", '<ToolbarLeft/>, <ToolbarLeft/>, and <ToolbarLeft/>', " as children.")));

const ToolbarExampleCenter = () => /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Toolbar.Toolbar, {
  location: "top"
}, /*#__PURE__*/React.createElement(_ToolbarCenter.ToolbarCenter, null, /*#__PURE__*/React.createElement("div", null, "Example of ", '<ToolbarCenter />', "."))));

const ToolbarExampleRight = () => /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Toolbar.Toolbar, {
  location: "top"
}, /*#__PURE__*/React.createElement(_ToolbarRight.ToolbarRight, null, /*#__PURE__*/React.createElement("div", null, "Example of ", '<ToolbarRight />'))));

const ToolbarExampleMultiple = () => /*#__PURE__*/React.createElement(_Block.Block, null, /*#__PURE__*/React.createElement(_Toolbar.Toolbar, {
  location: "top"
}, /*#__PURE__*/React.createElement(_ToolbarLeft.ToolbarLeft, null, /*#__PURE__*/React.createElement("div", null, "You can combine")), /*#__PURE__*/React.createElement(_ToolbarCenter.ToolbarCenter, null, /*#__PURE__*/React.createElement("div", null, "the various kinds")), /*#__PURE__*/React.createElement(_ToolbarRight.ToolbarRight, null, /*#__PURE__*/React.createElement("div", null, "of aligners."))));

const ToolbarExamples = {
  sectionName: 'Toolbar',
  description: '',
  examples: [{
    title: 'Left Toolbar',
    component: ToolbarExampleLeft
  }, {
    title: 'Center Toolbar',
    component: ToolbarExampleCenter
  }, {
    title: 'Right Toolbar',
    component: ToolbarExampleRight
  }, {
    title: 'Combining Toolbar aligners',
    component: ToolbarExampleMultiple
  }]
};
exports.ToolbarExamples = ToolbarExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1Rvb2xiYXIuZXhhbXBsZS5qcyJdLCJuYW1lcyI6WyJUb29sYmFyRXhhbXBsZUxlZnQiLCJUb29sYmFyRXhhbXBsZUNlbnRlciIsIlRvb2xiYXJFeGFtcGxlUmlnaHQiLCJUb29sYmFyRXhhbXBsZU11bHRpcGxlIiwiVG9vbGJhckV4YW1wbGVzIiwic2VjdGlvbk5hbWUiLCJkZXNjcmlwdGlvbiIsImV4YW1wbGVzIiwidGl0bGUiLCJjb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBbEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVQSxNQUFNQSxrQkFBa0IsR0FBRyxtQkFDekIsOENBQ0Usb0JBQUMsWUFBRCxxQkFDRSxvQkFBQyxnQkFBRDtBQUFTLEVBQUEsUUFBUSxFQUFDO0FBQWxCLGdCQUNFLG9CQUFDLHdCQUFELHFCQUNFLHlFQURGLGVBRUUsb0JBQUMsY0FBRCwrQkFGRixDQURGLENBREYsQ0FERixlQVNFLG9CQUFDLFlBQUQscUJBQ0Usb0RBQ2tCLG9EQURsQixrQkFERixDQVRGLENBREY7O0FBbUJBLE1BQU1DLG9CQUFvQixHQUFHLG1CQUMzQixvQkFBQyxZQUFELHFCQUNFLG9CQUFDLGdCQUFEO0FBQVMsRUFBQSxRQUFRLEVBQUM7QUFBbEIsZ0JBQ0Usb0JBQUMsNEJBQUQscUJBQ0UsZ0RBQWlCLG1CQUFqQixNQURGLENBREYsQ0FERixDQURGOztBQVVBLE1BQU1DLG1CQUFtQixHQUFHLG1CQUMxQixvQkFBQyxZQUFELHFCQUNFLG9CQUFDLGdCQUFEO0FBQVMsRUFBQSxRQUFRLEVBQUM7QUFBbEIsZ0JBQ0Usb0JBQUMsMEJBQUQscUJBQ0UsZ0RBQWlCLGtCQUFqQixDQURGLENBREYsQ0FERixDQURGOztBQVVBLE1BQU1DLHNCQUFzQixHQUFHLG1CQUM3QixvQkFBQyxZQUFELHFCQUNFLG9CQUFDLGdCQUFEO0FBQVMsRUFBQSxRQUFRLEVBQUM7QUFBbEIsZ0JBQ0Usb0JBQUMsd0JBQUQscUJBQ0UsbURBREYsQ0FERixlQUlFLG9CQUFDLDRCQUFELHFCQUNFLHFEQURGLENBSkYsZUFPRSxvQkFBQywwQkFBRCxxQkFDRSxnREFERixDQVBGLENBREYsQ0FERjs7QUFnQk8sTUFBTUMsZUFBZSxHQUFHO0FBQzdCQyxFQUFBQSxXQUFXLEVBQUUsU0FEZ0I7QUFFN0JDLEVBQUFBLFdBQVcsRUFBRSxFQUZnQjtBQUc3QkMsRUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRUMsSUFBQUEsS0FBSyxFQUFFLGNBRFQ7QUFFRUMsSUFBQUEsU0FBUyxFQUFFVDtBQUZiLEdBRFEsRUFLUjtBQUNFUSxJQUFBQSxLQUFLLEVBQUUsZ0JBRFQ7QUFFRUMsSUFBQUEsU0FBUyxFQUFFUjtBQUZiLEdBTFEsRUFTUjtBQUNFTyxJQUFBQSxLQUFLLEVBQUUsZUFEVDtBQUVFQyxJQUFBQSxTQUFTLEVBQUVQO0FBRmIsR0FUUSxFQWFSO0FBQ0VNLElBQUFBLEtBQUssRUFBRSw0QkFEVDtBQUVFQyxJQUFBQSxTQUFTLEVBQUVOO0FBRmIsR0FiUTtBQUhtQixDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtCbG9ja30gZnJvbSAnLi9CbG9jayc7XHJcbmltcG9ydCB7VG9vbGJhcn0gZnJvbSAnLi9Ub29sYmFyJztcclxuaW1wb3J0IHtUb29sYmFyQ2VudGVyfSBmcm9tICcuL1Rvb2xiYXJDZW50ZXInO1xyXG5pbXBvcnQge1Rvb2xiYXJMZWZ0fSBmcm9tICcuL1Rvb2xiYXJMZWZ0JztcclxuaW1wb3J0IHtUb29sYmFyUmlnaHR9IGZyb20gJy4vVG9vbGJhclJpZ2h0JztcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4vQnV0dG9uJztcclxuXHJcbmNvbnN0IFRvb2xiYXJFeGFtcGxlTGVmdCA9ICgpOiBSZWFjdC5FbGVtZW50PGFueT4gPT4gKFxyXG4gIDxkaXY+XHJcbiAgICA8QmxvY2s+XHJcbiAgICAgIDxUb29sYmFyIGxvY2F0aW9uPVwidG9wXCI+XHJcbiAgICAgICAgPFRvb2xiYXJMZWZ0PlxyXG4gICAgICAgICAgPGRpdj5hIHRvb2xiYXIgY2FuIGhhdmUgbXVsdGlwbGUgY2hpbGRyZW4sPC9kaXY+XHJcbiAgICAgICAgICA8QnV0dG9uPnN1Y2ggYXMgdGhpcyBidXR0b24uPC9CdXR0b24+XHJcbiAgICAgICAgPC9Ub29sYmFyTGVmdD5cclxuICAgICAgPC9Ub29sYmFyPlxyXG4gICAgPC9CbG9jaz5cclxuICAgIDxCbG9jaz5cclxuICAgICAgPGRpdj5cclxuICAgICAgICBCZSBzdXJlIHRvIHVzZSB7JzxUb29sYmFyTGVmdC8+LCA8VG9vbGJhckxlZnQvPiwgYW5kIDxUb29sYmFyTGVmdC8+J30gYXNcclxuICAgICAgICBjaGlsZHJlbi5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L0Jsb2NrPlxyXG4gIDwvZGl2PlxyXG4pO1xyXG5cclxuY29uc3QgVG9vbGJhckV4YW1wbGVDZW50ZXIgPSAoKTogUmVhY3QuRWxlbWVudDxhbnk+ID0+IChcclxuICA8QmxvY2s+XHJcbiAgICA8VG9vbGJhciBsb2NhdGlvbj1cInRvcFwiPlxyXG4gICAgICA8VG9vbGJhckNlbnRlcj5cclxuICAgICAgICA8ZGl2PkV4YW1wbGUgb2Ygeyc8VG9vbGJhckNlbnRlciAvPid9LjwvZGl2PlxyXG4gICAgICA8L1Rvb2xiYXJDZW50ZXI+XHJcbiAgICA8L1Rvb2xiYXI+XHJcbiAgPC9CbG9jaz5cclxuKTtcclxuXHJcbmNvbnN0IFRvb2xiYXJFeGFtcGxlUmlnaHQgPSAoKTogUmVhY3QuRWxlbWVudDxhbnk+ID0+IChcclxuICA8QmxvY2s+XHJcbiAgICA8VG9vbGJhciBsb2NhdGlvbj1cInRvcFwiPlxyXG4gICAgICA8VG9vbGJhclJpZ2h0PlxyXG4gICAgICAgIDxkaXY+RXhhbXBsZSBvZiB7JzxUb29sYmFyUmlnaHQgLz4nfTwvZGl2PlxyXG4gICAgICA8L1Rvb2xiYXJSaWdodD5cclxuICAgIDwvVG9vbGJhcj5cclxuICA8L0Jsb2NrPlxyXG4pO1xyXG5cclxuY29uc3QgVG9vbGJhckV4YW1wbGVNdWx0aXBsZSA9ICgpOiBSZWFjdC5FbGVtZW50PGFueT4gPT4gKFxyXG4gIDxCbG9jaz5cclxuICAgIDxUb29sYmFyIGxvY2F0aW9uPVwidG9wXCI+XHJcbiAgICAgIDxUb29sYmFyTGVmdD5cclxuICAgICAgICA8ZGl2PllvdSBjYW4gY29tYmluZTwvZGl2PlxyXG4gICAgICA8L1Rvb2xiYXJMZWZ0PlxyXG4gICAgICA8VG9vbGJhckNlbnRlcj5cclxuICAgICAgICA8ZGl2PnRoZSB2YXJpb3VzIGtpbmRzPC9kaXY+XHJcbiAgICAgIDwvVG9vbGJhckNlbnRlcj5cclxuICAgICAgPFRvb2xiYXJSaWdodD5cclxuICAgICAgICA8ZGl2Pm9mIGFsaWduZXJzLjwvZGl2PlxyXG4gICAgICA8L1Rvb2xiYXJSaWdodD5cclxuICAgIDwvVG9vbGJhcj5cclxuICA8L0Jsb2NrPlxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IFRvb2xiYXJFeGFtcGxlcyA9IHtcclxuICBzZWN0aW9uTmFtZTogJ1Rvb2xiYXInLFxyXG4gIGRlc2NyaXB0aW9uOiAnJyxcclxuICBleGFtcGxlczogW1xyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ0xlZnQgVG9vbGJhcicsXHJcbiAgICAgIGNvbXBvbmVudDogVG9vbGJhckV4YW1wbGVMZWZ0LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdGl0bGU6ICdDZW50ZXIgVG9vbGJhcicsXHJcbiAgICAgIGNvbXBvbmVudDogVG9vbGJhckV4YW1wbGVDZW50ZXIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ1JpZ2h0IFRvb2xiYXInLFxyXG4gICAgICBjb21wb25lbnQ6IFRvb2xiYXJFeGFtcGxlUmlnaHQsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ0NvbWJpbmluZyBUb29sYmFyIGFsaWduZXJzJyxcclxuICAgICAgY29tcG9uZW50OiBUb29sYmFyRXhhbXBsZU11bHRpcGxlLFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG4iXX0=