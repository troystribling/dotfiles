"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindObservableAsProps = bindObservableAsProps;

var React = _interopRequireWildcard(require("react"));

var _getDisplayName = _interopRequireDefault(require("@atom-ide-community/nuclide-commons/getDisplayName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * Injects any key/value pairs from the given Observable value into the component as named props.
 * e.g. `bindObservableAsProps(Observable.just({val: 42}), FooComponent)` will translate to
 * `<FooComponent val={42} />`.
 *
 * The resulting component re-renders on updates to the observable.
 * The wrapped component is guaranteed to render only if the observable has resolved;
 * otherwise, the wrapper component renders `null`.
 */
function bindObservableAsProps(stream, ComposedComponent) {
  var _class, _temp;

  // $FlowIssue The return type is guaranteed to be the same as the type of ComposedComponent.
  return _temp = _class = class extends React.Component {
    constructor(props) {
      super(props);
      this._subscription = void 0;
      this._resolved = void 0;
      this._subscription = null;
      this.state = {};
      this._resolved = false;
    }

    componentDidMount() {
      this._subscription = stream.subscribe(newState => {
        this._resolved = true;
        this.setState(newState);
      });
    }

    componentWillUnmount() {
      if (this._subscription != null) {
        this._subscription.unsubscribe();
      }
    }

    render() {
      if (!this._resolved) {
        return null;
      }

      const props = { ...this.props,
        ...this.state
      };
      return /*#__PURE__*/React.createElement(ComposedComponent, props);
    }

  }, _class.displayName = `bindObservableAsProps(${(0, _getDisplayName.default)(ComposedComponent)})`, _temp;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL2JpbmRPYnNlcnZhYmxlQXNQcm9wcy5qcyJdLCJuYW1lcyI6WyJiaW5kT2JzZXJ2YWJsZUFzUHJvcHMiLCJzdHJlYW0iLCJDb21wb3NlZENvbXBvbmVudCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsIl9zdWJzY3JpcHRpb24iLCJfcmVzb2x2ZWQiLCJzdGF0ZSIsImNvbXBvbmVudERpZE1vdW50Iiwic3Vic2NyaWJlIiwibmV3U3RhdGUiLCJzZXRTdGF0ZSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwidW5zdWJzY3JpYmUiLCJyZW5kZXIiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQWNBOztBQUNBOzs7Ozs7OztBQWZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EscUJBQVQsQ0FDTEMsTUFESyxFQUVMQyxpQkFGSyxFQUdGO0FBQUE7O0FBQ0g7QUFDQSwwQkFBTyxjQUFjQyxLQUFLLENBQUNDLFNBQXBCLENBQXFFO0FBUTFFQyxJQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixZQUFNQSxLQUFOO0FBRGlCLFdBSG5CQyxhQUdtQjtBQUFBLFdBRm5CQyxTQUVtQjtBQUVqQixXQUFLRCxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsV0FBS0UsS0FBTCxHQUFhLEVBQWI7QUFDQSxXQUFLRCxTQUFMLEdBQWlCLEtBQWpCO0FBQ0Q7O0FBRURFLElBQUFBLGlCQUFpQixHQUFTO0FBQ3hCLFdBQUtILGFBQUwsR0FBcUJOLE1BQU0sQ0FBQ1UsU0FBUCxDQUFpQkMsUUFBUSxJQUFJO0FBQ2hELGFBQUtKLFNBQUwsR0FBaUIsSUFBakI7QUFDQSxhQUFLSyxRQUFMLENBQWNELFFBQWQ7QUFDRCxPQUhvQixDQUFyQjtBQUlEOztBQUVERSxJQUFBQSxvQkFBb0IsR0FBUztBQUMzQixVQUFJLEtBQUtQLGFBQUwsSUFBc0IsSUFBMUIsRUFBZ0M7QUFDOUIsYUFBS0EsYUFBTCxDQUFtQlEsV0FBbkI7QUFDRDtBQUNGOztBQUVEQyxJQUFBQSxNQUFNLEdBQWU7QUFDbkIsVUFBSSxDQUFDLEtBQUtSLFNBQVYsRUFBcUI7QUFDbkIsZUFBTyxJQUFQO0FBQ0Q7O0FBQ0QsWUFBTUYsS0FBSyxHQUFHLEVBQ1osR0FBRyxLQUFLQSxLQURJO0FBRVosV0FBRyxLQUFLRztBQUZJLE9BQWQ7QUFJQSwwQkFBTyxvQkFBQyxpQkFBRCxFQUF1QkgsS0FBdkIsQ0FBUDtBQUNEOztBQXJDeUUsR0FBNUUsU0FDU1csV0FEVCxHQUN3Qix5QkFBd0IsNkJBQzVDZixpQkFENEMsQ0FFNUMsR0FISjtBQXVDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCB0eXBlIHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzLWNvbXBhdC9idW5kbGVzL3J4anMtY29tcGF0LnVtZC5taW4uanMnO1xyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZ2V0RGlzcGxheU5hbWUgZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMvZ2V0RGlzcGxheU5hbWUnO1xyXG5cclxuLyoqXHJcbiAqIEluamVjdHMgYW55IGtleS92YWx1ZSBwYWlycyBmcm9tIHRoZSBnaXZlbiBPYnNlcnZhYmxlIHZhbHVlIGludG8gdGhlIGNvbXBvbmVudCBhcyBuYW1lZCBwcm9wcy5cclxuICogZS5nLiBgYmluZE9ic2VydmFibGVBc1Byb3BzKE9ic2VydmFibGUuanVzdCh7dmFsOiA0Mn0pLCBGb29Db21wb25lbnQpYCB3aWxsIHRyYW5zbGF0ZSB0b1xyXG4gKiBgPEZvb0NvbXBvbmVudCB2YWw9ezQyfSAvPmAuXHJcbiAqXHJcbiAqIFRoZSByZXN1bHRpbmcgY29tcG9uZW50IHJlLXJlbmRlcnMgb24gdXBkYXRlcyB0byB0aGUgb2JzZXJ2YWJsZS5cclxuICogVGhlIHdyYXBwZWQgY29tcG9uZW50IGlzIGd1YXJhbnRlZWQgdG8gcmVuZGVyIG9ubHkgaWYgdGhlIG9ic2VydmFibGUgaGFzIHJlc29sdmVkO1xyXG4gKiBvdGhlcndpc2UsIHRoZSB3cmFwcGVyIGNvbXBvbmVudCByZW5kZXJzIGBudWxsYC5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBiaW5kT2JzZXJ2YWJsZUFzUHJvcHM8VDogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+LCBVOiBUPihcclxuICBzdHJlYW06IE9ic2VydmFibGU8eytba2V5OiBzdHJpbmddOiBhbnl9PixcclxuICBDb21wb3NlZENvbXBvbmVudDogVCxcclxuKTogVSB7XHJcbiAgLy8gJEZsb3dJc3N1ZSBUaGUgcmV0dXJuIHR5cGUgaXMgZ3VhcmFudGVlZCB0byBiZSB0aGUgc2FtZSBhcyB0aGUgdHlwZSBvZiBDb21wb3NlZENvbXBvbmVudC5cclxuICByZXR1cm4gY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8JEZsb3dGaXhNZVByb3BzLCB7W2tleTogc3RyaW5nXTogYW55fT4ge1xyXG4gICAgc3RhdGljIGRpc3BsYXlOYW1lID0gYGJpbmRPYnNlcnZhYmxlQXNQcm9wcygke2dldERpc3BsYXlOYW1lKFxyXG4gICAgICBDb21wb3NlZENvbXBvbmVudCxcclxuICAgICl9KWA7XHJcblxyXG4gICAgX3N1YnNjcmlwdGlvbjogP3J4anMkSVN1YnNjcmlwdGlvbjtcclxuICAgIF9yZXNvbHZlZDogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbiA9IG51bGw7XHJcbiAgICAgIHRoaXMuc3RhdGUgPSB7fTtcclxuICAgICAgdGhpcy5fcmVzb2x2ZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnREaWRNb3VudCgpOiB2b2lkIHtcclxuICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uID0gc3RyZWFtLnN1YnNjcmliZShuZXdTdGF0ZSA9PiB7XHJcbiAgICAgICAgdGhpcy5fcmVzb2x2ZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUobmV3U3RhdGUpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpOiB2b2lkIHtcclxuICAgICAgaWYgKHRoaXMuX3N1YnNjcmlwdGlvbiAhPSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKTogUmVhY3QuTm9kZSB7XHJcbiAgICAgIGlmICghdGhpcy5fcmVzb2x2ZWQpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBwcm9wcyA9IHtcclxuICAgICAgICAuLi50aGlzLnByb3BzLFxyXG4gICAgICAgIC4uLnRoaXMuc3RhdGUsXHJcbiAgICAgIH07XHJcbiAgICAgIHJldHVybiA8Q29tcG9zZWRDb21wb25lbnQgey4uLnByb3BzfSAvPjtcclxuICAgIH1cclxuICB9O1xyXG59XHJcbiJdfQ==