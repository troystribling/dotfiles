"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vscodeJsonrpc = require("vscode-jsonrpc");

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * vscode-jsonrpc's StreamMessageReader has a fatal flaw of throwing exceptions!
 * It's hard to catch asynchronous exceptions, and it crashes the Nuclide server.
 * Until this is addressed, this captures exceptions and emits errors instead.
 *
 * https://github.com/Microsoft/vscode-languageserver-node/issues/270
 */
class SafeStreamMessageReader extends _vscodeJsonrpc.StreamMessageReader {
  onData(data) {
    try {
      super.onData(data);
    } catch (err) {
      this.fireError(err); // Stop handling events, as stream errors are unrecoverable.
      // The owner of the reader should tear itself down as well.

      this.dispose();
      this.readable.removeAllListeners();
    }
  }

}

exports.default = SafeStreamMessageReader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zL1NhZmVTdHJlYW1NZXNzYWdlUmVhZGVyLmpzIl0sIm5hbWVzIjpbIlNhZmVTdHJlYW1NZXNzYWdlUmVhZGVyIiwiU3RyZWFtTWVzc2FnZVJlYWRlciIsIm9uRGF0YSIsImRhdGEiLCJlcnIiLCJmaXJlRXJyb3IiLCJkaXNwb3NlIiwicmVhZGFibGUiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsTUFBTUEsdUJBQU4sU0FBc0NDLGtDQUF0QyxDQUEwRDtBQUN2RUMsRUFBQUEsTUFBTSxDQUFDQyxJQUFELEVBQXdCO0FBQzVCLFFBQUk7QUFDRixZQUFNRCxNQUFOLENBQWFDLElBQWI7QUFDRCxLQUZELENBRUUsT0FBT0MsR0FBUCxFQUFZO0FBQ1osV0FBS0MsU0FBTCxDQUFlRCxHQUFmLEVBRFksQ0FFWjtBQUNBOztBQUNBLFdBQUtFLE9BQUw7QUFDQSxXQUFLQyxRQUFMLENBQWNDLGtCQUFkO0FBQ0Q7QUFDRjs7QUFYc0UiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93IHN0cmljdFxyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IHtTdHJlYW1NZXNzYWdlUmVhZGVyfSBmcm9tICd2c2NvZGUtanNvbnJwYyc7XHJcblxyXG4vKipcclxuICogdnNjb2RlLWpzb25ycGMncyBTdHJlYW1NZXNzYWdlUmVhZGVyIGhhcyBhIGZhdGFsIGZsYXcgb2YgdGhyb3dpbmcgZXhjZXB0aW9ucyFcclxuICogSXQncyBoYXJkIHRvIGNhdGNoIGFzeW5jaHJvbm91cyBleGNlcHRpb25zLCBhbmQgaXQgY3Jhc2hlcyB0aGUgTnVjbGlkZSBzZXJ2ZXIuXHJcbiAqIFVudGlsIHRoaXMgaXMgYWRkcmVzc2VkLCB0aGlzIGNhcHR1cmVzIGV4Y2VwdGlvbnMgYW5kIGVtaXRzIGVycm9ycyBpbnN0ZWFkLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L3ZzY29kZS1sYW5ndWFnZXNlcnZlci1ub2RlL2lzc3Vlcy8yNzBcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNhZmVTdHJlYW1NZXNzYWdlUmVhZGVyIGV4dGVuZHMgU3RyZWFtTWVzc2FnZVJlYWRlciB7XHJcbiAgb25EYXRhKGRhdGE6IEJ1ZmZlciB8IHN0cmluZykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgc3VwZXIub25EYXRhKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIHRoaXMuZmlyZUVycm9yKGVycik7XHJcbiAgICAgIC8vIFN0b3AgaGFuZGxpbmcgZXZlbnRzLCBhcyBzdHJlYW0gZXJyb3JzIGFyZSB1bnJlY292ZXJhYmxlLlxyXG4gICAgICAvLyBUaGUgb3duZXIgb2YgdGhlIHJlYWRlciBzaG91bGQgdGVhciBpdHNlbGYgZG93biBhcyB3ZWxsLlxyXG4gICAgICB0aGlzLmRpc3Bvc2UoKTtcclxuICAgICAgdGhpcy5yZWFkYWJsZS5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19