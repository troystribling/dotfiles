"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = debounce;

var _assert = _interopRequireDefault(require("assert"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
function debounce(func, wait, immediate = false) {
  // Taken from: https://github.com/jashkenas/underscore/blob/b10b2e6d72/underscore.js#L815.
  let timeout;
  let args;
  let context;
  let timestamp = 0;
  let result;

  const later = function () {
    const last = Date.now() - timestamp;

    if (last < wait && last >= 0) {
      timeout = setTimeout(later, wait - last);
    } else {
      timeout = null;

      if (!immediate) {
        (0, _assert.default)(args != null);
        result = func.apply(context, args);

        if (!timeout) {
          context = args = null;
        }
      }
    }
  };

  const debounced = function (...args_) {
    context = this;
    args = args_;
    timestamp = Date.now();
    const callNow = immediate && !timeout;

    if (!timeout) {
      timeout = setTimeout(later, wait);
    }

    if (callNow) {
      result = func.apply(context, args);
      context = args = null;
    }

    return result;
  };

  debounced.dispose = () => {
    if (timeout) {
      clearTimeout(timeout);
      timeout = context = args = null;
    }
  };

  return debounced;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zL2RlYm91bmNlLmpzIl0sIm5hbWVzIjpbImRlYm91bmNlIiwiZnVuYyIsIndhaXQiLCJpbW1lZGlhdGUiLCJ0aW1lb3V0IiwiYXJncyIsImNvbnRleHQiLCJ0aW1lc3RhbXAiLCJyZXN1bHQiLCJsYXRlciIsImxhc3QiLCJEYXRlIiwibm93Iiwic2V0VGltZW91dCIsImFwcGx5IiwiZGVib3VuY2VkIiwiYXJnc18iLCJjYWxsTm93IiwiZGlzcG9zZSIsImNsZWFyVGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOzs7O0FBWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUllLFNBQVNBLFFBQVQsQ0FNYkMsSUFOYSxFQU9iQyxJQVBhLEVBUWJDLFNBQW1CLEdBQUcsS0FSVCxFQVliO0FBQ0E7QUFDQSxNQUFJQyxPQUFKO0FBQ0EsTUFBSUMsSUFBSjtBQUNBLE1BQUlDLE9BQUo7QUFDQSxNQUFJQyxTQUFTLEdBQUcsQ0FBaEI7QUFDQSxNQUFJQyxNQUFKOztBQUVBLFFBQU1DLEtBQUssR0FBRyxZQUFXO0FBQ3ZCLFVBQU1DLElBQUksR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEtBQWFMLFNBQTFCOztBQUVBLFFBQUlHLElBQUksR0FBR1IsSUFBUCxJQUFlUSxJQUFJLElBQUksQ0FBM0IsRUFBOEI7QUFDNUJOLE1BQUFBLE9BQU8sR0FBR1MsVUFBVSxDQUFDSixLQUFELEVBQVFQLElBQUksR0FBR1EsSUFBZixDQUFwQjtBQUNELEtBRkQsTUFFTztBQUNMTixNQUFBQSxPQUFPLEdBQUcsSUFBVjs7QUFDQSxVQUFJLENBQUNELFNBQUwsRUFBZ0I7QUFDZCw2QkFBVUUsSUFBSSxJQUFJLElBQWxCO0FBQ0FHLFFBQUFBLE1BQU0sR0FBR1AsSUFBSSxDQUFDYSxLQUFMLENBQVdSLE9BQVgsRUFBb0JELElBQXBCLENBQVQ7O0FBQ0EsWUFBSSxDQUFDRCxPQUFMLEVBQWM7QUFDWkUsVUFBQUEsT0FBTyxHQUFHRCxJQUFJLEdBQUcsSUFBakI7QUFDRDtBQUNGO0FBQ0Y7QUFDRixHQWZEOztBQWlCQSxRQUFNVSxTQUFTLEdBQUcsVUFBUyxHQUFHQyxLQUFaLEVBQTBDO0FBQzFEVixJQUFBQSxPQUFPLEdBQUcsSUFBVjtBQUNBRCxJQUFBQSxJQUFJLEdBQUdXLEtBQVA7QUFDQVQsSUFBQUEsU0FBUyxHQUFHSSxJQUFJLENBQUNDLEdBQUwsRUFBWjtBQUNBLFVBQU1LLE9BQU8sR0FBR2QsU0FBUyxJQUFJLENBQUNDLE9BQTlCOztBQUNBLFFBQUksQ0FBQ0EsT0FBTCxFQUFjO0FBQ1pBLE1BQUFBLE9BQU8sR0FBR1MsVUFBVSxDQUFDSixLQUFELEVBQVFQLElBQVIsQ0FBcEI7QUFDRDs7QUFDRCxRQUFJZSxPQUFKLEVBQWE7QUFDWFQsTUFBQUEsTUFBTSxHQUFHUCxJQUFJLENBQUNhLEtBQUwsQ0FBV1IsT0FBWCxFQUFvQkQsSUFBcEIsQ0FBVDtBQUNBQyxNQUFBQSxPQUFPLEdBQUdELElBQUksR0FBRyxJQUFqQjtBQUNEOztBQUVELFdBQU9HLE1BQVA7QUFDRCxHQWREOztBQWdCQU8sRUFBQUEsU0FBUyxDQUFDRyxPQUFWLEdBQW9CLE1BQU07QUFDeEIsUUFBSWQsT0FBSixFQUFhO0FBQ1hlLE1BQUFBLFlBQVksQ0FBQ2YsT0FBRCxDQUFaO0FBQ0FBLE1BQUFBLE9BQU8sR0FBR0UsT0FBTyxHQUFHRCxJQUFJLEdBQUcsSUFBM0I7QUFDRDtBQUNGLEdBTEQ7O0FBT0EsU0FBT1UsU0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IGludmFyaWFudCBmcm9tICdhc3NlcnQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVib3VuY2U8XHJcbiAgVCxcclxuICBUQXJnczogQXJyYXk8VD4sXHJcbiAgVFJldHVybixcclxuICBURnVuYzogKC4uLlRBcmdzKSA9PiBUUmV0dXJuLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHNwYWNlLWJlZm9yZS1mdW5jdGlvbi1wYXJlblxyXG4+KFxyXG4gIGZ1bmM6IFRGdW5jLFxyXG4gIHdhaXQ6IG51bWJlcixcclxuICBpbW1lZGlhdGU/OiBib29sZWFuID0gZmFsc2UsXHJcbik6IHtcclxuICAoLi4uVEFyZ3MpOiBUUmV0dXJuIHwgdm9pZCxcclxuICBkaXNwb3NlKCk6IHZvaWQsXHJcbn0ge1xyXG4gIC8vIFRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9qYXNoa2VuYXMvdW5kZXJzY29yZS9ibG9iL2IxMGIyZTZkNzIvdW5kZXJzY29yZS5qcyNMODE1LlxyXG4gIGxldCB0aW1lb3V0OiA/VGltZW91dElEO1xyXG4gIGxldCBhcmdzOiA/VEFyZ3M7XHJcbiAgbGV0IGNvbnRleHQ6IGFueTtcclxuICBsZXQgdGltZXN0YW1wID0gMDtcclxuICBsZXQgcmVzdWx0OiBUUmV0dXJuIHwgdm9pZDtcclxuXHJcbiAgY29uc3QgbGF0ZXIgPSBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGxhc3QgPSBEYXRlLm5vdygpIC0gdGltZXN0YW1wO1xyXG5cclxuICAgIGlmIChsYXN0IDwgd2FpdCAmJiBsYXN0ID49IDApIHtcclxuICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQgLSBsYXN0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xyXG4gICAgICBpZiAoIWltbWVkaWF0ZSkge1xyXG4gICAgICAgIGludmFyaWFudChhcmdzICE9IG51bGwpO1xyXG4gICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcbiAgICAgICAgaWYgKCF0aW1lb3V0KSB7XHJcbiAgICAgICAgICBjb250ZXh0ID0gYXJncyA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZGVib3VuY2VkID0gZnVuY3Rpb24oLi4uYXJnc186IFRBcmdzKTogVFJldHVybiB8IHZvaWQge1xyXG4gICAgY29udGV4dCA9IHRoaXM7XHJcbiAgICBhcmdzID0gYXJnc187XHJcbiAgICB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xyXG4gICAgY29uc3QgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcclxuICAgIGlmICghdGltZW91dCkge1xyXG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2FsbE5vdykge1xyXG4gICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xyXG4gICAgICBjb250ZXh0ID0gYXJncyA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9O1xyXG5cclxuICBkZWJvdW5jZWQuZGlzcG9zZSA9ICgpID0+IHtcclxuICAgIGlmICh0aW1lb3V0KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuICAgICAgdGltZW91dCA9IGNvbnRleHQgPSBhcmdzID0gbnVsbDtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gZGVib3VuY2VkO1xyXG59XHJcbiJdfQ==