"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = observableFromReduxStore;

var _rxjsCompatUmdMin = require("rxjs-compat/bundles/rxjs-compat.umd.min.js");

var _event = require("./event");

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/*
 * Use this rather than Observable.from(store). While Redux properly implements
 * `Symbol.observable`, Flow doesn't know about it, and `Symbol.observable` requires
 * a polyfill that RxJS no longer provides.
 *
 * Matches the behavioral differences between Redux's vanilla `subscribe` and
 * its `Symbol.observable` implementation: yield the store's state to subscribers,
 * and emit on the initial subscription.
 */
function observableFromReduxStore(store) {
  return (0, _event.observableFromSubscribeFunction)(store.subscribe).startWith(null) // emit the current state on subscribe
  .map(() => store.getState());
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zL29ic2VydmFibGVGcm9tUmVkdXhTdG9yZS5qcyJdLCJuYW1lcyI6WyJvYnNlcnZhYmxlRnJvbVJlZHV4U3RvcmUiLCJzdG9yZSIsInN1YnNjcmliZSIsInN0YXJ0V2l0aCIsIm1hcCIsImdldFN0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUE7O0FBQ0E7O0FBYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQSx3QkFBVCxDQUNiQyxLQURhLEVBRUU7QUFDZixTQUFPLDRDQUFnQ0EsS0FBSyxDQUFDQyxTQUF0QyxFQUNKQyxTQURJLENBQ00sSUFETixFQUNZO0FBRFosR0FFSkMsR0FGSSxDQUVBLE1BQU1ILEtBQUssQ0FBQ0ksUUFBTixFQUZOLENBQVA7QUFHRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3cgc3RyaWN0LWxvY2FsXHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMtY29tcGF0L2J1bmRsZXMvcnhqcy1jb21wYXQudW1kLm1pbi5qcyc7XHJcbmltcG9ydCB7b2JzZXJ2YWJsZUZyb21TdWJzY3JpYmVGdW5jdGlvbn0gZnJvbSAnLi9ldmVudCc7XHJcblxyXG50eXBlIFN0b3JlPFM+ID0ge1xyXG4gIGdldFN0YXRlKCk6IFMsXHJcbiAgc3Vic2NyaWJlKGxpc3RlbmVyOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCxcclxufTtcclxuXHJcbi8qXHJcbiAqIFVzZSB0aGlzIHJhdGhlciB0aGFuIE9ic2VydmFibGUuZnJvbShzdG9yZSkuIFdoaWxlIFJlZHV4IHByb3Blcmx5IGltcGxlbWVudHNcclxuICogYFN5bWJvbC5vYnNlcnZhYmxlYCwgRmxvdyBkb2Vzbid0IGtub3cgYWJvdXQgaXQsIGFuZCBgU3ltYm9sLm9ic2VydmFibGVgIHJlcXVpcmVzXHJcbiAqIGEgcG9seWZpbGwgdGhhdCBSeEpTIG5vIGxvbmdlciBwcm92aWRlcy5cclxuICpcclxuICogTWF0Y2hlcyB0aGUgYmVoYXZpb3JhbCBkaWZmZXJlbmNlcyBiZXR3ZWVuIFJlZHV4J3MgdmFuaWxsYSBgc3Vic2NyaWJlYCBhbmRcclxuICogaXRzIGBTeW1ib2wub2JzZXJ2YWJsZWAgaW1wbGVtZW50YXRpb246IHlpZWxkIHRoZSBzdG9yZSdzIHN0YXRlIHRvIHN1YnNjcmliZXJzLFxyXG4gKiBhbmQgZW1pdCBvbiB0aGUgaW5pdGlhbCBzdWJzY3JpcHRpb24uXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvYnNlcnZhYmxlRnJvbVJlZHV4U3RvcmU8Uz4oXHJcbiAgc3RvcmU6IFN0b3JlPFM+LFxyXG4pOiBPYnNlcnZhYmxlPFM+IHtcclxuICByZXR1cm4gb2JzZXJ2YWJsZUZyb21TdWJzY3JpYmVGdW5jdGlvbihzdG9yZS5zdWJzY3JpYmUpXHJcbiAgICAuc3RhcnRXaXRoKG51bGwpIC8vIGVtaXQgdGhlIGN1cnJlbnQgc3RhdGUgb24gc3Vic2NyaWJlXHJcbiAgICAubWFwKCgpID0+IHN0b3JlLmdldFN0YXRlKCkpO1xyXG59XHJcbiJdfQ==