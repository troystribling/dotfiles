"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRuntimeInformation = getRuntimeInformation;
Object.defineProperty(exports, "__DEV__", {
  enumerable: true,
  get: function () {
    return _env.__DEV__;
  }
});

var _systemInfo = require("./system-info");

var _os = _interopRequireDefault(require("os"));

var _uuid = _interopRequireDefault(require("uuid"));

var _env = require("@atom-ide-community/nuclide-node-transpiler/lib/env");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
let cachedInformation = null;

function getCacheableRuntimeInformation() {
  // eslint-disable-next-line eqeqeq
  if (cachedInformation !== null) {
    return cachedInformation;
  }

  cachedInformation = {
    sessionId: _uuid.default.v4(),
    user: _os.default.userInfo().username,
    osType: (0, _systemInfo.getOsType)(),
    timestamp: 0,
    isClient: !(0, _systemInfo.isRunningInServer)(),
    isDevelopment: _env.__DEV__,
    atomVersion: typeof atom === 'object' ? (0, _systemInfo.getAtomVersion)() : '',
    nuclideVersion: (0, _systemInfo.getNuclideVersion)(),
    installerPackageVersion: 0,
    uptime: 0,
    // TODO (chenshen) fill following information.
    serverVersion: 0
  };
  return cachedInformation;
}

function getRuntimeInformation() {
  const runtimeInformation = { ...getCacheableRuntimeInformation(),
    timestamp: Date.now(),
    uptime: Math.floor(process.uptime() * 1000)
  };
  return runtimeInformation;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zL3J1bnRpbWUtaW5mby5qcyJdLCJuYW1lcyI6WyJjYWNoZWRJbmZvcm1hdGlvbiIsImdldENhY2hlYWJsZVJ1bnRpbWVJbmZvcm1hdGlvbiIsInNlc3Npb25JZCIsInV1aWQiLCJ2NCIsInVzZXIiLCJvcyIsInVzZXJJbmZvIiwidXNlcm5hbWUiLCJvc1R5cGUiLCJ0aW1lc3RhbXAiLCJpc0NsaWVudCIsImlzRGV2ZWxvcG1lbnQiLCJfX0RFVl9fIiwiYXRvbVZlcnNpb24iLCJhdG9tIiwibnVjbGlkZVZlcnNpb24iLCJpbnN0YWxsZXJQYWNrYWdlVmVyc2lvbiIsInVwdGltZSIsInNlcnZlclZlcnNpb24iLCJnZXRSdW50aW1lSW5mb3JtYXRpb24iLCJydW50aW1lSW5mb3JtYXRpb24iLCJEYXRlIiwibm93IiwiTWF0aCIsImZsb29yIiwicHJvY2VzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVlBOztBQU1BOztBQUNBOztBQUNBOzs7O0FBcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEwQkEsSUFBSUEsaUJBQWlCLEdBQUcsSUFBeEI7O0FBRUEsU0FBU0MsOEJBQVQsR0FBOEQ7QUFDNUQ7QUFDQSxNQUFJRCxpQkFBaUIsS0FBSyxJQUExQixFQUFnQztBQUM5QixXQUFPQSxpQkFBUDtBQUNEOztBQUVEQSxFQUFBQSxpQkFBaUIsR0FBRztBQUNsQkUsSUFBQUEsU0FBUyxFQUFFQyxjQUFLQyxFQUFMLEVBRE87QUFFbEJDLElBQUFBLElBQUksRUFBRUMsWUFBR0MsUUFBSCxHQUFjQyxRQUZGO0FBR2xCQyxJQUFBQSxNQUFNLEVBQUUsNEJBSFU7QUFJbEJDLElBQUFBLFNBQVMsRUFBRSxDQUpPO0FBS2xCQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxvQ0FMTztBQU1sQkMsSUFBQUEsYUFBYSxFQUFFQyxZQU5HO0FBT2xCQyxJQUFBQSxXQUFXLEVBQUUsT0FBT0MsSUFBUCxLQUFnQixRQUFoQixHQUEyQixpQ0FBM0IsR0FBOEMsRUFQekM7QUFRbEJDLElBQUFBLGNBQWMsRUFBRSxvQ0FSRTtBQVNsQkMsSUFBQUEsdUJBQXVCLEVBQUUsQ0FUUDtBQVVsQkMsSUFBQUEsTUFBTSxFQUFFLENBVlU7QUFXbEI7QUFDQUMsSUFBQUEsYUFBYSxFQUFFO0FBWkcsR0FBcEI7QUFlQSxTQUFPbkIsaUJBQVA7QUFDRDs7QUFFTSxTQUFTb0IscUJBQVQsR0FBcUQ7QUFDMUQsUUFBTUMsa0JBQWtCLEdBQUcsRUFDekIsR0FBR3BCLDhCQUE4QixFQURSO0FBRXpCUyxJQUFBQSxTQUFTLEVBQUVZLElBQUksQ0FBQ0MsR0FBTCxFQUZjO0FBR3pCTCxJQUFBQSxNQUFNLEVBQUVNLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxPQUFPLENBQUNSLE1BQVIsS0FBbUIsSUFBOUI7QUFIaUIsR0FBM0I7QUFLQSxTQUFPRyxrQkFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgZ2V0T3NUeXBlLFxyXG4gIGdldEF0b21WZXJzaW9uLFxyXG4gIGdldE51Y2xpZGVWZXJzaW9uLFxyXG4gIGlzUnVubmluZ0luU2VydmVyLFxyXG59IGZyb20gJy4vc3lzdGVtLWluZm8nO1xyXG5pbXBvcnQgb3MgZnJvbSAnb3MnO1xyXG5pbXBvcnQgdXVpZCBmcm9tICd1dWlkJztcclxuaW1wb3J0IHtfX0RFVl9ffSBmcm9tICdAYXRvbS1pZGUtY29tbXVuaXR5L251Y2xpZGUtbm9kZS10cmFuc3BpbGVyL2xpYi9lbnYnO1xyXG5cclxuZXhwb3J0IHR5cGUgUnVudGltZUluZm9ybWF0aW9uID0ge1xyXG4gIHNlc3Npb25JZDogc3RyaW5nLFxyXG4gIHVzZXI6IHN0cmluZyxcclxuICBvc1R5cGU6IHN0cmluZyxcclxuICB0aW1lc3RhbXA6IG51bWJlcixcclxuICBpc0NsaWVudDogYm9vbGVhbixcclxuICBpc0RldmVsb3BtZW50OiBib29sZWFuLFxyXG4gIGF0b21WZXJzaW9uOiBzdHJpbmcsXHJcbiAgbnVjbGlkZVZlcnNpb246IHN0cmluZyxcclxuICBpbnN0YWxsZXJQYWNrYWdlVmVyc2lvbjogbnVtYmVyLFxyXG4gIHNlcnZlclZlcnNpb246IG51bWJlcixcclxuICB1cHRpbWU6IG51bWJlcixcclxufTtcclxuXHJcbmxldCBjYWNoZWRJbmZvcm1hdGlvbiA9IG51bGw7XHJcblxyXG5mdW5jdGlvbiBnZXRDYWNoZWFibGVSdW50aW1lSW5mb3JtYXRpb24oKTogUnVudGltZUluZm9ybWF0aW9uIHtcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXHJcbiAgaWYgKGNhY2hlZEluZm9ybWF0aW9uICE9PSBudWxsKSB7XHJcbiAgICByZXR1cm4gY2FjaGVkSW5mb3JtYXRpb247XHJcbiAgfVxyXG5cclxuICBjYWNoZWRJbmZvcm1hdGlvbiA9IHtcclxuICAgIHNlc3Npb25JZDogdXVpZC52NCgpLFxyXG4gICAgdXNlcjogb3MudXNlckluZm8oKS51c2VybmFtZSxcclxuICAgIG9zVHlwZTogZ2V0T3NUeXBlKCksXHJcbiAgICB0aW1lc3RhbXA6IDAsXHJcbiAgICBpc0NsaWVudDogIWlzUnVubmluZ0luU2VydmVyKCksXHJcbiAgICBpc0RldmVsb3BtZW50OiBfX0RFVl9fLFxyXG4gICAgYXRvbVZlcnNpb246IHR5cGVvZiBhdG9tID09PSAnb2JqZWN0JyA/IGdldEF0b21WZXJzaW9uKCkgOiAnJyxcclxuICAgIG51Y2xpZGVWZXJzaW9uOiBnZXROdWNsaWRlVmVyc2lvbigpLFxyXG4gICAgaW5zdGFsbGVyUGFja2FnZVZlcnNpb246IDAsXHJcbiAgICB1cHRpbWU6IDAsXHJcbiAgICAvLyBUT0RPIChjaGVuc2hlbikgZmlsbCBmb2xsb3dpbmcgaW5mb3JtYXRpb24uXHJcbiAgICBzZXJ2ZXJWZXJzaW9uOiAwLFxyXG4gIH07XHJcblxyXG4gIHJldHVybiBjYWNoZWRJbmZvcm1hdGlvbjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFJ1bnRpbWVJbmZvcm1hdGlvbigpOiBSdW50aW1lSW5mb3JtYXRpb24ge1xyXG4gIGNvbnN0IHJ1bnRpbWVJbmZvcm1hdGlvbiA9IHtcclxuICAgIC4uLmdldENhY2hlYWJsZVJ1bnRpbWVJbmZvcm1hdGlvbigpLFxyXG4gICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxyXG4gICAgdXB0aW1lOiBNYXRoLmZsb29yKHByb2Nlc3MudXB0aW1lKCkgKiAxMDAwKSxcclxuICB9O1xyXG4gIHJldHVybiBydW50aW1lSW5mb3JtYXRpb247XHJcbn1cclxuXHJcbmV4cG9ydCB7X19ERVZfX307XHJcbiJdfQ==