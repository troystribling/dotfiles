"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createVsRawAdapterSpawnerService = createVsRawAdapterSpawnerService;
exports.getProcessTree = getProcessTree;
exports.getBuckRootFromUri = getBuckRootFromUri;
exports.getBuckRootFromPid = getBuckRootFromPid;
exports.realpath = realpath;
exports.exists = exists;
exports.getAdapterExecutableInfo = getAdapterExecutableInfo;
exports.VsRawAdapterSpawnerService = void 0;

var _process = require("@atom-ide-community/nuclide-commons/process");

var _VsAdapterSpawner = _interopRequireDefault(require("./VsAdapterSpawner"));

var _debuggerRegistry = require("./debugger-registry");

var _nuclideUri = _interopRequireDefault(require("@atom-ide-community/nuclide-commons/nuclideUri"));

var _fsPromise = _interopRequireDefault(require("@atom-ide-community/nuclide-commons/fsPromise"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class VsRawAdapterSpawnerService extends _VsAdapterSpawner.default {
  spawnAdapter(adapter) {
    return super.spawnAdapter(adapter);
  }

  write(input) {
    return super.write(input);
  }

  dispose() {
    return super.dispose();
  }

}

exports.VsRawAdapterSpawnerService = VsRawAdapterSpawnerService;

async function createVsRawAdapterSpawnerService() {
  return new VsRawAdapterSpawnerService();
}

async function getProcessTree() {
  return (0, _process.psTree)();
}

async function getBuckRootFromUri(uri) {
  if (!_nuclideUri.default.isAbsolute(uri)) {
    return null;
  }

  let path = uri;

  while (true) {
    const rootTest = _nuclideUri.default.join(path, '.buckconfig'); // eslint-disable-next-line no-await-in-loop


    if (await _fsPromise.default.exists(rootTest)) {
      return path;
    }

    const newPath = _nuclideUri.default.getParent(path);

    if (newPath === path) {
      break;
    }

    path = newPath;
  }

  return null;
}

async function getBuckRootFromPid(pid) {
  const path = await (0, _process.getAbsoluteBinaryPathForPid)(pid);

  if (path == null) {
    return null;
  }

  return getBuckRootFromUri(path);
}

async function realpath(path) {
  return _fsPromise.default.realpath(path);
}

async function exists(path) {
  return _fsPromise.default.exists(path);
}

async function getAdapterExecutableInfo(adapterType) {
  return (0, _debuggerRegistry.getAdapterExecutable)(adapterType);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1kZWJ1Z2dlci1jb21tb24vVlNDb2RlRGVidWdnZXJBZGFwdGVyU2VydmljZS5qcyJdLCJuYW1lcyI6WyJWc1Jhd0FkYXB0ZXJTcGF3bmVyU2VydmljZSIsIlZzQWRhcHRlclNwYXduZXIiLCJzcGF3bkFkYXB0ZXIiLCJhZGFwdGVyIiwid3JpdGUiLCJpbnB1dCIsImRpc3Bvc2UiLCJjcmVhdGVWc1Jhd0FkYXB0ZXJTcGF3bmVyU2VydmljZSIsImdldFByb2Nlc3NUcmVlIiwiZ2V0QnVja1Jvb3RGcm9tVXJpIiwidXJpIiwibnVjbGlkZVVyaSIsImlzQWJzb2x1dGUiLCJwYXRoIiwicm9vdFRlc3QiLCJqb2luIiwiZnNQcm9taXNlIiwiZXhpc3RzIiwibmV3UGF0aCIsImdldFBhcmVudCIsImdldEJ1Y2tSb290RnJvbVBpZCIsInBpZCIsInJlYWxwYXRoIiwiZ2V0QWRhcHRlckV4ZWN1dGFibGVJbmZvIiwiYWRhcHRlclR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFhTyxNQUFNQSwwQkFBTixTQUF5Q0MseUJBQXpDLENBQTBEO0FBQy9EQyxFQUFBQSxZQUFZLENBQ1ZDLE9BRFUsRUFFNkI7QUFDdkMsV0FBTyxNQUFNRCxZQUFOLENBQW1CQyxPQUFuQixDQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLEtBQUssQ0FBQ0MsS0FBRCxFQUErQjtBQUNsQyxXQUFPLE1BQU1ELEtBQU4sQ0FBWUMsS0FBWixDQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLE9BQU8sR0FBa0I7QUFDdkIsV0FBTyxNQUFNQSxPQUFOLEVBQVA7QUFDRDs7QUFiOEQ7Ozs7QUFnQjFELGVBQWVDLGdDQUFmLEdBRUw7QUFDQSxTQUFPLElBQUlQLDBCQUFKLEVBQVA7QUFDRDs7QUFFTSxlQUFlUSxjQUFmLEdBQTZEO0FBQ2xFLFNBQU8sc0JBQVA7QUFDRDs7QUFFTSxlQUFlQyxrQkFBZixDQUFrQ0MsR0FBbEMsRUFBaUU7QUFDdEUsTUFBSSxDQUFDQyxvQkFBV0MsVUFBWCxDQUFzQkYsR0FBdEIsQ0FBTCxFQUFpQztBQUMvQixXQUFPLElBQVA7QUFDRDs7QUFDRCxNQUFJRyxJQUFJLEdBQUdILEdBQVg7O0FBRUEsU0FBTyxJQUFQLEVBQWE7QUFDWCxVQUFNSSxRQUFRLEdBQUdILG9CQUFXSSxJQUFYLENBQWdCRixJQUFoQixFQUFzQixhQUF0QixDQUFqQixDQURXLENBRVg7OztBQUNBLFFBQUksTUFBTUcsbUJBQVVDLE1BQVYsQ0FBaUJILFFBQWpCLENBQVYsRUFBc0M7QUFDcEMsYUFBT0QsSUFBUDtBQUNEOztBQUNELFVBQU1LLE9BQU8sR0FBR1Asb0JBQVdRLFNBQVgsQ0FBcUJOLElBQXJCLENBQWhCOztBQUNBLFFBQUlLLE9BQU8sS0FBS0wsSUFBaEIsRUFBc0I7QUFDcEI7QUFDRDs7QUFFREEsSUFBQUEsSUFBSSxHQUFHSyxPQUFQO0FBQ0Q7O0FBRUQsU0FBTyxJQUFQO0FBQ0Q7O0FBRU0sZUFBZUUsa0JBQWYsQ0FBa0NDLEdBQWxDLEVBQWlFO0FBQ3RFLFFBQU1SLElBQUksR0FBRyxNQUFNLDBDQUE0QlEsR0FBNUIsQ0FBbkI7O0FBQ0EsTUFBSVIsSUFBSSxJQUFJLElBQVosRUFBa0I7QUFDaEIsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBT0osa0JBQWtCLENBQUNJLElBQUQsQ0FBekI7QUFDRDs7QUFFTSxlQUFlUyxRQUFmLENBQXdCVCxJQUF4QixFQUF1RDtBQUM1RCxTQUFPRyxtQkFBVU0sUUFBVixDQUFtQlQsSUFBbkIsQ0FBUDtBQUNEOztBQUVNLGVBQWVJLE1BQWYsQ0FBc0JKLElBQXRCLEVBQXNEO0FBQzNELFNBQU9HLG1CQUFVQyxNQUFWLENBQWlCSixJQUFqQixDQUFQO0FBQ0Q7O0FBRU0sZUFBZVUsd0JBQWYsQ0FDTEMsV0FESyxFQUU2QjtBQUNsQyxTQUFPLDRDQUFxQkEsV0FBckIsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCB0eXBlIHtDb25uZWN0YWJsZU9ic2VydmFibGV9IGZyb20gJ3J4anMtY29tcGF0L2J1bmRsZXMvcnhqcy1jb21wYXQudW1kLm1pbi5qcyc7XHJcbmltcG9ydCB0eXBlIHtWU0FkYXB0ZXJFeGVjdXRhYmxlSW5mbywgVnNBZGFwdGVyVHlwZX0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB0eXBlIHtQcm9jZXNzSW5mbywgUHJvY2Vzc01lc3NhZ2V9IGZyb20gJ0BhdG9tLWlkZS1jb21tdW5pdHkvbnVjbGlkZS1jb21tb25zL3Byb2Nlc3MnO1xyXG5cclxuaW1wb3J0IHtwc1RyZWV9IGZyb20gJ0BhdG9tLWlkZS1jb21tdW5pdHkvbnVjbGlkZS1jb21tb25zL3Byb2Nlc3MnO1xyXG5pbXBvcnQgVnNBZGFwdGVyU3Bhd25lciBmcm9tICcuL1ZzQWRhcHRlclNwYXduZXInO1xyXG5pbXBvcnQge2dldEFkYXB0ZXJFeGVjdXRhYmxlfSBmcm9tICcuL2RlYnVnZ2VyLXJlZ2lzdHJ5JztcclxuaW1wb3J0IG51Y2xpZGVVcmkgZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMvbnVjbGlkZVVyaSc7XHJcbmltcG9ydCBmc1Byb21pc2UgZnJvbSAnQGF0b20taWRlLWNvbW11bml0eS9udWNsaWRlLWNvbW1vbnMvZnNQcm9taXNlJztcclxuaW1wb3J0IHtnZXRBYnNvbHV0ZUJpbmFyeVBhdGhGb3JQaWR9IGZyb20gJ0BhdG9tLWlkZS1jb21tdW5pdHkvbnVjbGlkZS1jb21tb25zL3Byb2Nlc3MnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFZzUmF3QWRhcHRlclNwYXduZXJTZXJ2aWNlIGV4dGVuZHMgVnNBZGFwdGVyU3Bhd25lciB7XHJcbiAgc3Bhd25BZGFwdGVyKFxyXG4gICAgYWRhcHRlcjogVlNBZGFwdGVyRXhlY3V0YWJsZUluZm8sXHJcbiAgKTogQ29ubmVjdGFibGVPYnNlcnZhYmxlPFByb2Nlc3NNZXNzYWdlPiB7XHJcbiAgICByZXR1cm4gc3VwZXIuc3Bhd25BZGFwdGVyKGFkYXB0ZXIpO1xyXG4gIH1cclxuXHJcbiAgd3JpdGUoaW5wdXQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgcmV0dXJuIHN1cGVyLndyaXRlKGlucHV0KTtcclxuICB9XHJcblxyXG4gIGRpc3Bvc2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVZzUmF3QWRhcHRlclNwYXduZXJTZXJ2aWNlKCk6IFByb21pc2U8XHJcbiAgVnNSYXdBZGFwdGVyU3Bhd25lclNlcnZpY2UsXHJcbj4ge1xyXG4gIHJldHVybiBuZXcgVnNSYXdBZGFwdGVyU3Bhd25lclNlcnZpY2UoKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2Nlc3NUcmVlKCk6IFByb21pc2U8QXJyYXk8UHJvY2Vzc0luZm8+PiB7XHJcbiAgcmV0dXJuIHBzVHJlZSgpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QnVja1Jvb3RGcm9tVXJpKHVyaTogc3RyaW5nKTogUHJvbWlzZTw/c3RyaW5nPiB7XHJcbiAgaWYgKCFudWNsaWRlVXJpLmlzQWJzb2x1dGUodXJpKSkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCBwYXRoID0gdXJpO1xyXG5cclxuICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgY29uc3Qgcm9vdFRlc3QgPSBudWNsaWRlVXJpLmpvaW4ocGF0aCwgJy5idWNrY29uZmlnJyk7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYXdhaXQtaW4tbG9vcFxyXG4gICAgaWYgKGF3YWl0IGZzUHJvbWlzZS5leGlzdHMocm9vdFRlc3QpKSB7XHJcbiAgICAgIHJldHVybiBwYXRoO1xyXG4gICAgfVxyXG4gICAgY29uc3QgbmV3UGF0aCA9IG51Y2xpZGVVcmkuZ2V0UGFyZW50KHBhdGgpO1xyXG4gICAgaWYgKG5ld1BhdGggPT09IHBhdGgpIHtcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcblxyXG4gICAgcGF0aCA9IG5ld1BhdGg7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEJ1Y2tSb290RnJvbVBpZChwaWQ6IG51bWJlcik6IFByb21pc2U8P3N0cmluZz4ge1xyXG4gIGNvbnN0IHBhdGggPSBhd2FpdCBnZXRBYnNvbHV0ZUJpbmFyeVBhdGhGb3JQaWQocGlkKTtcclxuICBpZiAocGF0aCA9PSBudWxsKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIHJldHVybiBnZXRCdWNrUm9vdEZyb21VcmkocGF0aCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFscGF0aChwYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gIHJldHVybiBmc1Byb21pc2UucmVhbHBhdGgocGF0aCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBleGlzdHMocGF0aDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgcmV0dXJuIGZzUHJvbWlzZS5leGlzdHMocGF0aCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBZGFwdGVyRXhlY3V0YWJsZUluZm8oXHJcbiAgYWRhcHRlclR5cGU6IFZzQWRhcHRlclR5cGUsXHJcbik6IFByb21pc2U8VlNBZGFwdGVyRXhlY3V0YWJsZUluZm8+IHtcclxuICByZXR1cm4gZ2V0QWRhcHRlckV4ZWN1dGFibGUoYWRhcHRlclR5cGUpO1xyXG59XHJcbiJdfQ==