import { TextEditor } from "atom";
/**
 * Find if an editor's largeness based on the given threashold
 * @param editor
 * @param largeLineCount lineCountIfLarge threashold
 * @param longLineLength lineLengthIfLong threashold
 * @returns the largness score if editor is large. Otherwise it returns 0 (a small file)
 */
export declare function largeness(editor: TextEditor, largeLineCount?: number, longLineLength?: number): number;
/**
 * Find if an editor has a line that is longer than the given threashold
 * @param editor
 * @param threashold largeLineCount threashold
 * @returns the line count if it is larger than threashold. Otherwise it returns 0 (a small file)
 */
export declare function lineCountIfLarge(editor: TextEditor, threashold: number): number;
/**
 * Find if an editor has a line that is longer than the given threashold
 * @param editor
 * @param threashold lineLengthForRow threashold
 * @param lineCount count up to this line. Default is {editor.getLineCount()}
 * @returns the first line length that has a length larger than threashold. If no line is found, it returns 0
 */
export declare function lineLengthIfLong(editor: TextEditor, threashold: number, lineCount?: number): number;
