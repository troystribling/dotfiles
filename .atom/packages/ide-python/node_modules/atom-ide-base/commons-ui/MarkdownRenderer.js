"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMarkdownRenderer = getMarkdownRenderer;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Use built-in markdown renderer when the markdown service is not available
let render = undefined;

async function getMarkdownRenderer() {
  if (!render) {
    //@ts-ignore
    render = (await Promise.resolve().then(() => _interopRequireWildcard(require("atom-ide-markdown-service/modules/renderer")))).render;
  }

  return render;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy1jb21tb25zLXVpL01hcmtkb3duUmVuZGVyZXIudHMiXSwibmFtZXMiOlsicmVuZGVyIiwidW5kZWZpbmVkIiwiZ2V0TWFya2Rvd25SZW5kZXJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUlBLElBQUlBLE1BQTZDLEdBQUdDLFNBQXBEOztBQUVPLGVBQWVDLG1CQUFmLEdBQXFDO0FBQzFDLE1BQUksQ0FBQ0YsTUFBTCxFQUFhO0FBQ1g7QUFDQUEsSUFBQUEsTUFBTSxHQUFHLENBQUMsbUVBQWEsNENBQWIsR0FBRCxFQUE2REEsTUFBdEU7QUFDRDs7QUFDRCxTQUFPQSxNQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVc2UgYnVpbHQtaW4gbWFya2Rvd24gcmVuZGVyZXIgd2hlbiB0aGUgbWFya2Rvd24gc2VydmljZSBpcyBub3QgYXZhaWxhYmxlXG5cbmltcG9ydCB7IE1hcmtkb3duU2VydmljZSB9IGZyb20gXCIuLi90eXBlcy1wYWNrYWdlcy9tYWluXCJcblxubGV0IHJlbmRlcjogTWFya2Rvd25TZXJ2aWNlW1wicmVuZGVyXCJdIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNYXJrZG93blJlbmRlcmVyKCkge1xuICBpZiAoIXJlbmRlcikge1xuICAgIC8vQHRzLWlnbm9yZVxuICAgIHJlbmRlciA9IChhd2FpdCBpbXBvcnQoXCJhdG9tLWlkZS1tYXJrZG93bi1zZXJ2aWNlL21vZHVsZXMvcmVuZGVyZXJcIikpLnJlbmRlclxuICB9XG4gIHJldHVybiByZW5kZXJcbn1cbiJdfQ==