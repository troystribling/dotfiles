"use strict";

var _$template = require("solid-js/web").template;

var _$delegateEvents = require("solid-js/web").delegateEvents;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewContainer = ViewContainer;
exports.DATATIP_ACTIONS = void 0;

var _web = require("solid-js/web");

var _MarkdownView = require("./MarkdownView");

var _SnippetView = require("./SnippetView");

var _ReactView = require("./ReactView");

const _tmpl$ = _$template(`<div></div>`, 2);

const DATATIP_ACTIONS = Object.freeze({
  PIN: "PIN",
  CLOSE: "CLOSE"
});
exports.DATATIP_ACTIONS = DATATIP_ACTIONS;
const IconsForAction = {
  [DATATIP_ACTIONS.PIN]: "pin",
  [DATATIP_ACTIONS.CLOSE]: "x"
};

/**
 * a component for a decoration pane
 */
function ViewContainer(props) {
  return (() => {
    const _el$ = _tmpl$.cloneNode(true);

    (0, _web.spread)(_el$, () => props.onMouseDown, false, true);

    _$spread(_el$, () => props.onClickCapture, false, true);

    (0, _web.insert)(_el$, (() => {
      const _c$ = (0, _web.memo)(() => props.component !== undefined, true);

      return () => _c$() ? (0, _web.createComponent)(_ReactView.ReactView, (0, _web.mergeProps)(props.component, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$2 = (0, _web.memo)(() => props.snippet !== undefined, true);

      return () => _c$2() ? (0, _web.createComponent)(_SnippetView.SnippetView, (0, _web.mergeProps)(props.snippet, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$3 = (0, _web.memo)(() => props.markdown !== undefined, true);

      return () => _c$3() ? (0, _web.createComponent)(_MarkdownView.MarkdownView, (0, _web.mergeProps)(props.markdown, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$4 = (0, _web.memo)(() => props.action !== undefined, true);

      return () => _c$4() ? (() => {
        const _el$2 = _tmpl$.cloneNode(true);

        _el$2.$$click = () => {
          var _props$onActionClick;

          (_props$onActionClick = props.onActionClick) === null || _props$onActionClick === void 0 ? void 0 : _props$onActionClick.call(props, event);
        };

        (0, _web.effect)(_p$ => {
          const _v$ = `datatip-pin-button icon-${IconsForAction[props.action]}`,
                _v$2 = props.actionTitle;
          _v$ !== _p$._v$ && (_el$2.className = _p$._v$ = _v$);
          _v$2 !== _p$._v$2 && (0, _web.setAttribute)(_el$2, "title", _p$._v$2 = _v$2);
          return _p$;
        }, {
          _v$: undefined,
          _v$2: undefined
        });
        return _el$2;
      })() : undefined;
    })(), null);
    (0, _web.effect)(() => {
      var _props$className;

      return _el$.className = (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : "datatip-element";
    });
    return _el$;
  })();
}

_$delegateEvents(["click"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy1jb21tb25zLXVpL2Zsb2F0LXBhbmUvVmlld0NvbnRhaW5lci50c3giXSwibmFtZXMiOlsiREFUQVRJUF9BQ1RJT05TIiwiT2JqZWN0IiwiZnJlZXplIiwiUElOIiwiQ0xPU0UiLCJJY29uc0ZvckFjdGlvbiIsIlZpZXdDb250YWluZXIiLCJwcm9wcyIsIm9uTW91c2VEb3duIiwib25DbGlja0NhcHR1cmUiLCJjb21wb25lbnQiLCJ1bmRlZmluZWQiLCJzbmlwcGV0IiwibWFya2Rvd24iLCJhY3Rpb24iLCJvbkFjdGlvbkNsaWNrIiwiZXZlbnQiLCJhY3Rpb25UaXRsZSIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLGVBQWUsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDM0NDLEVBQUFBLEdBQUcsRUFBRSxLQURzQztBQUUzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRm9DLENBQWQsQ0FBeEI7O0FBS1AsTUFBTUMsY0FBYyxHQUFHO0FBQ3JCLEdBQUNMLGVBQWUsQ0FBQ0csR0FBakIsR0FBdUIsS0FERjtBQUVyQixHQUFDSCxlQUFlLENBQUNJLEtBQWpCLEdBQXlCO0FBRkosQ0FBdkI7O0FBaUJBO0FBQ0E7QUFDQTtBQUNPLFNBQVNFLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQXFDO0FBQzFDO0FBQUE7O0FBQUEsaUNBQzREQSxLQUFLLENBQUNDLFdBRGxFOztBQUFBLHlCQUNtRkQsS0FBSyxDQUFDRSxjQUR6Rjs7QUFBQTtBQUFBLHVDQUVLRixLQUFLLENBQUNHLFNBQU4sS0FBb0JDLFNBRnpCOztBQUFBLG1CQUVLLDZFQUErQ0osS0FBSyxDQUFDRyxTQUFyRCxTQUFxRUMsU0FGMUU7QUFBQTtBQUFBO0FBQUEsd0NBR0tKLEtBQUssQ0FBQ0ssT0FBTixLQUFrQkQsU0FIdkI7O0FBQUEsbUJBR0ssa0ZBQStDSixLQUFLLENBQUNLLE9BQXJELFNBQW1FRCxTQUh4RTtBQUFBO0FBQUE7QUFBQSx3Q0FJS0osS0FBSyxDQUFDTSxRQUFOLEtBQW1CRixTQUp4Qjs7QUFBQSxtQkFJSyxvRkFBaURKLEtBQUssQ0FBQ00sUUFBdkQsU0FBc0VGLFNBSjNFO0FBQUE7QUFBQTtBQUFBLHdDQUtLSixLQUFLLENBQUNPLE1BQU4sS0FBaUJILFNBTHRCOztBQUFBLG1CQUtLO0FBQUE7O0FBQUEsd0JBR1ksTUFBTTtBQUFBOztBQUNiLGtDQUFBSixLQUFLLENBQUNRLGFBQU4sbUZBQUFSLEtBQUssRUFBaUJTLEtBQWpCLENBQUw7QUFDRCxTQUxKOztBQUFBO0FBQUEsc0JBRWUsMkJBQTBCWCxjQUFjLENBQUNFLEtBQUssQ0FBQ08sTUFBUCxDQUFlLEVBRnRFO0FBQUEsdUJBTVVQLEtBQUssQ0FBQ1UsV0FOaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFRR04sU0FiUjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxrREFDa0JKLEtBQUssQ0FBQ1csU0FEeEIsK0RBQ3FDLGlCQURyQztBQUFBO0FBQUE7QUFBQTtBQWdCRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcmtkb3duVmlldywgUHJvcHMgYXMgTWFya2Rvd25WaWV3UHJvcHMgfSBmcm9tIFwiLi9NYXJrZG93blZpZXdcIlxuaW1wb3J0IHsgU25pcHBldFZpZXcsIFByb3BzIGFzIFNuaXBwZXRWaWV3UHJvcHMgfSBmcm9tIFwiLi9TbmlwcGV0Vmlld1wiXG5pbXBvcnQgeyBSZWFjdFZpZXcsIFByb3BzIGFzIFJlYWN0Vmlld1Byb3BzIH0gZnJvbSBcIi4vUmVhY3RWaWV3XCJcblxuZXhwb3J0IGNvbnN0IERBVEFUSVBfQUNUSU9OUyA9IE9iamVjdC5mcmVlemUoe1xuICBQSU46IFwiUElOXCIsXG4gIENMT1NFOiBcIkNMT1NFXCIsXG59KVxuXG5jb25zdCBJY29uc0ZvckFjdGlvbiA9IHtcbiAgW0RBVEFUSVBfQUNUSU9OUy5QSU5dOiBcInBpblwiLFxuICBbREFUQVRJUF9BQ1RJT05TLkNMT1NFXTogXCJ4XCIsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBjb21wb25lbnQ/OiBSZWFjdFZpZXdQcm9wc1xuICBtYXJrZG93bj86IE1hcmtkb3duVmlld1Byb3BzXG4gIHNuaXBwZXQ/OiBTbmlwcGV0Vmlld1Byb3BzXG4gIGFjdGlvbj86IHN0cmluZ1xuICBhY3Rpb25UaXRsZT86IHN0cmluZ1xuICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgb25BY3Rpb25DbGljaz86IChldmVudDogYW55KSA9PiB2b2lkXG4gIG9uTW91c2VEb3duPzogKGV2ZW50OiBhbnkpID0+IHZvaWRcbiAgb25DbGlja0NhcHR1cmU/OiAoZXZlbnQ6IGFueSkgPT4gdm9pZFxufVxuXG4vKipcbiAqIGEgY29tcG9uZW50IGZvciBhIGRlY29yYXRpb24gcGFuZVxuICovXG5leHBvcnQgZnVuY3Rpb24gVmlld0NvbnRhaW5lcihwcm9wczogUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17cHJvcHMuY2xhc3NOYW1lID8/IFwiZGF0YXRpcC1lbGVtZW50XCJ9IHsuLi5wcm9wcy5vbk1vdXNlRG93bn0gey4uLnByb3BzLm9uQ2xpY2tDYXB0dXJlfT5cbiAgICAgIHtwcm9wcy5jb21wb25lbnQgIT09IHVuZGVmaW5lZCA/IDxSZWFjdFZpZXcgey4uLnByb3BzLmNvbXBvbmVudH0gLz4gOiB1bmRlZmluZWR9XG4gICAgICB7cHJvcHMuc25pcHBldCAhPT0gdW5kZWZpbmVkID8gPFNuaXBwZXRWaWV3IHsuLi5wcm9wcy5zbmlwcGV0fSAvPiA6IHVuZGVmaW5lZH1cbiAgICAgIHtwcm9wcy5tYXJrZG93biAhPT0gdW5kZWZpbmVkID8gPE1hcmtkb3duVmlldyB7Li4ucHJvcHMubWFya2Rvd259IC8+IDogdW5kZWZpbmVkfVxuICAgICAge3Byb3BzLmFjdGlvbiAhPT0gdW5kZWZpbmVkID8gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtgZGF0YXRpcC1waW4tYnV0dG9uIGljb24tJHtJY29uc0ZvckFjdGlvbltwcm9wcy5hY3Rpb25dfWB9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgcHJvcHMub25BY3Rpb25DbGljaz8uKGV2ZW50KVxuICAgICAgICAgIH19XG4gICAgICAgICAgdGl0bGU9e3Byb3BzLmFjdGlvblRpdGxlfVxuICAgICAgICAvPlxuICAgICAgKSA6IHVuZGVmaW5lZH1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19