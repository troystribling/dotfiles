import type { ViewRegistry } from "atom";
/** A function to detect if an item (view) is visible in Atom.
 * This is useful to skip code excecution or updating when the item is not visible.
 * @param item this is an item that is stored in {ViewRegistry}. It has the same type of the argument that you pass to `atom.view.getView(item)`.
 */
export declare function isItemVisible(item: Parameters<ViewRegistry["getView"]>[0] | undefined | null): boolean;
/** A function to detect if an HTMLElement is visible. It doesn't consider the Atom context.
 * To detect if an item is visible in Atom use {isItemVisible} instead
 * This is useful to skip code excecution or updating when the element is not visible.
 * @param element
 */
export declare function isElementVisible(element: HTMLElement): boolean;
/**
 * Get the HTMLElement of an item using `.getElement()` or `.element`
 */
export declare function getItemElement(item: object | undefined | null): HTMLElement | undefined;
