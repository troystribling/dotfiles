{
  "_args": [
    [
      {
        "raw": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
        "spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
        "type": "local"
      },
      "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/apm-install-dir-118522-1764-1nx4n5.j5hv20rudi"
    ]
  ],
  "_from": "../d-118522-1764-t49lot.64aq0k9/package.tgz",
  "_id": "ide-python@1.0.0",
  "_inCache": true,
  "_location": "/ide-python",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
    "spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118522-1764-t49lot.64aq0k9/package.tgz",
  "_shasum": "8eafefc72a0279aaeb59060c1e1ee64cdb9d22b0",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/d-118522-1764-t49lot.64aq0k9/package.tgz",
  "_where": "/private/var/folders/sw/29ny48hs3wj9v9m9rkcd56h00000gn/T/apm-install-dir-118522-1764-1nx4n5.j5hv20rudi",
  "bugs": {
    "url": "https://github.com/lgeiger/ide-python/issues"
  },
  "configSchema": {
    "python": {
      "title": "Python Executable",
      "order": 1,
      "type": "string",
      "default": "python",
      "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server."
    },
    "pylsConfigurationSources": {
      "order": 2,
      "type": "array",
      "default": [
        "pycodestyle",
        "flake8"
      ],
      "description": "List of configuration sources to use.",
      "items": {
        "type": "string",
        "enum": [
          "pycodestyle",
          "flake8"
        ]
      }
    },
    "ropeFolder": {
      "order": 3,
      "type": "string",
      "default": ".ropeproject",
      "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
    },
    "pylsPlugins": {
      "title": "Python Language Server Plugins",
      "type": "object",
      "properties": {
        "jedi_completion": {
          "title": "Jedi Completion",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable Jedi Completion."
            }
          }
        },
        "jedi_definition": {
          "title": "Jedi Definition",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable Jedi Definition."
            }
          }
        },
        "jedi_hover": {
          "title": "Jedi Hover",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable Jedi Hover."
            }
          }
        },
        "jedi_references": {
          "title": "Jedi References",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable Jedi References."
            }
          }
        },
        "jedi_signature_help": {
          "title": "Jedi Signature Help",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable Jedi Signature Help."
            }
          }
        },
        "jedi_symbols": {
          "title": "Jedi Symbols",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "order": 1,
              "default": true,
              "description": "Enable or disable Jedi Symbols."
            },
            "all_scopes": {
              "title": "All Scopes",
              "type": "boolean",
              "default": true,
              "description": "If enabled lists the names of all scopes instead of only the module namespace."
            }
          }
        },
        "mccabe": {
          "title": "McCabe",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable McCabe."
            },
            "threshold": {
              "title": "Threshold",
              "type": "number",
              "default": 15,
              "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
            }
          }
        },
        "pycodestyle": {
          "title": "PyCodeStyle",
          "type": "object",
          "properties": {
            "enabled": {
              "order": 1,
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable PyCodeStyle."
            },
            "select": {
              "order": 2,
              "title": "Select",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "description": "Select errors and warnings."
            },
            "ignore": {
              "order": 3,
              "title": "Ignore",
              "type": "array",
              "default": [
                "E121",
                "E123",
                "E126",
                "E226",
                "E24",
                "E704",
                "W503"
              ],
              "items": {
                "type": "string"
              },
              "description": "Ignore errors and warnings."
            },
            "hangClosing": {
              "order": 4,
              "title": "Hang Closing",
              "type": "boolean",
              "default": false,
              "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
            },
            "maxLineLength": {
              "order": 5,
              "title": "Max Line Length",
              "type": "number",
              "default": 79,
              "description": "Set maximum allowed line length."
            }
          }
        },
        "pydocstyle": {
          "title": "PyDocStyle",
          "type": "object",
          "properties": {
            "enabled": {
              "order": 1,
              "title": "Enabled",
              "type": "boolean",
              "default": false,
              "description": "Enable or disable PyDocStyle."
            },
            "match": {
              "order": 2,
              "title": "Match",
              "type": "string",
              "default": "(?!test_).*\\.py",
              "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
            },
            "matchDir": {
              "order": 3,
              "title": "Match Dir",
              "type": "string",
              "default": "[^\\.].*",
              "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
            },
            "select": {
              "order": 4,
              "title": "Select",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "description": "Select errors and warnings"
            },
            "ignore": {
              "order": 5,
              "title": "Ignore",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "description": "Ignore errors and warnings"
            },
            "convention": {
              "order": 6,
              "title": "Convention",
              "type": "string",
              "enum": [
                "pep257",
                "numpy",
                ""
              ],
              "default": "",
              "description": "Choose the basic list of checked errors by specifying an existing convention."
            },
            "addSelect": {
              "order": 7,
              "title": "Add Select",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "description": "Select errors and warnings in addition to the specified convention."
            },
            "addIgnore": {
              "order": 8,
              "title": "Add Ignore",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "description": "Ignore errors and warnings in addition to the specified convention."
            }
          }
        },
        "pyflakes": {
          "title": "PyFlakes",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable PyFlakes."
            }
          }
        },
        "rope_completion": {
          "title": "Rope Completion",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": false,
              "description": "Enable or disable the plugin."
            }
          }
        },
        "yapf": {
          "title": "Yapf",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": false,
              "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
            }
          }
        },
        "autopep8": {
          "title": "autopep8",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "type": "boolean",
              "default": true,
              "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
            }
          }
        }
      }
    }
  },
  "consumedServices": {
    "atom-ide-busy-signal": {
      "versions": {
        "0.1.0": "consumeBusySignal"
      }
    },
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    },
    "signature-help": {
      "versions": {
        "0.1.0": "consumeSignatureHelp"
      }
    }
  },
  "dependencies": {
    "atom-languageclient": "^0.9.5"
  },
  "description": "Python language support for Atom-IDE",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.21.0 <2.0.0"
  },
  "enhancedScopes": [
    "source.python"
  ],
  "homepage": "https://github.com/lgeiger/ide-python#readme",
  "keywords": [
    "ide",
    "python",
    "atom-ide",
    "autocomplete",
    "jedi",
    "rope",
    "pyflakes",
    "pycodestyle",
    "pydocstyle",
    "autopep8",
    "yapf",
    "mccabe",
    "languageserver",
    "language-server-protocol",
    "language-client"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "ide-python",
  "optionalDependencies": {},
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "code-highlight": {
      "versions": {
        "0.1.0": "provideCodeHighlight"
      }
    },
    "code-format.range": {
      "versions": {
        "0.1.0": "provideCodeFormat"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    }
  },
  "readme": "# IDE-python package\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/lgeiger/ide-python.svg)](https://greenkeeper.io/)\n\nPython language support for [Atom-IDE](https://ide.atom.io/), powered by the [Python language server](https://github.com/palantir/python-language-server).\n\n![ide-python](https://user-images.githubusercontent.com/13285808/30352538-b9687a76-9820-11e7-8876-c22751645d36.png)\n\n## Requirements\n\n[`ide-python`](https://atom.io/packages/ide-python) requires [Atom `1.21+`](https://atom.io/), [Python language server `0.19+`](https://github.com/palantir/python-language-server) and the [`atom-ide-ui`](https://atom.io/packages/atom-ide-ui) package to expose the functionality within Atom.\n\n## Feature Providers\n\n* [Jedi](https://github.com/davidhalter/jedi) for Completions, Definitions, Hover, References, Signature Help, and Symbols\n* [Rope](https://github.com/python-rope/rope) for Completions and renaming\n* [Pyflakes](https://github.com/PyCQA/pyflakes) linter to detect various errors\n* [McCabe](https://github.com/PyCQA/mccabe) linter for complexity checking\n* [pycodestyle](https://github.com/PyCQA/pycodestyle) linter for style checking\n* [pydocstyle](https://github.com/PyCQA/pydocstyle) linter for docstring style checking\n* [autopep8](https://github.com/hhatto/autopep8) for code formatting (preferred over YAPF)\n* [YAPF](https://github.com/google/yapf) for code formatting\n\n## Installation\n\n### Language Server\n\nInstall the language server (0.19.0 or newer) with:\n\n```bash\npython -m pip install 'python-language-server[all]'\n```\n\nThis command will install the language server and all supported feature providers, which can be enabled or disabled in the settings. Checkout the [official installation instructions](https://github.com/palantir/python-language-server#installation) on how to install only the providers you need.\n\nYou can verify that everything is correctly installed by running `python -m pyls --help` from the command line.\nIt should return\n\n```bash\nusage: pyls [-h] [--tcp] [--host HOST] [--port PORT]\n            [--log-config LOG_CONFIG | --log-file LOG_FILE] [-v]\n\nPython Language Server\n...\n```\n\nIf you have installed `pyls` using a non default installation of Python, you can add modify the *Python Executable* config in the `ide-python` settings.\n\n### Atom Package\n\nInstall `ide-python` and [`atom-ide-ui`](https://atom.io/packages/atom-ide-ui) from _Install_ in Atom's settings or run:\n\n```bash\napm install atom-ide-ui\napm install ide-python\n```\n\n## Configuration\n\nConfiguration is loaded from zero or more configuration sources.\n\n* `pycodestyle`: discovered in `~/.config/pycodestyle`, `setup.cfg`, `tox.ini` and `pycodestyle.cfg`\n* `flake8`: discovered in `~/.config/flake8`, `setup.cfg`, `tox.ini` and `flake8.cfg`\n\nOverall configuration is computed first from user configuration (in home directory), overridden by configuration in the `ide-python` settings, and then overridden by configuration discovered in the current project.\n\n## Contributing\n\nAlways feel free to help out! Whether it's [filing bugs and feature requests](https://github.com/lgeiger/ide-python/issues/new) or working on some of the [open issues](https://github.com/lgeiger/ide-python/issues), Atom's [guide for contributing to packages](https://github.com/atom/atom/blob/master/docs/contributing-to-packages.md) will help get you started.\n\n## License\n\nMIT License. See [the license](LICENSE.md) for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lgeiger/ide-python.git"
  },
  "version": "1.0.0"
}
