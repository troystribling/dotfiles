var _chai = require('chai');

var _languageclient = require('../../lib/languageclient');

var _documentSyncAdapter = require('../../lib/adapters/document-sync-adapter');

var _documentSyncAdapter2 = _interopRequireDefault(_documentSyncAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('DocumentSyncAdapter', () => {
  describe('canAdapt', () => {
    it('returns true if v2 incremental change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: _languageclient.TextDocumentSyncKind.Incremental
      });
      (0, _chai.expect)(result).to.be.true;
    });

    it('returns true if v2 full change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: _languageclient.TextDocumentSyncKind.Full
      });
      (0, _chai.expect)(result).to.be.true;
    });

    it('returns false if v2 none change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: _languageclient.TextDocumentSyncKind.None
      });
      (0, _chai.expect)(result).to.be.false;
    });

    it('returns true if v3 incremental change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: { change: _languageclient.TextDocumentSyncKind.Incremental }
      });
      (0, _chai.expect)(result).to.be.true;
    });

    it('returns true if v3 full change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: { change: _languageclient.TextDocumentSyncKind.Full }
      });
      (0, _chai.expect)(result).to.be.true;
    });

    it('returns false if v3 none change notifications are supported', () => {
      const result = _documentSyncAdapter2.default.canAdapt({
        textDocumentSync: { change: _languageclient.TextDocumentSyncKind.None }
      });
      (0, _chai.expect)(result).to.be.false;
    });
  });

  describe('constructor', () => {
    function create(textDocumentSync) {
      return new _documentSyncAdapter2.default(null, textDocumentSync, () => false);
    }

    it('sets _documentSyncKind correctly Incremental for v2 capabilities', () => {
      const result = create(_languageclient.TextDocumentSyncKind.Incremental)._documentSyncKind;
      (0, _chai.expect)(result).equals(_languageclient.TextDocumentSyncKind.Incremental);
    });

    it('sets _documentSyncKind correctly Full for v2 capabilities', () => {
      const result = create(_languageclient.TextDocumentSyncKind.Full)._documentSyncKind;
      (0, _chai.expect)(result).equals(_languageclient.TextDocumentSyncKind.Full);
    });

    it('sets _documentSyncKind correctly Incremental for v3 capabilities', () => {
      const result = create({ change: _languageclient.TextDocumentSyncKind.Incremental })._documentSyncKind;
      (0, _chai.expect)(result).equals(_languageclient.TextDocumentSyncKind.Incremental);
    });

    it('sets _documentSyncKind correctly Full for v3 capabilities', () => {
      const result = create({ change: _languageclient.TextDocumentSyncKind.Full })._documentSyncKind;
      (0, _chai.expect)(result).equals(_languageclient.TextDocumentSyncKind.Full);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Rlc3QvYWRhcHRlcnMvZG9jdW1lbnQtc3luYy1hZGFwdGVyLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsInJlc3VsdCIsImNhbkFkYXB0IiwidGV4dERvY3VtZW50U3luYyIsIkluY3JlbWVudGFsIiwidG8iLCJiZSIsInRydWUiLCJGdWxsIiwiTm9uZSIsImZhbHNlIiwiY2hhbmdlIiwiY3JlYXRlIiwiX2RvY3VtZW50U3luY0tpbmQiLCJlcXVhbHMiXSwibWFwcGluZ3MiOiJBQUVBOztBQUNBOztBQUNBOzs7Ozs7QUFFQUEsU0FBUyxxQkFBVCxFQUFnQyxNQUFNO0FBQ3BDQSxXQUFTLFVBQVQsRUFBcUIsTUFBTTtBQUN6QkMsT0FBRyxtRUFBSCxFQUF3RSxNQUFNO0FBQzVFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLHFDQUFxQkM7QUFERyxPQUE3QixDQUFmO0FBR0Esd0JBQU9ILE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJDLElBQXJCO0FBQ0QsS0FMRDs7QUFPQVAsT0FBRyw0REFBSCxFQUFpRSxNQUFNO0FBQ3JFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLHFDQUFxQks7QUFERyxPQUE3QixDQUFmO0FBR0Esd0JBQU9QLE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJDLElBQXJCO0FBQ0QsS0FMRDs7QUFPQVAsT0FBRyw2REFBSCxFQUFrRSxNQUFNO0FBQ3RFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLHFDQUFxQk07QUFERyxPQUE3QixDQUFmO0FBR0Esd0JBQU9SLE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJJLEtBQXJCO0FBQ0QsS0FMRDs7QUFPQVYsT0FBRyxtRUFBSCxFQUF3RSxNQUFNO0FBQzVFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLEVBQUNRLFFBQVEscUNBQXFCUCxXQUE5QjtBQUR3QixPQUE3QixDQUFmO0FBR0Esd0JBQU9ILE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJDLElBQXJCO0FBQ0QsS0FMRDs7QUFPQVAsT0FBRyw0REFBSCxFQUFpRSxNQUFNO0FBQ3JFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLEVBQUNRLFFBQVEscUNBQXFCSCxJQUE5QjtBQUR3QixPQUE3QixDQUFmO0FBR0Esd0JBQU9QLE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJDLElBQXJCO0FBQ0QsS0FMRDs7QUFPQVAsT0FBRyw2REFBSCxFQUFrRSxNQUFNO0FBQ3RFLFlBQU1DLFNBQVMsOEJBQW9CQyxRQUFwQixDQUE2QjtBQUMxQ0MsMEJBQWtCLEVBQUNRLFFBQVEscUNBQXFCRixJQUE5QjtBQUR3QixPQUE3QixDQUFmO0FBR0Esd0JBQU9SLE1BQVAsRUFBZUksRUFBZixDQUFrQkMsRUFBbEIsQ0FBcUJJLEtBQXJCO0FBQ0QsS0FMRDtBQU1ELEdBMUNEOztBQTRDQVgsV0FBUyxhQUFULEVBQXdCLE1BQU07QUFDNUIsYUFBU2EsTUFBVCxDQUFnQlQsZ0JBQWhCLEVBQWtDO0FBQ2hDLGFBQU8sa0NBQXlCLElBQXpCLEVBQXFDQSxnQkFBckMsRUFBdUQsTUFBTSxLQUE3RCxDQUFQO0FBQ0Q7O0FBRURILE9BQUcsa0VBQUgsRUFBdUUsTUFBTTtBQUMzRSxZQUFNQyxTQUFTVyxPQUFPLHFDQUFxQlIsV0FBNUIsRUFBeUNTLGlCQUF4RDtBQUNBLHdCQUFPWixNQUFQLEVBQWVhLE1BQWYsQ0FBc0IscUNBQXFCVixXQUEzQztBQUNELEtBSEQ7O0FBS0FKLE9BQUcsMkRBQUgsRUFBZ0UsTUFBTTtBQUNwRSxZQUFNQyxTQUFTVyxPQUFPLHFDQUFxQkosSUFBNUIsRUFBa0NLLGlCQUFqRDtBQUNBLHdCQUFPWixNQUFQLEVBQWVhLE1BQWYsQ0FBc0IscUNBQXFCTixJQUEzQztBQUNELEtBSEQ7O0FBS0FSLE9BQUcsa0VBQUgsRUFBdUUsTUFBTTtBQUMzRSxZQUFNQyxTQUFTVyxPQUFPLEVBQUNELFFBQVEscUNBQXFCUCxXQUE5QixFQUFQLEVBQW1EUyxpQkFBbEU7QUFDQSx3QkFBT1osTUFBUCxFQUFlYSxNQUFmLENBQXNCLHFDQUFxQlYsV0FBM0M7QUFDRCxLQUhEOztBQUtBSixPQUFHLDJEQUFILEVBQWdFLE1BQU07QUFDcEUsWUFBTUMsU0FBU1csT0FBTyxFQUFDRCxRQUFRLHFDQUFxQkgsSUFBOUIsRUFBUCxFQUE0Q0ssaUJBQTNEO0FBQ0Esd0JBQU9aLE1BQVAsRUFBZWEsTUFBZixDQUFzQixxQ0FBcUJOLElBQTNDO0FBQ0QsS0FIRDtBQUlELEdBeEJEO0FBeUJELENBdEVEIiwiZmlsZSI6ImRvY3VtZW50LXN5bmMtYWRhcHRlci50ZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHtleHBlY3R9IGZyb20gJ2NoYWknO1xuaW1wb3J0IHtUZXh0RG9jdW1lbnRTeW5jS2luZH0gZnJvbSAnLi4vLi4vbGliL2xhbmd1YWdlY2xpZW50JztcbmltcG9ydCBEb2N1bWVudFN5bmNBZGFwdGVyIGZyb20gJy4uLy4uL2xpYi9hZGFwdGVycy9kb2N1bWVudC1zeW5jLWFkYXB0ZXInO1xuXG5kZXNjcmliZSgnRG9jdW1lbnRTeW5jQWRhcHRlcicsICgpID0+IHtcbiAgZGVzY3JpYmUoJ2NhbkFkYXB0JywgKCkgPT4ge1xuICAgIGl0KCdyZXR1cm5zIHRydWUgaWYgdjIgaW5jcmVtZW50YWwgY2hhbmdlIG5vdGlmaWNhdGlvbnMgYXJlIHN1cHBvcnRlZCcsICgpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IERvY3VtZW50U3luY0FkYXB0ZXIuY2FuQWRhcHQoe1xuICAgICAgICB0ZXh0RG9jdW1lbnRTeW5jOiBUZXh0RG9jdW1lbnRTeW5jS2luZC5JbmNyZW1lbnRhbCxcbiAgICAgIH0pO1xuICAgICAgZXhwZWN0KHJlc3VsdCkudG8uYmUudHJ1ZTtcbiAgICB9KTtcblxuICAgIGl0KCdyZXR1cm5zIHRydWUgaWYgdjIgZnVsbCBjaGFuZ2Ugbm90aWZpY2F0aW9ucyBhcmUgc3VwcG9ydGVkJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gRG9jdW1lbnRTeW5jQWRhcHRlci5jYW5BZGFwdCh7XG4gICAgICAgIHRleHREb2N1bWVudFN5bmM6IFRleHREb2N1bWVudFN5bmNLaW5kLkZ1bGwsXG4gICAgICB9KTtcbiAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmJlLnRydWU7XG4gICAgfSk7XG5cbiAgICBpdCgncmV0dXJucyBmYWxzZSBpZiB2MiBub25lIGNoYW5nZSBub3RpZmljYXRpb25zIGFyZSBzdXBwb3J0ZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBEb2N1bWVudFN5bmNBZGFwdGVyLmNhbkFkYXB0KHtcbiAgICAgICAgdGV4dERvY3VtZW50U3luYzogVGV4dERvY3VtZW50U3luY0tpbmQuTm9uZSxcbiAgICAgIH0pO1xuICAgICAgZXhwZWN0KHJlc3VsdCkudG8uYmUuZmFsc2U7XG4gICAgfSk7XG5cbiAgICBpdCgncmV0dXJucyB0cnVlIGlmIHYzIGluY3JlbWVudGFsIGNoYW5nZSBub3RpZmljYXRpb25zIGFyZSBzdXBwb3J0ZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBEb2N1bWVudFN5bmNBZGFwdGVyLmNhbkFkYXB0KHtcbiAgICAgICAgdGV4dERvY3VtZW50U3luYzoge2NoYW5nZTogVGV4dERvY3VtZW50U3luY0tpbmQuSW5jcmVtZW50YWx9LFxuICAgICAgfSk7XG4gICAgICBleHBlY3QocmVzdWx0KS50by5iZS50cnVlO1xuICAgIH0pO1xuXG4gICAgaXQoJ3JldHVybnMgdHJ1ZSBpZiB2MyBmdWxsIGNoYW5nZSBub3RpZmljYXRpb25zIGFyZSBzdXBwb3J0ZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBEb2N1bWVudFN5bmNBZGFwdGVyLmNhbkFkYXB0KHtcbiAgICAgICAgdGV4dERvY3VtZW50U3luYzoge2NoYW5nZTogVGV4dERvY3VtZW50U3luY0tpbmQuRnVsbH0sXG4gICAgICB9KTtcbiAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmJlLnRydWU7XG4gICAgfSk7XG5cbiAgICBpdCgncmV0dXJucyBmYWxzZSBpZiB2MyBub25lIGNoYW5nZSBub3RpZmljYXRpb25zIGFyZSBzdXBwb3J0ZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBEb2N1bWVudFN5bmNBZGFwdGVyLmNhbkFkYXB0KHtcbiAgICAgICAgdGV4dERvY3VtZW50U3luYzoge2NoYW5nZTogVGV4dERvY3VtZW50U3luY0tpbmQuTm9uZX0sXG4gICAgICB9KTtcbiAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmJlLmZhbHNlO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnY29uc3RydWN0b3InLCAoKSA9PiB7XG4gICAgZnVuY3Rpb24gY3JlYXRlKHRleHREb2N1bWVudFN5bmMpIHtcbiAgICAgIHJldHVybiBuZXcgRG9jdW1lbnRTeW5jQWRhcHRlcigobnVsbDogYW55KSwgdGV4dERvY3VtZW50U3luYywgKCkgPT4gZmFsc2UpO1xuICAgIH1cblxuICAgIGl0KCdzZXRzIF9kb2N1bWVudFN5bmNLaW5kIGNvcnJlY3RseSBJbmNyZW1lbnRhbCBmb3IgdjIgY2FwYWJpbGl0aWVzJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gY3JlYXRlKFRleHREb2N1bWVudFN5bmNLaW5kLkluY3JlbWVudGFsKS5fZG9jdW1lbnRTeW5jS2luZDtcbiAgICAgIGV4cGVjdChyZXN1bHQpLmVxdWFscyhUZXh0RG9jdW1lbnRTeW5jS2luZC5JbmNyZW1lbnRhbCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2V0cyBfZG9jdW1lbnRTeW5jS2luZCBjb3JyZWN0bHkgRnVsbCBmb3IgdjIgY2FwYWJpbGl0aWVzJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gY3JlYXRlKFRleHREb2N1bWVudFN5bmNLaW5kLkZ1bGwpLl9kb2N1bWVudFN5bmNLaW5kO1xuICAgICAgZXhwZWN0KHJlc3VsdCkuZXF1YWxzKFRleHREb2N1bWVudFN5bmNLaW5kLkZ1bGwpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3NldHMgX2RvY3VtZW50U3luY0tpbmQgY29ycmVjdGx5IEluY3JlbWVudGFsIGZvciB2MyBjYXBhYmlsaXRpZXMnLCAoKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBjcmVhdGUoe2NoYW5nZTogVGV4dERvY3VtZW50U3luY0tpbmQuSW5jcmVtZW50YWx9KS5fZG9jdW1lbnRTeW5jS2luZDtcbiAgICAgIGV4cGVjdChyZXN1bHQpLmVxdWFscyhUZXh0RG9jdW1lbnRTeW5jS2luZC5JbmNyZW1lbnRhbCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2V0cyBfZG9jdW1lbnRTeW5jS2luZCBjb3JyZWN0bHkgRnVsbCBmb3IgdjMgY2FwYWJpbGl0aWVzJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gY3JlYXRlKHtjaGFuZ2U6IFRleHREb2N1bWVudFN5bmNLaW5kLkZ1bGx9KS5fZG9jdW1lbnRTeW5jS2luZDtcbiAgICAgIGV4cGVjdChyZXN1bHQpLmVxdWFscyhUZXh0RG9jdW1lbnRTeW5jS2luZC5GdWxsKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==