"use strict";
const atom_mocha_test_runner_1 = require("atom-mocha-test-runner");
const testRunner = atom_mocha_test_runner_1.createRunner({
    htmlTitle: `atom-languageclient Tests - pid ${process.pid}`,
    reporter: process.env.MOCHA_REPORTER || 'spec',
}, (mocha) => {
    mocha.timeout(parseInt(process.env.MOCHA_TIMEOUT || '5000', 10));
    if (process.env.APPVEYOR_API_URL) {
        mocha.reporter(require('mocha-appveyor-reporter'));
    }
});
module.exports = function runnerWrapper(options) {
    // Replace the test path with the current path since Atom's internal runner
    // picks the wrong one by default
    options.testPaths = [__dirname];
    return testRunner(options);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVubmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdGVzdC9ydW5uZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG1FQUFzRDtBQUV0RCxNQUFNLFVBQVUsR0FBRyxxQ0FBWSxDQUM3QjtJQUNFLFNBQVMsRUFBRSxtQ0FBbUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtJQUMzRCxRQUFRLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLElBQUksTUFBTTtDQUMvQyxFQUNELENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDUixLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsSUFBSSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNqRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNqQyxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7SUFDckQsQ0FBQztBQUNILENBQUMsQ0FDRixDQUFDO0FBRUYsaUJBQVMsdUJBQXVCLE9BQXlCO0lBQ3ZELDJFQUEyRTtJQUMzRSxpQ0FBaUM7SUFDakMsT0FBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDN0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVzdFJ1bm5lclBhcmFtcyB9IGZyb20gXCJhdG9tXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVJ1bm5lciB9IGZyb20gJ2F0b20tbW9jaGEtdGVzdC1ydW5uZXInO1xyXG5cclxuY29uc3QgdGVzdFJ1bm5lciA9IGNyZWF0ZVJ1bm5lcihcclxuICB7XHJcbiAgICBodG1sVGl0bGU6IGBhdG9tLWxhbmd1YWdlY2xpZW50IFRlc3RzIC0gcGlkICR7cHJvY2Vzcy5waWR9YCxcclxuICAgIHJlcG9ydGVyOiBwcm9jZXNzLmVudi5NT0NIQV9SRVBPUlRFUiB8fCAnc3BlYycsXHJcbiAgfSxcclxuICAobW9jaGEpID0+IHtcclxuICAgIG1vY2hhLnRpbWVvdXQocGFyc2VJbnQocHJvY2Vzcy5lbnYuTU9DSEFfVElNRU9VVCB8fCAnNTAwMCcsIDEwKSk7XHJcbiAgICBpZiAocHJvY2Vzcy5lbnYuQVBQVkVZT1JfQVBJX1VSTCkge1xyXG4gICAgICBtb2NoYS5yZXBvcnRlcihyZXF1aXJlKCdtb2NoYS1hcHB2ZXlvci1yZXBvcnRlcicpKTtcclxuICAgIH1cclxuICB9LFxyXG4pO1xyXG5cclxuZXhwb3J0ID0gZnVuY3Rpb24gcnVubmVyV3JhcHBlcihvcHRpb25zOiBUZXN0UnVubmVyUGFyYW1zKSB7XHJcbiAgLy8gUmVwbGFjZSB0aGUgdGVzdCBwYXRoIHdpdGggdGhlIGN1cnJlbnQgcGF0aCBzaW5jZSBBdG9tJ3MgaW50ZXJuYWwgcnVubmVyXHJcbiAgLy8gcGlja3MgdGhlIHdyb25nIG9uZSBieSBkZWZhdWx0XHJcbiAgb3B0aW9ucy50ZXN0UGF0aHMgPSBbX19kaXJuYW1lXTtcclxuICByZXR1cm4gdGVzdFJ1bm5lcihvcHRpb25zKTtcclxufTtcclxuIl19