"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Utils = require("../lib/utils");
const helpers_1 = require("./helpers");
const chai_1 = require("chai");
const atom_1 = require("atom");
describe('Utils', () => {
    describe('getWordAtPosition', () => {
        let editor;
        beforeEach(() => {
            editor = helpers_1.createFakeEditor('test.txt');
            editor.setText('blah test1234 test-two');
        });
        it('gets the word at position from a text editor', () => {
            // "blah"
            let range = Utils.getWordAtPosition(editor, new atom_1.Point(0, 0));
            chai_1.expect(range.serialize()).eql([[0, 0], [0, 4]]);
            // "test1234"
            range = Utils.getWordAtPosition(editor, new atom_1.Point(0, 7));
            chai_1.expect(range.serialize()).eql([[0, 5], [0, 13]]);
            // "test"
            range = Utils.getWordAtPosition(editor, new atom_1.Point(0, 14));
            chai_1.expect(range.serialize()).eql([[0, 14], [0, 18]]);
        });
        it('returns empty ranges for non-words', () => {
            const range = Utils.getWordAtPosition(editor, new atom_1.Point(0, 4));
            chai_1.expect(range.serialize()).eql([[0, 4], [0, 4]]);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3Rlc3QvdXRpbHMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUFzQztBQUN0Qyx1Q0FBNkM7QUFDN0MsK0JBQThCO0FBQzlCLCtCQUE2QjtBQUU3QixRQUFRLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtJQUNyQixRQUFRLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxFQUFFO1FBQ2pDLElBQUksTUFBVyxDQUFDO1FBQ2hCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDZCxNQUFNLEdBQUcsMEJBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDdEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLEdBQUcsRUFBRTtZQUN0RCxTQUFTO1lBQ1QsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxJQUFJLFlBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3RCxhQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRWhELGFBQWE7WUFDYixLQUFLLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxJQUFJLFlBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6RCxhQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRWpELFNBQVM7WUFDVCxLQUFLLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxJQUFJLFlBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMxRCxhQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLG9DQUFvQyxFQUFFLEdBQUcsRUFBRTtZQUM1QyxNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLElBQUksWUFBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9ELGFBQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi4vbGliL3V0aWxzJztcbmltcG9ydCB7IGNyZWF0ZUZha2VFZGl0b3IgfSBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IHsgZXhwZWN0IH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQgeyBQb2ludCB9IGZyb20gJ2F0b20nO1xuXG5kZXNjcmliZSgnVXRpbHMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdnZXRXb3JkQXRQb3NpdGlvbicsICgpID0+IHtcbiAgICBsZXQgZWRpdG9yOiBhbnk7XG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICBlZGl0b3IgPSBjcmVhdGVGYWtlRWRpdG9yKCd0ZXN0LnR4dCcpO1xuICAgICAgZWRpdG9yLnNldFRleHQoJ2JsYWggdGVzdDEyMzQgdGVzdC10d28nKTtcbiAgICB9KTtcblxuICAgIGl0KCdnZXRzIHRoZSB3b3JkIGF0IHBvc2l0aW9uIGZyb20gYSB0ZXh0IGVkaXRvcicsICgpID0+IHtcbiAgICAgIC8vIFwiYmxhaFwiXG4gICAgICBsZXQgcmFuZ2UgPSBVdGlscy5nZXRXb3JkQXRQb3NpdGlvbihlZGl0b3IsIG5ldyBQb2ludCgwLCAwKSk7XG4gICAgICBleHBlY3QocmFuZ2Uuc2VyaWFsaXplKCkpLmVxbChbWzAsIDBdLCBbMCwgNF1dKTtcblxuICAgICAgLy8gXCJ0ZXN0MTIzNFwiXG4gICAgICByYW5nZSA9IFV0aWxzLmdldFdvcmRBdFBvc2l0aW9uKGVkaXRvciwgbmV3IFBvaW50KDAsIDcpKTtcbiAgICAgIGV4cGVjdChyYW5nZS5zZXJpYWxpemUoKSkuZXFsKFtbMCwgNV0sIFswLCAxM11dKTtcblxuICAgICAgLy8gXCJ0ZXN0XCJcbiAgICAgIHJhbmdlID0gVXRpbHMuZ2V0V29yZEF0UG9zaXRpb24oZWRpdG9yLCBuZXcgUG9pbnQoMCwgMTQpKTtcbiAgICAgIGV4cGVjdChyYW5nZS5zZXJpYWxpemUoKSkuZXFsKFtbMCwgMTRdLCBbMCwgMThdXSk7XG4gICAgfSk7XG5cbiAgICBpdCgncmV0dXJucyBlbXB0eSByYW5nZXMgZm9yIG5vbi13b3JkcycsICgpID0+IHtcbiAgICAgIGNvbnN0IHJhbmdlID0gVXRpbHMuZ2V0V29yZEF0UG9zaXRpb24oZWRpdG9yLCBuZXcgUG9pbnQoMCwgNCkpO1xuICAgICAgZXhwZWN0KHJhbmdlLnNlcmlhbGl6ZSgpKS5lcWwoW1swLCA0XSwgWzAsIDRdXSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=