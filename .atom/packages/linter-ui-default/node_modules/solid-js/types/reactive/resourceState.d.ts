import { StateNode, SetStateFunction, State } from "./state";
export interface LoadStateFunction<T> {
    (v: {
        [P in keyof T]?: () => Promise<T[P]> | T[P];
    }, reconcilerFn?: (v: Partial<T>) => (state: State<T>) => void): void;
}
export declare function createResourceState<T extends StateNode>(state: T | State<T>, options?: {
    name?: string;
}): [
    State<T & {
        loading: {
            [P in keyof T]: boolean;
        };
    }>,
    LoadStateFunction<T>,
    SetStateFunction<T>
];
